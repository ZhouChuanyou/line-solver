# Generated from java-escape by ANTLR 4.5
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\66")
        buf.write("\u0168\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b")
        buf.write("\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24")
        buf.write("\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3")
        buf.write("#\3$\3$\3$\3%\3%\3%\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3")
        buf.write(")\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3")
        buf.write("+\3+\3+\3+\3+\3+\3,\5,\u011a\n,\3,\6,\u011d\n,\r,\16,")
        buf.write("\u011e\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\7\61")
        buf.write("\u012c\n\61\f\61\16\61\u012f\13\61\3\62\3\62\3\63\3\63")
        buf.write("\7\63\u0135\n\63\f\63\16\63\u0138\13\63\3\63\3\63\3\64")
        buf.write("\3\64\3\64\5\64\u013f\n\64\3\64\5\64\u0142\n\64\3\64\3")
        buf.write("\64\3\64\3\64\5\64\u0148\n\64\3\65\6\65\u014b\n\65\r\65")
        buf.write("\16\65\u014c\3\66\3\66\5\66\u0151\n\66\3\66\3\66\3\67")
        buf.write("\6\67\u0156\n\67\r\67\16\67\u0157\3\67\3\67\38\38\38\3")
        buf.write("8\78\u0160\n8\f8\168\u0163\138\38\38\38\38\3\u0161\29")
        buf.write("\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+U,W-Y.[/]\60_\61a\62c\2e\63g\64i\2k\2m\65o\66\3\2")
        buf.write("\t\4\2\62;bb\4\2C\\c|\4\2$$^^\3\2\62;\4\2GGgg\4\2--//")
        buf.write("\5\2\13\13\17\17\"\"\u0171\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2")
        buf.write("e\3\2\2\2\2g\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\3q\3\2\2\2")
        buf.write("\5y\3\2\2\2\7~\3\2\2\2\t\u0085\3\2\2\2\13\u0087\3\2\2")
        buf.write("\2\r\u0089\3\2\2\2\17\u008b\3\2\2\2\21\u0092\3\2\2\2\23")
        buf.write("\u009a\3\2\2\2\25\u00a1\3\2\2\2\27\u00aa\3\2\2\2\31\u00af")
        buf.write("\3\2\2\2\33\u00b5\3\2\2\2\35\u00bc\3\2\2\2\37\u00c1\3")
        buf.write("\2\2\2!\u00c3\3\2\2\2#\u00c5\3\2\2\2%\u00c7\3\2\2\2\'")
        buf.write("\u00c9\3\2\2\2)\u00cb\3\2\2\2+\u00cd\3\2\2\2-\u00cf\3")
        buf.write("\2\2\2/\u00d1\3\2\2\2\61\u00d3\3\2\2\2\63\u00d6\3\2\2")
        buf.write("\2\65\u00d8\3\2\2\2\67\u00da\3\2\2\29\u00dd\3\2\2\2;\u00e0")
        buf.write("\3\2\2\2=\u00e2\3\2\2\2?\u00e4\3\2\2\2A\u00e7\3\2\2\2")
        buf.write("C\u00ea\3\2\2\2E\u00ed\3\2\2\2G\u00f0\3\2\2\2I\u00f3\3")
        buf.write("\2\2\2K\u00f6\3\2\2\2M\u00f8\3\2\2\2O\u00fb\3\2\2\2Q\u00fe")
        buf.write("\3\2\2\2S\u0107\3\2\2\2U\u010f\3\2\2\2W\u011c\3\2\2\2")
        buf.write("Y\u0120\3\2\2\2[\u0122\3\2\2\2]\u0124\3\2\2\2_\u0126\3")
        buf.write("\2\2\2a\u0128\3\2\2\2c\u0130\3\2\2\2e\u0132\3\2\2\2g\u0147")
        buf.write("\3\2\2\2i\u014a\3\2\2\2k\u014e\3\2\2\2m\u0155\3\2\2\2")
        buf.write("o\u015b\3\2\2\2qr\7r\2\2rs\7c\2\2st\7e\2\2tu\7m\2\2uv")
        buf.write("\7c\2\2vw\7i\2\2wx\7g\2\2x\4\3\2\2\2yz\7v\2\2z{\7g\2\2")
        buf.write("{|\7u\2\2|}\7v\2\2}\6\3\2\2\2~\177\7f\2\2\177\u0080\7")
        buf.write("g\2\2\u0080\u0081\7h\2\2\u0081\u0082\7o\2\2\u0082\u0083")
        buf.write("\7c\2\2\u0083\u0084\7v\2\2\u0084\b\3\2\2\2\u0085\u0086")
        buf.write("\7}\2\2\u0086\n\3\2\2\2\u0087\u0088\7.\2\2\u0088\f\3\2")
        buf.write("\2\2\u0089\u008a\7\177\2\2\u008a\16\3\2\2\2\u008b\u008c")
        buf.write("\7f\2\2\u008c\u008d\7g\2\2\u008d\u008e\7h\2\2\u008e\u008f")
        buf.write("\7x\2\2\u008f\u0090\7g\2\2\u0090\u0091\7e\2\2\u0091\20")
        buf.write("\3\2\2\2\u0092\u0093\7f\2\2\u0093\u0094\7g\2\2\u0094\u0095")
        buf.write("\7h\2\2\u0095\u0096\7n\2\2\u0096\u0097\7k\2\2\u0097\u0098")
        buf.write("\7u\2\2\u0098\u0099\7v\2\2\u0099\22\3\2\2\2\u009a\u009b")
        buf.write("\7f\2\2\u009b\u009c\7g\2\2\u009c\u009d\7h\2\2\u009d\u009e")
        buf.write("\7x\2\2\u009e\u009f\7c\2\2\u009f\u00a0\7t\2\2\u00a0\24")
        buf.write("\3\2\2\2\u00a1\u00a2\7f\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4")
        buf.write("\7h\2\2\u00a4\u00a5\7t\2\2\u00a5\u00a6\7c\2\2\u00a6\u00a7")
        buf.write("\7p\2\2\u00a7\u00a8\7i\2\2\u00a8\u00a9\7g\2\2\u00a9\26")
        buf.write("\3\2\2\2\u00aa\u00ab\7r\2\2\u00ab\u00ac\7n\2\2\u00ac\u00ad")
        buf.write("\7q\2\2\u00ad\u00ae\7v\2\2\u00ae\30\3\2\2\2\u00af\u00b0")
        buf.write("\7r\2\2\u00b0\u00b1\7t\2\2\u00b1\u00b2\7k\2\2\u00b2\u00b3")
        buf.write("\7p\2\2\u00b3\u00b4\7v\2\2\u00b4\32\3\2\2\2\u00b5\u00b6")
        buf.write("\7c\2\2\u00b6\u00b7\7u\2\2\u00b7\u00b8\7u\2\2\u00b8\u00b9")
        buf.write("\7g\2\2\u00b9\u00ba\7t\2\2\u00ba\u00bb\7v\2\2\u00bb\34")
        buf.write("\3\2\2\2\u00bc\u00bd\7e\2\2\u00bd\u00be\7q\2\2\u00be\u00bf")
        buf.write("\7f\2\2\u00bf\u00c0\7g\2\2\u00c0\36\3\2\2\2\u00c1\u00c2")
        buf.write("\7?\2\2\u00c2 \3\2\2\2\u00c3\u00c4\7*\2\2\u00c4\"\3\2")
        buf.write("\2\2\u00c5\u00c6\7+\2\2\u00c6$\3\2\2\2\u00c7\u00c8\7]")
        buf.write("\2\2\u00c8&\3\2\2\2\u00c9\u00ca\7_\2\2\u00ca(\3\2\2\2")
        buf.write("\u00cb\u00cc\7>\2\2\u00cc*\3\2\2\2\u00cd\u00ce\7@\2\2")
        buf.write("\u00ce,\3\2\2\2\u00cf\u00d0\7/\2\2\u00d0.\3\2\2\2\u00d1")
        buf.write("\u00d2\7`\2\2\u00d2\60\3\2\2\2\u00d3\u00d4\7\60\2\2\u00d4")
        buf.write("\u00d5\7`\2\2\u00d5\62\3\2\2\2\u00d6\u00d7\7,\2\2\u00d7")
        buf.write("\64\3\2\2\2\u00d8\u00d9\7\61\2\2\u00d9\66\3\2\2\2\u00da")
        buf.write("\u00db\7\60\2\2\u00db\u00dc\7,\2\2\u00dc8\3\2\2\2\u00dd")
        buf.write("\u00de\7\60\2\2\u00de\u00df\7\61\2\2\u00df:\3\2\2\2\u00e0")
        buf.write("\u00e1\7\60\2\2\u00e1<\3\2\2\2\u00e2\u00e3\7-\2\2\u00e3")
        buf.write(">\3\2\2\2\u00e4\u00e5\7>\2\2\u00e5\u00e6\7?\2\2\u00e6")
        buf.write("@\3\2\2\2\u00e7\u00e8\7@\2\2\u00e8\u00e9\7?\2\2\u00e9")
        buf.write("B\3\2\2\2\u00ea\u00eb\7?\2\2\u00eb\u00ec\7?\2\2\u00ec")
        buf.write("D\3\2\2\2\u00ed\u00ee\7#\2\2\u00ee\u00ef\7?\2\2\u00ef")
        buf.write("F\3\2\2\2\u00f0\u00f1\7(\2\2\u00f1\u00f2\7(\2\2\u00f2")
        buf.write("H\3\2\2\2\u00f3\u00f4\7~\2\2\u00f4\u00f5\7~\2\2\u00f5")
        buf.write("J\3\2\2\2\u00f6\u00f7\7=\2\2\u00f7L\3\2\2\2\u00f8\u00f9")
        buf.write("\7>\2\2\u00f9\u00fa\7/\2\2\u00faN\3\2\2\2\u00fb\u00fc")
        buf.write("\7/\2\2\u00fc\u00fd\7@\2\2\u00fdP\3\2\2\2\u00fe\u00ff")
        buf.write("\7k\2\2\u00ff\u0100\7p\2\2\u0100\u0101\7r\2\2\u0101\u0102")
        buf.write("\7w\2\2\u0102\u0103\7v\2\2\u0103\u0104\7o\2\2\u0104\u0105")
        buf.write("\7u\2\2\u0105\u0106\7i\2\2\u0106R\3\2\2\2\u0107\u0108")
        buf.write("\7v\2\2\u0108\u0109\7g\2\2\u0109\u010a\7u\2\2\u010a\u010b")
        buf.write("\7v\2\2\u010b\u010c\7o\2\2\u010c\u010d\7u\2\2\u010d\u010e")
        buf.write("\7i\2\2\u010eT\3\2\2\2\u010f\u0110\7g\2\2\u0110\u0111")
        buf.write("\7p\2\2\u0111\u0112\7f\2\2\u0112\u0113\7f\2\2\u0113\u0114")
        buf.write("\7q\2\2\u0114\u0115\7e\2\2\u0115\u0116\7g\2\2\u0116\u0117")
        buf.write("\7z\2\2\u0117V\3\2\2\2\u0118\u011a\7\17\2\2\u0119\u0118")
        buf.write("\3\2\2\2\u0119\u011a\3\2\2\2\u011a\u011b\3\2\2\2\u011b")
        buf.write("\u011d\7\f\2\2\u011c\u0119\3\2\2\2\u011d\u011e\3\2\2\2")
        buf.write("\u011e\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011fX\3\2\2")
        buf.write("\2\u0120\u0121\7B\2\2\u0121Z\3\2\2\2\u0122\u0123\7#\2")
        buf.write("\2\u0123\\\3\2\2\2\u0124\u0125\7&\2\2\u0125^\3\2\2\2\u0126")
        buf.write("\u0127\7%\2\2\u0127`\3\2\2\2\u0128\u012d\5c\62\2\u0129")
        buf.write("\u012c\5c\62\2\u012a\u012c\t\2\2\2\u012b\u0129\3\2\2\2")
        buf.write("\u012b\u012a\3\2\2\2\u012c\u012f\3\2\2\2\u012d\u012b\3")
        buf.write("\2\2\2\u012d\u012e\3\2\2\2\u012eb\3\2\2\2\u012f\u012d")
        buf.write("\3\2\2\2\u0130\u0131\t\3\2\2\u0131d\3\2\2\2\u0132\u0136")
        buf.write("\7$\2\2\u0133\u0135\n\4\2\2\u0134\u0133\3\2\2\2\u0135")
        buf.write("\u0138\3\2\2\2\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2")
        buf.write("\u0137\u0139\3\2\2\2\u0138\u0136\3\2\2\2\u0139\u013a\7")
        buf.write("$\2\2\u013af\3\2\2\2\u013b\u013c\5i\65\2\u013c\u013e\7")
        buf.write("\60\2\2\u013d\u013f\5i\65\2\u013e\u013d\3\2\2\2\u013e")
        buf.write("\u013f\3\2\2\2\u013f\u0141\3\2\2\2\u0140\u0142\5k\66\2")
        buf.write("\u0141\u0140\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0148\3")
        buf.write("\2\2\2\u0143\u0144\5i\65\2\u0144\u0145\5k\66\2\u0145\u0148")
        buf.write("\3\2\2\2\u0146\u0148\5i\65\2\u0147\u013b\3\2\2\2\u0147")
        buf.write("\u0143\3\2\2\2\u0147\u0146\3\2\2\2\u0148h\3\2\2\2\u0149")
        buf.write("\u014b\t\5\2\2\u014a\u0149\3\2\2\2\u014b\u014c\3\2\2\2")
        buf.write("\u014c\u014a\3\2\2\2\u014c\u014d\3\2\2\2\u014dj\3\2\2")
        buf.write("\2\u014e\u0150\t\6\2\2\u014f\u0151\t\7\2\2\u0150\u014f")
        buf.write("\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u0152\3\2\2\2\u0152")
        buf.write("\u0153\5i\65\2\u0153l\3\2\2\2\u0154\u0156\t\b\2\2\u0155")
        buf.write("\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0155\3\2\2\2")
        buf.write("\u0157\u0158\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b")
        buf.write("\67\2\2\u015an\3\2\2\2\u015b\u015c\7\61\2\2\u015c\u015d")
        buf.write("\7\61\2\2\u015d\u0161\3\2\2\2\u015e\u0160\13\2\2\2\u015f")
        buf.write("\u015e\3\2\2\2\u0160\u0163\3\2\2\2\u0161\u0162\3\2\2\2")
        buf.write("\u0161\u015f\3\2\2\2\u0162\u0164\3\2\2\2\u0163\u0161\3")
        buf.write("\2\2\2\u0164\u0165\7\f\2\2\u0165\u0166\3\2\2\2\u0166\u0167")
        buf.write("\b8\2\2\u0167p\3\2\2\2\17\2\u0119\u011e\u012b\u012d\u0136")
        buf.write("\u013e\u0141\u0147\u014c\u0150\u0157\u0161\3\b\2\2")
        return buf.getvalue()


class bttestLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    INPUTMSG = 40
    TESTMSG = 41
    ENDDOCEX = 42
    NEWLINE = 43
    WBRESULT = 44
    ANNOUNCE = 45
    SILENT = 46
    SEPAR = 47
    ID = 48
    STRING = 49
    NUMBER = 50
    WS = 51
    SL_COMMENT = 52

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            "'package'", "'test'", "'defmat'", "'{'", "','", "'}'", "'defvec'", 
            "'deflist'", "'defvar'", "'defrange'", "'plot'", "'print'", 
            "'assert'", "'code'", "'='", "'('", "')'", "'['", "']'", "'<'", 
            "'>'", "'-'", "'^'", "'.^'", "'*'", "'/'", "'.*'", "'./'", "'.'", 
            "'+'", "'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", "';'", 
            "'<-'", "'->'", "'inputmsg'", "'testmsg'", "'enddocex'", "'@'", 
            "'!'", "'$'", "'#'" ]

    symbolicNames = [ u"<INVALID>",
            "INPUTMSG", "TESTMSG", "ENDDOCEX", "NEWLINE", "WBRESULT", "ANNOUNCE", 
            "SILENT", "SEPAR", "ID", "STRING", "NUMBER", "WS", "SL_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "INPUTMSG", "TESTMSG", "ENDDOCEX", "NEWLINE", 
                  "WBRESULT", "ANNOUNCE", "SILENT", "SEPAR", "ID", "LETTER", 
                  "STRING", "NUMBER", "INT", "EXP", "WS", "SL_COMMENT" ]

    grammarFileName = "bttest.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


