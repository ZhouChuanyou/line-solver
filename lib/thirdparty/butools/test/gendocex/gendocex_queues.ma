ClearAll["Global`*"]
AppendTo[$Path,"/home/gabor/project/butools/Mathematica"];
<<BuTools`
Print["---BuTools: Queues package test file---"//OutputForm];
Print["Enable the verbose messages with the BuToolsVerbose flag"//OutputForm];
BuTools`Verbose = True;
Print["Enable input parameter checking with the BuToolsCheckInput flag"//OutputForm];
BuTools`CheckInput = true;
On[Assert];
tmpOut = $Output;
stream = OpenWrite["/home/gabor/project/butools/test/docex/Queues_mathematica.docex", FormatType -> InputForm, PageWidth -> Infinity];
$Output = {stream};
Unprotect[Print];
Print[args___] := Block[{$inMsg = True, result, str},
   If[MatrixQ[args],
       str = "{";
       Do[str = StringJoin[str, ToString[args[[r]], FormatType -> InputForm]]; 
            If[r < Length[args], str = StringJoin[str, ",\n "]], {r, Length[args]}];
            str = StringJoin[str, "}"];
            Print[str//OutputForm],
            result = Print[args],
            result = Print[args]
        ]] /; ! TrueQ[$inMsg];
Print["=== QBDQueue ==="]
Print[">>> B = {{6., 1., 0.},{0., 4., 1.},{2., 0., 0.}};"//OutputForm];
B = {{6., 1., 0.},{0., 4., 1.},{2., 0., 0.}};
Print[">>> F = {{0., 1., 1.},{5., 0., 0.},{1., 3., 0.}};"//OutputForm];
F = {{0., 1., 1.},{5., 0., 0.},{1., 3., 0.}};
Print[">>> L = {{-14., 3., 2.},{0., -14., 4.},{3., 1., -10.}};"//OutputForm];
L = {{-14., 3., 2.},{0., -14., 4.},{3., 1., -10.}};
Print[">>> L0 = L+B;"//OutputForm];
L0 = L+B;
Print[">>> Print[L0];"//OutputForm];
Print[L0];
BuTools`Verbose = False;
{pi0, R} = QBDSolve[B, L, F, L0];
lambd = Total[pi0.Inverse[IdentityMatrix[Dimensions[R][[1]]]-R].F];
BuTools`Verbose = True;
Print[">>> {ncd, ncm} = QBDQueue[B, L, F, L0, \"ncDistr\", 11, \"ncMoms\", 5];"//OutputForm];
{ncd, ncm} = QBDQueue[B, L, F, L0, "ncDistr", 11, "ncMoms", 5];
Print[">>> Print[ncd];"//OutputForm];
Print[ncd];
Print[">>> Print[ncm];"//OutputForm];
Print[ncm];
Print[">>> {alphap, Ap} = QBDQueue[B, L, F, L0, \"ncDistrDPH\"];"//OutputForm];
{alphap, Ap} = QBDQueue[B, L, F, L0, "ncDistrDPH"];
Print[">>> Print[alphap];"//OutputForm];
Print[alphap];
Print[">>> Print[Ap];"//OutputForm];
Print[Ap];
Print[">>> {alpha, A} = QBDQueue[B, L, F, L0, \"ncDistrMG\"];"//OutputForm];
{alpha, A} = QBDQueue[B, L, F, L0, "ncDistrMG"];
Print[">>> Print[alpha];"//OutputForm];
Print[alpha];
Print[">>> Print[A];"//OutputForm];
Print[A];
Print[">>> ncdFromDPH = PmfFromDPH[alphap, Ap, Range[0,10,1]];"//OutputForm];
ncdFromDPH = PmfFromDPH[alphap, Ap, Range[0,10,1]];
Print[">>> Print[ncdFromDPH];"//OutputForm];
Print[ncdFromDPH];
Print[">>> ncmFromMG = MomentsFromMG[alpha, A, 5];"//OutputForm];
ncmFromMG = MomentsFromMG[alpha, A, 5];
Print[">>> Print[ncmFromMG];"//OutputForm];
Print[ncmFromMG];
Print[">>> {std, stm} = QBDQueue[B, L, F, L0, \"stDistr\", Range[0.,1.,0.1], \"stMoms\", 5];"//OutputForm];
{std, stm} = QBDQueue[B, L, F, L0, "stDistr", Range[0.,1.,0.1], "stMoms", 5];
Print[">>> Print[std];"//OutputForm];
Print[std];
Print[">>> Print[stm];"//OutputForm];
Print[stm];
Print[">>> {betap, Bp} = QBDQueue[B, L, F, L0, \"stDistrPH\"];"//OutputForm];
{betap, Bp} = QBDQueue[B, L, F, L0, "stDistrPH"];
Print[">>> Print[betap];"//OutputForm];
Print[betap];
Print[">>> Print[Bp];"//OutputForm];
Print[Bp];
Print[">>> {beta, B} = QBDQueue[B, L, F, L0, \"stDistrME\"];"//OutputForm];
{beta, B} = QBDQueue[B, L, F, L0, "stDistrME"];
Print[">>> Print[beta];"//OutputForm];
Print[beta];
Print[">>> Print[B];"//OutputForm];
Print[B];
Print[">>> stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];"//OutputForm];
stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];
Print[">>> Print[stdFromPH];"//OutputForm];
Print[stdFromPH];
Print[">>> stmFromME = MomentsFromME[beta, B, 5];"//OutputForm];
stmFromME = MomentsFromME[beta, B, 5];
Print[">>> Print[stmFromME];"//OutputForm];
Print[stmFromME];
Print["=== MAPMAP1 ==="]
Print[">>> D0 = {{-8., 1., 2.},{0., -6., 4.},{3., 0., -3.}};"//OutputForm];
D0 = {{-8., 1., 2.},{0., -6., 4.},{3., 0., -3.}};
Print[">>> D1 = {{4., 1., 0.},{0., 2., 0.},{0., 0., 0.}};"//OutputForm];
D1 = {{4., 1., 0.},{0., 2., 0.},{0., 0., 0.}};
Print[">>> S0 = {{-10., 4.},{0., -7.}};"//OutputForm];
S0 = {{-10., 4.},{0., -7.}};
Print[">>> S1 = {{5., 1.},{4., 3.}};"//OutputForm];
S1 = {{5., 1.},{4., 3.}};
lambd = 1./MarginalMomentsFromMAP[D0, D1, 1][[1]];
Print[">>> {ncd, ncm} = MAPMAP1[D0, D1, S0, S1, \"ncDistr\", 11, \"ncMoms\", 5];"//OutputForm];
{ncd, ncm} = MAPMAP1[D0, D1, S0, S1, "ncDistr", 11, "ncMoms", 5];
Print[">>> Print[ncd];"//OutputForm];
Print[ncd];
Print[">>> Print[ncm];"//OutputForm];
Print[ncm];
Print[">>> {alphap, Ap} = MAPMAP1[D0, D1, S0, S1, \"ncDistrDPH\"];"//OutputForm];
{alphap, Ap} = MAPMAP1[D0, D1, S0, S1, "ncDistrDPH"];
Print[">>> Print[alphap];"//OutputForm];
Print[alphap];
Print[">>> Print[Ap];"//OutputForm];
Print[Ap];
Print[">>> {alpha, A} = MAPMAP1[D0, D1, S0, S1, \"ncDistrMG\"];"//OutputForm];
{alpha, A} = MAPMAP1[D0, D1, S0, S1, "ncDistrMG"];
Print[">>> Print[alpha];"//OutputForm];
Print[alpha];
Print[">>> Print[A];"//OutputForm];
Print[A];
Print[">>> ncdFromDPH = PmfFromDPH[alphap, Ap, Range[0,10,1]];"//OutputForm];
ncdFromDPH = PmfFromDPH[alphap, Ap, Range[0,10,1]];
Print[">>> Print[ncdFromDPH];"//OutputForm];
Print[ncdFromDPH];
Print[">>> ncmFromMG = MomentsFromMG[alpha, A, 5];"//OutputForm];
ncmFromMG = MomentsFromMG[alpha, A, 5];
Print[">>> Print[ncmFromMG];"//OutputForm];
Print[ncmFromMG];
Print[">>> {std, stm} = MAPMAP1[D0, D1, S0, S1, \"stDistr\", Range[0.,1.,0.1], \"stMoms\", 5];"//OutputForm];
{std, stm} = MAPMAP1[D0, D1, S0, S1, "stDistr", Range[0.,1.,0.1], "stMoms", 5];
Print[">>> Print[std];"//OutputForm];
Print[std];
Print[">>> Print[stm];"//OutputForm];
Print[stm];
Print[">>> {betap, Bp} = MAPMAP1[D0, D1, S0, S1, \"stDistrPH\"];"//OutputForm];
{betap, Bp} = MAPMAP1[D0, D1, S0, S1, "stDistrPH"];
Print[">>> Print[betap];"//OutputForm];
Print[betap];
Print[">>> Print[Bp];"//OutputForm];
Print[Bp];
Print[">>> {beta, B} = MAPMAP1[D0, D1, S0, S1, \"stDistrME\"];"//OutputForm];
{beta, B} = MAPMAP1[D0, D1, S0, S1, "stDistrME"];
Print[">>> Print[beta];"//OutputForm];
Print[beta];
Print[">>> Print[B];"//OutputForm];
Print[B];
Print[">>> stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];"//OutputForm];
stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];
Print[">>> Print[stdFromPH];"//OutputForm];
Print[stdFromPH];
Print[">>> stmFromME = MomentsFromME[beta, B, 5];"//OutputForm];
stmFromME = MomentsFromME[beta, B, 5];
Print[">>> Print[stmFromME];"//OutputForm];
Print[stmFromME];
IA = IdentityMatrix[Dimensions[D0][[1]]];
IS = IdentityMatrix[Dimensions[S0][[1]]];
BuTools`Verbose = False;
{gamma, G} = QBDQueue[KroneckerProduct[IA, S1], KroneckerProduct[D0, IS]+KroneckerProduct[IA, S0], KroneckerProduct[D1, IS], KroneckerProduct[D0, IS], "stDistrME"];
BuTools`Verbose = True;
msmall = MomentsFromME[beta, B, 5];
mlarge = MomentsFromME[gamma, G, 5];
Print[">>> delta = {0.5,0.1,0.4};"//OutputForm];
delta = {0.5,0.1,0.4};
Print[">>> Dm = {{-8., 1., 2.},{0., -6., 4.},{3., 0., -3.}};"//OutputForm];
Dm = {{-8., 1., 2.},{0., -6., 4.},{3., 0., -3.}};
Print[">>> sigma = {0.2,0.7,0.1};"//OutputForm];
sigma = {0.2,0.7,0.1};
Print[">>> S = {{-10., 4., 0.},{5., -7., 2.},{1., 2., -8.}};"//OutputForm];
S = {{-10., 4., 0.},{5., -7., 2.},{1., 2., -8.}};
Print[">>> D0 = Dm;"//OutputForm];
D0 = Dm;
Print[">>> D1 = Transpose[{Total[-Dm,{2}]}].{delta};"//OutputForm];
D1 = Transpose[{Total[-Dm,{2}]}].{delta};
Print[">>> S0 = S;"//OutputForm];
S0 = S;
Print[">>> S1 = Transpose[{Total[-S,{2}]}].{sigma};"//OutputForm];
S1 = Transpose[{Total[-S,{2}]}].{sigma};
lambd = 1./MarginalMomentsFromMAP[D0, D1, 1][[1]];
Print[">>> {ncd, ncm} = MAPMAP1[D0, D1, S0, S1, \"ncDistr\", 11, \"ncMoms\", 5];"//OutputForm];
{ncd, ncm} = MAPMAP1[D0, D1, S0, S1, "ncDistr", 11, "ncMoms", 5];
Print[">>> Print[ncd];"//OutputForm];
Print[ncd];
Print[">>> Print[ncm];"//OutputForm];
Print[ncm];
Print[">>> {alphap, Ap} = MAPMAP1[D0, D1, S0, S1, \"ncDistrDPH\"];"//OutputForm];
{alphap, Ap} = MAPMAP1[D0, D1, S0, S1, "ncDistrDPH"];
Print[">>> Print[alphap];"//OutputForm];
Print[alphap];
Print[">>> Print[Ap];"//OutputForm];
Print[Ap];
Print[">>> {alpha, A} = MAPMAP1[D0, D1, S0, S1, \"ncDistrMG\"];"//OutputForm];
{alpha, A} = MAPMAP1[D0, D1, S0, S1, "ncDistrMG"];
Print[">>> Print[alpha];"//OutputForm];
Print[alpha];
Print[">>> Print[A];"//OutputForm];
Print[A];
Print[">>> ncdFromDPH = PmfFromDPH[alphap, Ap, Range[0,10,1]];"//OutputForm];
ncdFromDPH = PmfFromDPH[alphap, Ap, Range[0,10,1]];
Print[">>> Print[ncdFromDPH];"//OutputForm];
Print[ncdFromDPH];
Print[">>> ncmFromMG = MomentsFromMG[alpha, A, 5];"//OutputForm];
ncmFromMG = MomentsFromMG[alpha, A, 5];
Print[">>> Print[ncmFromMG];"//OutputForm];
Print[ncmFromMG];
Print[">>> {std, stm} = MAPMAP1[D0, D1, S0, S1, \"stDistr\", Range[0.,1.,0.1], \"stMoms\", 5];"//OutputForm];
{std, stm} = MAPMAP1[D0, D1, S0, S1, "stDistr", Range[0.,1.,0.1], "stMoms", 5];
Print[">>> Print[std];"//OutputForm];
Print[std];
Print[">>> Print[stm];"//OutputForm];
Print[stm];
Print[">>> {betap, Bp} = MAPMAP1[D0, D1, S0, S1, \"stDistrPH\"];"//OutputForm];
{betap, Bp} = MAPMAP1[D0, D1, S0, S1, "stDistrPH"];
Print[">>> Print[betap];"//OutputForm];
Print[betap];
Print[">>> Print[Bp];"//OutputForm];
Print[Bp];
Print[">>> {beta, B} = MAPMAP1[D0, D1, S0, S1, \"stDistrME\"];"//OutputForm];
{beta, B} = MAPMAP1[D0, D1, S0, S1, "stDistrME"];
Print[">>> Print[beta];"//OutputForm];
Print[beta];
Print[">>> Print[B];"//OutputForm];
Print[B];
Print[">>> stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];"//OutputForm];
stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];
Print[">>> Print[stdFromPH];"//OutputForm];
Print[stdFromPH];
Print[">>> stmFromME = MomentsFromME[beta, B, 5];"//OutputForm];
stmFromME = MomentsFromME[beta, B, 5];
Print[">>> Print[stmFromME];"//OutputForm];
Print[stmFromME];
IA = IdentityMatrix[Dimensions[D0][[1]]];
IS = IdentityMatrix[Dimensions[S0][[1]]];
BuTools`Verbose = False;
{gamma, G} = QBDQueue[KroneckerProduct[IA, S1], KroneckerProduct[D0, IS]+KroneckerProduct[IA, S0], KroneckerProduct[D1, IS], KroneckerProduct[D0, IS], "stDistrME"];
BuTools`Verbose = True;
msmall = MomentsFromME[beta, B, 5];
mlarge = MomentsFromME[gamma, G, 5];
Print["=== MMAPPH1PRPR ==="]
Print[">>> D0 = {{-5.49, 0., 1.15, 0.},{0., -2.29, 0., 0.},{0., 0.08, -1.32, 0.},{0.72, 1.17, 0.7, -7.07}};"//OutputForm];
D0 = {{-5.49, 0., 1.15, 0.},{0., -2.29, 0., 0.},{0., 0.08, -1.32, 0.},{0.72, 1.17, 0.7, -7.07}};
Print[">>> D1 = {{0.25, 0.38, 0.64, 0.},{0., 0., 0., 1.09},{0., 1.24, 0., 0.},{0.37, 0., 0., 0.}};"//OutputForm];
D1 = {{0.25, 0.38, 0.64, 0.},{0., 0., 0., 1.09},{0., 1.24, 0., 0.},{0.37, 0., 0., 0.}};
Print[">>> D2 = {{0.3, 1.0, 0., 0.48},{0., 0.2, 0., 0.},{0., 0., 0., 0.},{0.61, 0., 0., 0.2}};"//OutputForm];
D2 = {{0.3, 1.0, 0., 0.48},{0., 0.2, 0., 0.},{0., 0., 0., 0.},{0.61, 0., 0., 0.2}};
Print[">>> D3 = {{0., 0.98, 0., 0.31},{0., 0., 1.0, 0.},{0., 0., 0., 0.},{1.1, 0.84, 0.33, 1.03}};"//OutputForm];
D3 = {{0., 0.98, 0., 0.31},{0., 0., 1.0, 0.},{0., 0., 0., 0.},{1.1, 0.84, 0.33, 1.03}};
Print[">>> sigma3 = {0.83333,0.11404,0.05263};"//OutputForm];
sigma3 = {0.83333,0.11404,0.05263};
Print[">>> S3 = {{-3., 0., 0.},{0.73077, -0.73077, 0.},{0., 0.5, -0.5}};"//OutputForm];
S3 = {{-3., 0., 0.},{0.73077, -0.73077, 0.},{0., 0.5, -0.5}};
Print[">>> sigma2 = {1.};"//OutputForm];
sigma2 = {1.};
Print[">>> S2 = {{-2.}};"//OutputForm];
S2 = {{-2.}};
Print[">>> sigma1 = {0.25,0.75};"//OutputForm];
sigma1 = {0.25,0.75};
Print[">>> S1 = {{-2.5, 2.5},{0., -10.}};"//OutputForm];
S1 = {{-2.5, 2.5},{0., -10.}};
Print[">>> {ncm1, ncd1, ncm2, ncd2, ncm3, ncd3} = MMAPPH1PRPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"ncMoms\", 3, \"ncDistr\", 500];"//OutputForm];
{ncm1, ncd1, ncm2, ncd2, ncm3, ncd3} = MMAPPH1PRPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "ncMoms", 3, "ncDistr", 500];
momFromDistr1 = ncd1.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
momFromDistr2 = ncd2.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
momFromDistr3 = ncd3.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
Print[">>> distrPoints = {1., 5., 10.};"//OutputForm];
distrPoints = {1., 5., 10.};
Print[">>> {stm1, std1, stm2, std2, stm3, std3} = MMAPPH1PRPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"stMoms\", 3, \"stDistr\", distrPoints];"//OutputForm];
{stm1, std1, stm2, std2, stm3, std3} = MMAPPH1PRPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "stMoms", 3, "stDistr", distrPoints];
Print[">>> Print[stm1];"//OutputForm];
Print[stm1];
Print[">>> Print[std1];"//OutputForm];
Print[std1];
Print[">>> Print[stm2];"//OutputForm];
Print[stm2];
Print[">>> Print[std2];"//OutputForm];
Print[std2];
Print[">>> Print[stm3];"//OutputForm];
Print[stm3];
Print[">>> Print[std3];"//OutputForm];
Print[std3];
lambda1 = 1./MarginalMomentsFromMAP[D0+D2+D3, D1, 1][[1]];
lambda2 = 1./MarginalMomentsFromMAP[D0+D1+D3, D2, 1][[1]];
lambda3 = 1./MarginalMomentsFromMAP[D0+D1+D2, D3, 1][[1]];
Print["=== MMAPPH1NPPR ==="]
Print[">>> D0 = {{-5.49, 0., 1.15, 0.},{0., -2.29, 0., 0.},{0., 0.08, -1.32, 0.},{0.72, 1.17, 0.7, -7.07}};"//OutputForm];
D0 = {{-5.49, 0., 1.15, 0.},{0., -2.29, 0., 0.},{0., 0.08, -1.32, 0.},{0.72, 1.17, 0.7, -7.07}};
Print[">>> D1 = {{0.25, 0.38, 0.64, 0.},{0., 0., 0., 1.09},{0., 1.24, 0., 0.},{0.37, 0., 0., 0.}};"//OutputForm];
D1 = {{0.25, 0.38, 0.64, 0.},{0., 0., 0., 1.09},{0., 1.24, 0., 0.},{0.37, 0., 0., 0.}};
Print[">>> D2 = {{0.3, 1.0, 0., 0.48},{0., 0.2, 0., 0.},{0., 0., 0., 0.},{0.61, 0., 0., 0.2}};"//OutputForm];
D2 = {{0.3, 1.0, 0., 0.48},{0., 0.2, 0., 0.},{0., 0., 0., 0.},{0.61, 0., 0., 0.2}};
Print[">>> D3 = {{0., 0.98, 0., 0.31},{0., 0., 1.0, 0.},{0., 0., 0., 0.},{1.1, 0.84, 0.33, 1.03}};"//OutputForm];
D3 = {{0., 0.98, 0., 0.31},{0., 0., 1.0, 0.},{0., 0., 0., 0.},{1.1, 0.84, 0.33, 1.03}};
Print[">>> sigma3 = {0.83333,0.11404,0.05263};"//OutputForm];
sigma3 = {0.83333,0.11404,0.05263};
Print[">>> S3 = {{-3., 0., 0.},{0.73077, -0.73077, 0.},{0., 0.5, -0.5}};"//OutputForm];
S3 = {{-3., 0., 0.},{0.73077, -0.73077, 0.},{0., 0.5, -0.5}};
Print[">>> sigma2 = {1.};"//OutputForm];
sigma2 = {1.};
Print[">>> S2 = {{-2.}};"//OutputForm];
S2 = {{-2.}};
Print[">>> sigma1 = {0.25,0.75};"//OutputForm];
sigma1 = {0.25,0.75};
Print[">>> S1 = {{-2.5, 2.5},{0., -10.}};"//OutputForm];
S1 = {{-2.5, 2.5},{0., -10.}};
Print[">>> {ncm1, ncd1, ncm2, ncd2, ncm3, ncd3} = MMAPPH1NPPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"ncMoms\", 3, \"ncDistr\", 500];"//OutputForm];
{ncm1, ncd1, ncm2, ncd2, ncm3, ncd3} = MMAPPH1NPPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "ncMoms", 3, "ncDistr", 500];
momFromDistr1 = ncd1.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
momFromDistr2 = ncd2.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
momFromDistr3 = ncd3.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
Print[">>> distrPoints = {1., 5., 10.};"//OutputForm];
distrPoints = {1., 5., 10.};
Print[">>> {stm1, std1, stm2, std2, stm3, std3} = MMAPPH1NPPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"stMoms\", 3, \"stDistr\", distrPoints];"//OutputForm];
{stm1, std1, stm2, std2, stm3, std3} = MMAPPH1NPPR[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "stMoms", 3, "stDistr", distrPoints];
Print[">>> Print[stm1];"//OutputForm];
Print[stm1];
Print[">>> Print[std1];"//OutputForm];
Print[std1];
Print[">>> Print[stm2];"//OutputForm];
Print[stm2];
Print[">>> Print[std2];"//OutputForm];
Print[std2];
Print[">>> Print[stm3];"//OutputForm];
Print[stm3];
Print[">>> Print[std3];"//OutputForm];
Print[std3];
lambda1 = 1./MarginalMomentsFromMAP[D0+D2+D3, D1, 1][[1]];
lambda2 = 1./MarginalMomentsFromMAP[D0+D1+D3, D2, 1][[1]];
lambda3 = 1./MarginalMomentsFromMAP[D0+D1+D2, D3, 1][[1]];
Print["=== MMAPPH1FCFS ==="]
Print[">>> D0 = {{-5.49, 0., 1.15, 0.},{0., -2.29, 0., 0.},{0., 0.08, -1.32, 0.},{0.72, 1.17, 0.7, -7.07}};"//OutputForm];
D0 = {{-5.49, 0., 1.15, 0.},{0., -2.29, 0., 0.},{0., 0.08, -1.32, 0.},{0.72, 1.17, 0.7, -7.07}};
Print[">>> D1 = {{0.25, 0.38, 0.64, 0.},{0., 0., 0., 1.09},{0., 1.24, 0., 0.},{0.37, 0., 0., 0.}};"//OutputForm];
D1 = {{0.25, 0.38, 0.64, 0.},{0., 0., 0., 1.09},{0., 1.24, 0., 0.},{0.37, 0., 0., 0.}};
Print[">>> D2 = {{0.3, 1.0, 0., 0.48},{0., 0.2, 0., 0.},{0., 0., 0., 0.},{0.61, 0., 0., 0.2}};"//OutputForm];
D2 = {{0.3, 1.0, 0., 0.48},{0., 0.2, 0., 0.},{0., 0., 0., 0.},{0.61, 0., 0., 0.2}};
Print[">>> D3 = {{0., 0.98, 0., 0.31},{0., 0., 1.0, 0.},{0., 0., 0., 0.},{1.1, 0.84, 0.33, 1.03}};"//OutputForm];
D3 = {{0., 0.98, 0., 0.31},{0., 0., 1.0, 0.},{0., 0., 0., 0.},{1.1, 0.84, 0.33, 1.03}};
Print[">>> sigma3 = {0.83333,0.11404,0.05263};"//OutputForm];
sigma3 = {0.83333,0.11404,0.05263};
Print[">>> S3 = {{-3., 0., 0.},{0.73077, -0.73077, 0.},{0., 0.5, -0.5}};"//OutputForm];
S3 = {{-3., 0., 0.},{0.73077, -0.73077, 0.},{0., 0.5, -0.5}};
Print[">>> sigma2 = {1.};"//OutputForm];
sigma2 = {1.};
Print[">>> S2 = {{-2.}};"//OutputForm];
S2 = {{-2.}};
Print[">>> sigma1 = {0.25,0.75};"//OutputForm];
sigma1 = {0.25,0.75};
Print[">>> S1 = {{-2.5, 2.5},{0., -10.}};"//OutputForm];
S1 = {{-2.5, 2.5},{0., -10.}};
Print[">>> {ncm1, ncd1, ncm2, ncd2, ncm3, ncd3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"ncMoms\", 3, \"ncDistr\", 500];"//OutputForm];
{ncm1, ncd1, ncm2, ncd2, ncm3, ncd3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "ncMoms", 3, "ncDistr", 500];
momFromDistr1 = ncd1.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
momFromDistr2 = ncd2.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
momFromDistr3 = ncd3.Transpose[Join[{Range[0,499,1]},{Range[0,499,1]^2},{Range[0,499,1]^3}]];
Print[">>> distrPoints = {1., 5., 10.};"//OutputForm];
distrPoints = {1., 5., 10.};
Print[">>> {stm1, std1, stm2, std2, stm3, std3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"stMoms\", 3, \"stDistr\", distrPoints];"//OutputForm];
{stm1, std1, stm2, std2, stm3, std3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "stMoms", 3, "stDistr", distrPoints];
Print[">>> Print[stm1];"//OutputForm];
Print[stm1];
Print[">>> Print[std1];"//OutputForm];
Print[std1];
Print[">>> Print[stm2];"//OutputForm];
Print[stm2];
Print[">>> Print[std2];"//OutputForm];
Print[std2];
Print[">>> Print[stm3];"//OutputForm];
Print[stm3];
Print[">>> Print[std3];"//OutputForm];
Print[std3];
Print[">>> {betap1, Bp1, betap2, Bp2, betap3, Bp3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"stDistrPH\"];"//OutputForm];
{betap1, Bp1, betap2, Bp2, betap3, Bp3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "stDistrPH"];
Print[">>> {beta1, B1, beta2, B2, beta3, B3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, \"stDistrME\"];"//OutputForm];
{beta1, B1, beta2, B2, beta3, B3} = MMAPPH1FCFS[{D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, "stDistrME"];
Print[">>> stdFromPH1 = CdfFromPH[betap1, Bp1, distrPoints];"//OutputForm];
stdFromPH1 = CdfFromPH[betap1, Bp1, distrPoints];
Print[">>> Print[stdFromPH1];"//OutputForm];
Print[stdFromPH1];
Print[">>> stmFromME1 = MomentsFromME[beta1, B1, 3];"//OutputForm];
stmFromME1 = MomentsFromME[beta1, B1, 3];
Print[">>> Print[stmFromME1];"//OutputForm];
Print[stmFromME1];
Print[">>> stdFromPH2 = CdfFromPH[betap2, Bp2, distrPoints];"//OutputForm];
stdFromPH2 = CdfFromPH[betap2, Bp2, distrPoints];
Print[">>> Print[stdFromPH2];"//OutputForm];
Print[stdFromPH2];
Print[">>> stmFromME2 = MomentsFromME[beta2, B2, 3];"//OutputForm];
stmFromME2 = MomentsFromME[beta2, B2, 3];
Print[">>> Print[stmFromME2];"//OutputForm];
Print[stmFromME2];
Print[">>> stdFromPH3 = CdfFromPH[betap3, Bp3, distrPoints];"//OutputForm];
stdFromPH3 = CdfFromPH[betap3, Bp3, distrPoints];
Print[">>> Print[stdFromPH3];"//OutputForm];
Print[stdFromPH3];
Print[">>> stmFromME3 = MomentsFromME[beta3, B3, 3];"//OutputForm];
stmFromME3 = MomentsFromME[beta3, B3, 3];
Print[">>> Print[stmFromME3];"//OutputForm];
Print[stmFromME3];
lambda1 = 1./MarginalMomentsFromMAP[D0+D2+D3, D1, 1][[1]];
lambda2 = 1./MarginalMomentsFromMAP[D0+D1+D3, D2, 1][[1]];
lambda3 = 1./MarginalMomentsFromMAP[D0+D1+D2, D3, 1][[1]];
Print["=== FluidQueue ==="]
Print[">>> Q = {{-9., 2., 4., 0., 1., 2.},{6., -25., 5., 3., 7., 4.},{1., 3., -4., 0., 0., 0.},{0., 0., 0., -8., 3., 5.},{7., 3., 0., 2., -13., 1.},{7., 8., 0., 3., 8., -26.}};"//OutputForm];
Q = {{-9., 2., 4., 0., 1., 2.},{6., -25., 5., 3., 7., 4.},{1., 3., -4., 0., 0., 0.},{0., 0., 0., -8., 3., 5.},{7., 3., 0., 2., -13., 1.},{7., 8., 0., 3., 8., -26.}};
Print[">>> vRin = {4.,2.,1.,0.,0.,3.};"//OutputForm];
vRin = {4.,2.,1.,0.,0.,3.};
Print[">>> vRout = {6.,2.,0.,0.,3.,2.};"//OutputForm];
vRout = {6.,2.,0.,0.,3.,2.};
Print[">>> Rin = DiagonalMatrix[vRin];"//OutputForm];
Rin = DiagonalMatrix[vRin];
Print[">>> Rout = DiagonalMatrix[vRout];"//OutputForm];
Rout = DiagonalMatrix[vRout];
lambd = Total[CTMCSolve[Q].Rin];
Print[">>> {fld, flm} = FluidQueue[Q, Rin, Rout, \"flDistr\", Range[0.,1.,0.1], \"flMoms\", 5];"//OutputForm];
{fld, flm} = FluidQueue[Q, Rin, Rout, "flDistr", Range[0.,1.,0.1], "flMoms", 5];
Print[">>> Print[fld];"//OutputForm];
Print[fld];
Print[">>> Print[flm];"//OutputForm];
Print[flm];
Print[">>> {alphap, Ap} = FluidQueue[Q, Rin, Rout, \"flDistrPH\"];"//OutputForm];
{alphap, Ap} = FluidQueue[Q, Rin, Rout, "flDistrPH"];
Print[">>> Print[alphap];"//OutputForm];
Print[alphap];
Print[">>> Print[Ap];"//OutputForm];
Print[Ap];
Print[">>> {alpha, A} = FluidQueue[Q, Rin, Rout, \"flDistrME\"];"//OutputForm];
{alpha, A} = FluidQueue[Q, Rin, Rout, "flDistrME"];
Print[">>> Print[alpha];"//OutputForm];
Print[alpha];
Print[">>> Print[A];"//OutputForm];
Print[A];
Print[">>> fldFromPH = CdfFromPH[alphap, Ap, Range[0.,1.,0.1]];"//OutputForm];
fldFromPH = CdfFromPH[alphap, Ap, Range[0.,1.,0.1]];
Print[">>> Print[fldFromPH];"//OutputForm];
Print[fldFromPH];
Print[">>> flmFromME = MomentsFromME[alpha, A, 5];"//OutputForm];
flmFromME = MomentsFromME[alpha, A, 5];
Print[">>> Print[flmFromME];"//OutputForm];
Print[flmFromME];
Print[">>> {std, stm} = FluidQueue[Q, Rin, Rout, \"stDistr\", Range[0.,1.,0.1], \"stMoms\", 5];"//OutputForm];
{std, stm} = FluidQueue[Q, Rin, Rout, "stDistr", Range[0.,1.,0.1], "stMoms", 5];
Print[">>> Print[std];"//OutputForm];
Print[std];
Print[">>> Print[stm];"//OutputForm];
Print[stm];
Print[">>> {betap, Bp} = FluidQueue[Q, Rin, Rout, \"stDistrPH\"];"//OutputForm];
{betap, Bp} = FluidQueue[Q, Rin, Rout, "stDistrPH"];
Print[">>> Print[betap];"//OutputForm];
Print[betap];
Print[">>> Print[Bp];"//OutputForm];
Print[Bp];
Print[">>> {beta, B} = FluidQueue[Q, Rin, Rout, \"stDistrME\"];"//OutputForm];
{beta, B} = FluidQueue[Q, Rin, Rout, "stDistrME"];
Print[">>> Print[beta];"//OutputForm];
Print[beta];
Print[">>> Print[B];"//OutputForm];
Print[B];
Print[">>> stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];"//OutputForm];
stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];
Print[">>> Print[stdFromPH];"//OutputForm];
Print[stdFromPH];
Print[">>> stmFromME = MomentsFromME[beta, B, 5];"//OutputForm];
stmFromME = MomentsFromME[beta, B, 5];
Print[">>> Print[stmFromME];"//OutputForm];
Print[stmFromME];
Print["=== FluFluQueue ==="]
Print[">>> Qin = {{-2., 1., 1.},{2., -5., 3.},{4., 0., -4.}};"//OutputForm];
Qin = {{-2., 1., 1.},{2., -5., 3.},{4., 0., -4.}};
Print[">>> vRin = {3.,7.,0.};"//OutputForm];
vRin = {3.,7.,0.};
Print[">>> Rin = DiagonalMatrix[vRin];"//OutputForm];
Rin = DiagonalMatrix[vRin];
Print[">>> Qout = {{-4., 1., 3.},{6., -8., 2.},{3., 7., -10.}};"//OutputForm];
Qout = {{-4., 1., 3.},{6., -8., 2.},{3., 7., -10.}};
Print[">>> vRout = {1.,7.,15.};"//OutputForm];
vRout = {1.,7.,15.};
Print[">>> Rout = DiagonalMatrix[vRout];"//OutputForm];
Rout = DiagonalMatrix[vRout];
lambd = Total[CTMCSolve[Qin].Rin];
Print[">>> {fld, flm} = FluFluQueue[Qin, Rin, Qout, Rout, False, \"flDistr\", Range[0.,1.,0.1], \"flMoms\", 5];"//OutputForm];
{fld, flm} = FluFluQueue[Qin, Rin, Qout, Rout, False, "flDistr", Range[0.,1.,0.1], "flMoms", 5];
Print[">>> Print[fld];"//OutputForm];
Print[fld];
Print[">>> Print[flm];"//OutputForm];
Print[flm];
Print[">>> {alphap, Ap} = FluFluQueue[Qin, Rin, Qout, Rout, False, \"flDistrPH\"];"//OutputForm];
{alphap, Ap} = FluFluQueue[Qin, Rin, Qout, Rout, False, "flDistrPH"];
Print[">>> Print[alphap];"//OutputForm];
Print[alphap];
Print[">>> Print[Ap];"//OutputForm];
Print[Ap];
Print[">>> {alpha, A} = FluFluQueue[Qin, Rin, Qout, Rout, False, \"flDistrME\"];"//OutputForm];
{alpha, A} = FluFluQueue[Qin, Rin, Qout, Rout, False, "flDistrME"];
Print[">>> Print[alpha];"//OutputForm];
Print[alpha];
Print[">>> Print[A];"//OutputForm];
Print[A];
Print[">>> fldFromPH = CdfFromPH[alphap, Ap, Range[0.,1.,0.1]];"//OutputForm];
fldFromPH = CdfFromPH[alphap, Ap, Range[0.,1.,0.1]];
Print[">>> Print[fldFromPH];"//OutputForm];
Print[fldFromPH];
Print[">>> flmFromME = MomentsFromME[alpha, A, 5];"//OutputForm];
flmFromME = MomentsFromME[alpha, A, 5];
Print[">>> Print[flmFromME];"//OutputForm];
Print[flmFromME];
Print[">>> {std, stm} = FluFluQueue[Qin, Rin, Qout, Rout, False, \"stDistr\", Range[0.,1.,0.1], \"stMoms\", 5];"//OutputForm];
{std, stm} = FluFluQueue[Qin, Rin, Qout, Rout, False, "stDistr", Range[0.,1.,0.1], "stMoms", 5];
Print[">>> Print[std];"//OutputForm];
Print[std];
Print[">>> Print[stm];"//OutputForm];
Print[stm];
Print[">>> {betap, Bp} = FluFluQueue[Qin, Rin, Qout, Rout, False, \"stDistrPH\"];"//OutputForm];
{betap, Bp} = FluFluQueue[Qin, Rin, Qout, Rout, False, "stDistrPH"];
Print[">>> Print[betap];"//OutputForm];
Print[betap];
Print[">>> Print[Bp];"//OutputForm];
Print[Bp];
Print[">>> {beta, B} = FluFluQueue[Qin, Rin, Qout, Rout, False, \"stDistrME\"];"//OutputForm];
{beta, B} = FluFluQueue[Qin, Rin, Qout, Rout, False, "stDistrME"];
Print[">>> Print[beta];"//OutputForm];
Print[beta];
Print[">>> Print[B];"//OutputForm];
Print[B];
Print[">>> stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];"//OutputForm];
stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];
Print[">>> Print[stdFromPH];"//OutputForm];
Print[stdFromPH];
Print[">>> stmFromME = MomentsFromME[beta, B, 5];"//OutputForm];
stmFromME = MomentsFromME[beta, B, 5];
Print[">>> Print[stmFromME];"//OutputForm];
Print[stmFromME];
Iin = IdentityMatrix[Dimensions[Qin][[1]]];
Iout = IdentityMatrix[Dimensions[Qout][[1]]];
BuTools`Verbose = False;
{gamma, G} = FluidQueue[KroneckerProduct[Qin, Iout]+KroneckerProduct[Iin, Qout], KroneckerProduct[Rin, Iout], KroneckerProduct[Iin, Rout], "stDistrME"];
BuTools`Verbose = True;
msmall = MomentsFromME[beta, B, 5];
mlarge = MomentsFromME[gamma, G, 5];
Print[">>> {fld, flm} = FluFluQueue[Qin, Rin, Qout, Rout, True, \"flDistr\", Range[0.,1.,0.1], \"flMoms\", 5];"//OutputForm];
{fld, flm} = FluFluQueue[Qin, Rin, Qout, Rout, True, "flDistr", Range[0.,1.,0.1], "flMoms", 5];
Print[">>> Print[fld];"//OutputForm];
Print[fld];
Print[">>> Print[flm];"//OutputForm];
Print[flm];
Print[">>> {alphap, Ap} = FluFluQueue[Qin, Rin, Qout, Rout, True, \"flDistrPH\"];"//OutputForm];
{alphap, Ap} = FluFluQueue[Qin, Rin, Qout, Rout, True, "flDistrPH"];
Print[">>> Print[alphap];"//OutputForm];
Print[alphap];
Print[">>> Print[Ap];"//OutputForm];
Print[Ap];
Print[">>> {alpha, A} = FluFluQueue[Qin, Rin, Qout, Rout, True, \"flDistrME\"];"//OutputForm];
{alpha, A} = FluFluQueue[Qin, Rin, Qout, Rout, True, "flDistrME"];
Print[">>> Print[alpha];"//OutputForm];
Print[alpha];
Print[">>> Print[A];"//OutputForm];
Print[A];
Print[">>> fldFromPH = CdfFromPH[alphap, Ap, Range[0.,1.,0.1]];"//OutputForm];
fldFromPH = CdfFromPH[alphap, Ap, Range[0.,1.,0.1]];
Print[">>> Print[fldFromPH];"//OutputForm];
Print[fldFromPH];
Print[">>> flmFromME = MomentsFromME[alpha, A, 5];"//OutputForm];
flmFromME = MomentsFromME[alpha, A, 5];
Print[">>> Print[flmFromME];"//OutputForm];
Print[flmFromME];
Print[">>> {std, stm} = FluFluQueue[Qin, Rin, Qout, Rout, True, \"stDistr\", Range[0.,1.,0.1], \"stMoms\", 5];"//OutputForm];
{std, stm} = FluFluQueue[Qin, Rin, Qout, Rout, True, "stDistr", Range[0.,1.,0.1], "stMoms", 5];
Print[">>> Print[std];"//OutputForm];
Print[std];
Print[">>> Print[stm];"//OutputForm];
Print[stm];
Print[">>> {betap, Bp} = FluFluQueue[Qin, Rin, Qout, Rout, True, \"stDistrPH\"];"//OutputForm];
{betap, Bp} = FluFluQueue[Qin, Rin, Qout, Rout, True, "stDistrPH"];
Print[">>> Print[betap];"//OutputForm];
Print[betap];
Print[">>> Print[Bp];"//OutputForm];
Print[Bp];
Print[">>> {beta, B} = FluFluQueue[Qin, Rin, Qout, Rout, True, \"stDistrME\"];"//OutputForm];
{beta, B} = FluFluQueue[Qin, Rin, Qout, Rout, True, "stDistrME"];
Print[">>> Print[beta];"//OutputForm];
Print[beta];
Print[">>> Print[B];"//OutputForm];
Print[B];
Print[">>> stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];"//OutputForm];
stdFromPH = CdfFromPH[betap, Bp, Range[0.,1.,0.1]];
Print[">>> Print[stdFromPH];"//OutputForm];
Print[stdFromPH];
Print[">>> stmFromME = MomentsFromME[beta, B, 5];"//OutputForm];
stmFromME = MomentsFromME[beta, B, 5];
Print[">>> Print[stmFromME];"//OutputForm];
Print[stmFromME];
Iin = IdentityMatrix[Dimensions[Qin][[1]]];
Iout = IdentityMatrix[Dimensions[Qout][[1]]];
BuTools`Verbose = False;
{gamma, G} = FluidQueue[KroneckerProduct[Qin, Iout]+KroneckerProduct[Iin, Qout], KroneckerProduct[Rin, Iout], KroneckerProduct[Iin, Rout], "Q0", KroneckerProduct[Qin, Iout]+KroneckerProduct[Rin, PseudoInverse[Rout].Qout], "stDistrME"];
BuTools`Verbose = True;
msmall = MomentsFromME[beta, B, 5];
mlarge = MomentsFromME[gamma, G, 5];
$Output = tmpOut;Close[stream];

