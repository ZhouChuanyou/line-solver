import sys
sys.path.append("/home/gabor/github/butools/Python")
import math
import numpy as np
import numpy.matlib as ml
import matplotlib.pyplot as plt
import butools
from butools.utils import *
from butools.ph import *
from butools.dph import *
from butools.map import *
from butools.moments import *
from butools.reptrans import*
from butools.mc import *
from butools.dmap import *
from butools.trace import *
from butools.mam import *
from butools.queues import *
from butools.fitting import *
from contextlib import redirect_stdout
import os


print('---BuTools: MAP package test file---')
print('Enable the verbose messages with the BuToolsVerbose flag')
butools.verbose = True
print('Enable input parameter checking with the BuToolsCheckInput flag')
butools.checkInput = True
np.set_printoptions(precision=5,linewidth=1024)
outFile = open('/home/gabor/github/butools/test/docex/MAP_python.docex','w')
with redirect_stdout(outFile):
    print('=== MarginalDistributionFromMAP ===')
    print('>>> D0 = ml.matrix([[-0.17, 0, 0, 0.07],[0.01, -0.78, 0.03, 0.08],[0.22, 0.17, -1.1, 0.02],[0.04, 0.12, 0, -0.42]])')
    D0 = ml.matrix([[-0.17, 0, 0, 0.07],[0.01, -0.78, 0.03, 0.08],[0.22, 0.17, -1.1, 0.02],[0.04, 0.12, 0, -0.42]])
    print('>>> D1 = ml.matrix([[0, 0.06, 0, 0.04],[0.04, 0.19, 0.21, 0.22],[0.22, 0.13, 0.15, 0.19],[0.05, 0, 0.17, 0.04]])')
    D1 = ml.matrix([[0, 0.06, 0, 0.04],[0.04, 0.19, 0.21, 0.22],[0.22, 0.13, 0.15, 0.19],[0.05, 0, 0.17, 0.04]])
    print('>>> a, A = MarginalDistributionFromMAP(D0, D1)')
    a, A = MarginalDistributionFromMAP(D0, D1)
    print('>>> print(a)')
    print(a)
    print('>>> print(A)')
    print(A)
    print('=== MarginalMomentsFromMAP ===')
    print('>>> D0 = ml.matrix([[-0.17, 0, 0, 0.07],[0.01, -0.78, 0.03, 0.08],[0.22, 0.17, -1.1, 0.02],[0.04, 0.12, 0, -0.42]])')
    D0 = ml.matrix([[-0.17, 0, 0, 0.07],[0.01, -0.78, 0.03, 0.08],[0.22, 0.17, -1.1, 0.02],[0.04, 0.12, 0, -0.42]])
    print('>>> D1 = ml.matrix([[0, 0.06, 0, 0.04],[0.04, 0.19, 0.21, 0.22],[0.22, 0.13, 0.15, 0.19],[0.05, 0, 0.17, 0.04]])')
    D1 = ml.matrix([[0, 0.06, 0, 0.04],[0.04, 0.19, 0.21, 0.22],[0.22, 0.13, 0.15, 0.19],[0.05, 0, 0.17, 0.04]])
    print('>>> moms = MarginalMomentsFromMAP(D0, D1)')
    moms = MarginalMomentsFromMAP(D0, D1)
    print('>>> print(moms)')
    print(moms)
    print('=== MarginalDistributionFromRAP ===')
    print('>>> H0 = ml.matrix([[-2, 0, 0],[0, -3, 1],[0, -1, -2]])')
    H0 = ml.matrix([[-2, 0, 0],[0, -3, 1],[0, -1, -2]])
    print('>>> H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1]])')
    H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1]])
    print('>>> a, A = MarginalDistributionFromRAP(H0, H1)')
    a, A = MarginalDistributionFromRAP(H0, H1)
    print('>>> print(a)')
    print(a)
    print('>>> print(A)')
    print(A)
    print('=== MarginalMomentsFromRAP ===')
    print('>>> H0 = ml.matrix([[-2., 0, 0],[0, -3., 1.],[0, -1., -2.]])')
    H0 = ml.matrix([[-2., 0, 0],[0, -3., 1.],[0, -1., -2.]])
    print('>>> H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1.]])')
    H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1.]])
    print('>>> moms = MarginalMomentsFromRAP(H0, H1)')
    moms = MarginalMomentsFromRAP(H0, H1)
    print('>>> print(moms)')
    print(moms)
    print('=== MarginalDistributionFromMMAP ===')
    print('>>> D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])')
    D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])
    print('>>> D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])')
    D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])
    print('>>> D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])')
    D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])
    print('>>> D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])')
    D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])
    print('>>> a, A = MarginalDistributionFromMMAP([D0, D1, D2, D3])')
    a, A = MarginalDistributionFromMMAP([D0, D1, D2, D3])
    print('>>> print(a)')
    print(a)
    print('>>> print(A)')
    print(A)
    print('=== MarginalMomentsFromMMAP ===')
    print('>>> D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])')
    D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])
    print('>>> D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])')
    D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])
    print('>>> D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])')
    D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])
    print('>>> D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])')
    D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])
    print('>>> moms = MarginalMomentsFromMMAP([D0, D1, D2, D3])')
    moms = MarginalMomentsFromMMAP([D0, D1, D2, D3])
    print('>>> print(moms)')
    print(moms)
    print('=== MarginalDistributionFromMRAP ===')
    print('>>> x = 0.18')
    x = 0.18
    print('>>> H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])')
    H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])
    print('>>> H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])')
    H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])
    print('>>> H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])')
    H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])
    print('>>> a, A = MarginalDistributionFromMRAP([H0, H1, H2])')
    a, A = MarginalDistributionFromMRAP([H0, H1, H2])
    print('>>> print(a)')
    print(a)
    print('>>> print(A)')
    print(A)
    print('=== MarginalMomentsFromMRAP ===')
    print('>>> x = 0.18')
    x = 0.18
    print('>>> H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])')
    H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])
    print('>>> H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])')
    H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])
    print('>>> H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])')
    H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])
    print('>>> moms = MarginalMomentsFromMRAP([H0, H1, H2])')
    moms = MarginalMomentsFromMRAP([H0, H1, H2])
    print('>>> print(moms)')
    print(moms)
    print('=== LagCorrelationsFromMAP ===')
    print('>>> D0 = ml.matrix([[-5., 0, 1., 1.],[1., -8., 1., 0],[1., 0, -4., 1.],[1., 2., 3., -9.]])')
    D0 = ml.matrix([[-5., 0, 1., 1.],[1., -8., 1., 0],[1., 0, -4., 1.],[1., 2., 3., -9.]])
    print('>>> D1 = ml.matrix([[0, 1., 0, 2.],[2., 1., 3., 0],[0, 0, 1., 1.],[1., 1., 0, 1.]])')
    D1 = ml.matrix([[0, 1., 0, 2.],[2., 1., 3., 0],[0, 0, 1., 1.],[1., 1., 0, 1.]])
    print('>>> corr = LagCorrelationsFromMAP(D0, D1, 3)')
    corr = LagCorrelationsFromMAP(D0, D1, 3)
    print('>>> print(corr)')
    print(corr)
    print('=== LagCorrelationsFromRAP ===')
    print('>>> H0 = ml.matrix([[-2., 0, 0],[0, -3., 1.],[0, -1., -2.]])')
    H0 = ml.matrix([[-2., 0, 0],[0, -3., 1.],[0, -1., -2.]])
    print('>>> H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1.]])')
    H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1.]])
    print('>>> corr = LagCorrelationsFromRAP(H0, H1, 3)')
    corr = LagCorrelationsFromRAP(H0, H1, 3)
    print('>>> print(corr)')
    print(corr)
    print('=== LagkJointMomentsFromMAP ===')
    print('>>> D0 = ml.matrix([[-5., 0, 1., 1.],[1., -8., 1., 0],[1., 0, -4., 1.],[1., 2., 3., -9.]])')
    D0 = ml.matrix([[-5., 0, 1., 1.],[1., -8., 1., 0],[1., 0, -4., 1.],[1., 2., 3., -9.]])
    print('>>> D1 = ml.matrix([[0, 1., 0, 2.],[2., 1., 3., 0],[0, 0, 1., 1.],[1., 1., 0, 1.]])')
    D1 = ml.matrix([[0, 1., 0, 2.],[2., 1., 3., 0],[0, 0, 1., 1.],[1., 1., 0, 1.]])
    print('>>> Nm = LagkJointMomentsFromMAP(D0, D1, 4, 1)')
    Nm = LagkJointMomentsFromMAP(D0, D1, 4, 1)
    print('>>> print(Nm)')
    print(Nm)
    print('>>> moms = MarginalMomentsFromMAP(D0, D1, 4)')
    moms = MarginalMomentsFromMAP(D0, D1, 4)
    print('>>> print(moms)')
    print(moms)
    print('>>> cjm = np.zeros(3)')
    cjm = np.zeros(3)
    print('>>> for i in range(1,4,1):')
    print('>>>     Nx = LagkJointMomentsFromMAP(D0, D1, 1, i)')
    print('>>>     cjm[i-1] = (Nx[1, 1]-moms[0]**2)/(moms[1]-moms[0]**2)')
    for i in range(1,4,1):
        Nx = LagkJointMomentsFromMAP(D0, D1, 1, i)
        cjm[i-1] = (Nx[1, 1]-moms[0]**2)/(moms[1]-moms[0]**2)
    print('>>> print(cjm)')
    print(cjm)
    print('>>> corr = LagCorrelationsFromMAP(D0, D1, 3)')
    corr = LagCorrelationsFromMAP(D0, D1, 3)
    print('>>> print(corr)')
    print(corr)
    mNm1 = Nm[0, 1:].A.flatten()
    mNm2 = Nm[1:, 0].A.flatten()
    print('=== LagkJointMomentsFromRAP ===')
    print('>>> H0 = ml.matrix([[-2., 0, 0],[0, -3., 1.],[0, -1., -2.]])')
    H0 = ml.matrix([[-2., 0, 0],[0, -3., 1.],[0, -1., -2.]])
    print('>>> H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1.]])')
    H1 = ml.matrix([[1.8, 0.2, 0],[0.2, 1.8, 0],[0.2, 1.8, 1.]])
    print('>>> Nm = LagkJointMomentsFromRAP(H0, H1, 4, 1)')
    Nm = LagkJointMomentsFromRAP(H0, H1, 4, 1)
    print('>>> print(Length(Nm))')
    print(Length(Nm))
    print('>>> moms = MarginalMomentsFromRAP(H0, H1, 4)')
    moms = MarginalMomentsFromRAP(H0, H1, 4)
    print('>>> print(moms)')
    print(moms)
    print('>>> cjm = np.zeros(3)')
    cjm = np.zeros(3)
    print('>>> for i in range(1,4,1):')
    print('>>>     Nx = LagkJointMomentsFromRAP(H0, H1, 1, i)')
    print('>>>     cjm[i-1] = (Nx[1, 1]-moms[0]**2)/(moms[1]-moms[0]**2)')
    for i in range(1,4,1):
        Nx = LagkJointMomentsFromRAP(H0, H1, 1, i)
        cjm[i-1] = (Nx[1, 1]-moms[0]**2)/(moms[1]-moms[0]**2)
    print('>>> print(cjm)')
    print(cjm)
    print('>>> corr = LagCorrelationsFromRAP(H0, H1, 3)')
    corr = LagCorrelationsFromRAP(H0, H1, 3)
    print('>>> print(corr)')
    print(corr)
    mNm1 = Nm[0, 1:].A.flatten()
    mNm2 = Nm[1:, 0].A.flatten()
    print('=== LagkJointMomentsFromMMAP ===')
    print('>>> D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])')
    D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])
    print('>>> D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])')
    D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])
    print('>>> D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])')
    D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])
    print('>>> D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])')
    D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])
    print('>>> Nm = LagkJointMomentsFromMMAP([D0, D1, D2, D3], 3, 1)')
    Nm = LagkJointMomentsFromMMAP([D0, D1, D2, D3], 3, 1)
    print('>>> print(Nm[0])')
    print(Nm[0])
    print('>>> print(Nm[1])')
    print(Nm[1])
    print('>>> print(Nm[2])')
    print(Nm[2])
    print('=== LagkJointMomentsFromMRAP ===')
    print('>>> x = 0.18')
    x = 0.18
    print('>>> H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])')
    H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])
    print('>>> H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])')
    H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])
    print('>>> H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])')
    H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])
    print('>>> Nm = LagkJointMomentsFromMRAP([H0, H1, H2], 3, 2)')
    Nm = LagkJointMomentsFromMRAP([H0, H1, H2], 3, 2)
    print('>>> print(Nm[0])')
    print(Nm[0])
    print('>>> print(Nm[1])')
    print(Nm[1])
    print('=== RandomMAP ===')
    print('>>> D0, D1 = RandomMAP(4, 1.62, 10)')
    D0, D1 = RandomMAP(4, 1.62, 10)
    print('>>> print(D0)')
    print(D0)
    print('>>> print(D1)')
    print(D1)
    print('>>> m = MarginalMomentsFromMAP(D0, D1, 1)[0]')
    m = MarginalMomentsFromMAP(D0, D1, 1)[0]
    print('>>> print(m)')
    print(m)
    print('=== RandomMMAP ===')
    print('>>> Dm = RandomMMAP(4, 3, 1.62, 10)')
    Dm = RandomMMAP(4, 3, 1.62, 10)
    print('>>> print(Dm[0])')
    print(Dm[0])
    print('>>> print(Dm[1])')
    print(Dm[1])
    print('>>> print(Dm[2])')
    print(Dm[2])
    print('>>> print(Dm[3])')
    print(Dm[3])
    print('>>> m = MarginalMomentsFromMMAP(Dm, 1)[0]')
    m = MarginalMomentsFromMMAP(Dm, 1)[0]
    print('>>> print(m)')
    print(m)
    print('=== CheckMAPRepresentation ===')
    print('>>> D0 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.]])')
    D0 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.]])
    print('>>> D1 = ml.matrix([[-1., 0, 1., 0],[0, -2., 0, 1.],[1., 0, -3., 0],[1., 2., 2., 1.]])')
    D1 = ml.matrix([[-1., 0, 1., 0],[0, -2., 0, 1.],[1., 0, -3., 0],[1., 2., 2., 1.]])
    print('>>> flag = CheckMAPRepresentation(D0, D1)')
    flag = CheckMAPRepresentation(D0, D1)
    print('>>> print(flag)')
    print(flag)
    print('>>> D0 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.]])')
    D0 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.]])
    print('>>> D1 = ml.matrix([[1., 0, 1.],[0, 2., 0],[1., 0, 3.]])')
    D1 = ml.matrix([[1., 0, 1.],[0, 2., 0],[1., 0, 3.]])
    print('>>> flag = CheckMAPRepresentation(D0, D1)')
    flag = CheckMAPRepresentation(D0, D1)
    print('>>> print(flag)')
    print(flag)
    print('>>> D0 = ml.matrix([[-3., 0, 1.],[0, -2., 0],[1., 0, -5.]])')
    D0 = ml.matrix([[-3., 0, 1.],[0, -2., 0],[1., 0, -5.]])
    print('>>> D1 = ml.matrix([[1., 0, 1.],[0, 2., 0],[1., 0, 3.]])')
    D1 = ml.matrix([[1., 0, 1.],[0, 2., 0],[1., 0, 3.]])
    print('>>> flag = CheckMAPRepresentation(D0, D1)')
    flag = CheckMAPRepresentation(D0, D1)
    print('>>> print(flag)')
    print(flag)
    print('=== CheckRAPRepresentation ===')
    print('>>> H0 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.],[1., 2., 2.]])')
    H0 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.],[1., 2., 2.]])
    print('>>> H1 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.],[1., 2., 2.]])')
    H1 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.],[1., 2., 2.]])
    print('>>> flag = CheckRAPRepresentation(H0, H1)')
    flag = CheckRAPRepresentation(H0, H1)
    print('>>> print(flag)')
    print(flag)
    print('>>> H0 = ml.matrix([[-1., 0, 2.],[0, 2., 0],[1., 0, -3.]])')
    H0 = ml.matrix([[-1., 0, 2.],[0, 2., 0],[1., 0, -3.]])
    print('>>> H1 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.]])')
    H1 = ml.matrix([[-1., 0, 1.],[0, -2., 0],[1., 0, -3.]])
    print('>>> flag = CheckRAPRepresentation(H0, H1)')
    flag = CheckRAPRepresentation(H0, H1)
    print('>>> print(flag)')
    print(flag)
    print('>>> H0 = ml.matrix([[-1., 0, 0],[0, -2., 2.],[0, 3., -3.]])')
    H0 = ml.matrix([[-1., 0, 0],[0, -2., 2.],[0, 3., -3.]])
    print('>>> H1 = ml.matrix([[0, 0, 1.],[0, -1., 1.],[1., 0, -1.]])')
    H1 = ml.matrix([[0, 0, 1.],[0, -1., 1.],[1., 0, -1.]])
    print('>>> flag = CheckRAPRepresentation(H0, H1)')
    flag = CheckRAPRepresentation(H0, H1)
    print('>>> print(flag)')
    print(flag)
    print('>>> H0 = ml.matrix([[-2., 0, 0],[0, -1., 1.],[0, -1., -1.]])')
    H0 = ml.matrix([[-2., 0, 0],[0, -1., 1.],[0, -1., -1.]])
    print('>>> H1 = ml.matrix([[1., 0, 1.],[0, 1., -1.],[1., 0, 1.]])')
    H1 = ml.matrix([[1., 0, 1.],[0, 1., -1.],[1., 0, 1.]])
    print('>>> flag = CheckRAPRepresentation(H0, H1)')
    flag = CheckRAPRepresentation(H0, H1)
    print('>>> print(flag)')
    print(flag)
    print('>>> H0 = ml.matrix([[-1., 0, 0],[0, -2., 1.],[0, -1., -2.]])')
    H0 = ml.matrix([[-1., 0, 0],[0, -2., 1.],[0, -1., -2.]])
    print('>>> H1 = ml.matrix([[1., 0, 0],[0, 1., 0],[1., 1., 1.]])')
    H1 = ml.matrix([[1., 0, 0],[0, 1., 0],[1., 1., 1.]])
    print('>>> flag = CheckRAPRepresentation(H0, H1)')
    flag = CheckRAPRepresentation(H0, H1)
    print('>>> print(flag)')
    print(flag)
    print('=== CheckMMAPRepresentation ===')
    print('>>> D0 = ml.matrix([[-1.05, 0.03, 0.07],[0.19, -1.63, 0.06],[0, 0.2, -1.03]])')
    D0 = ml.matrix([[-1.05, 0.03, 0.07],[0.19, -1.63, 0.06],[0, 0.2, -1.03]])
    print('>>> D1 = ml.matrix([[0.16, 0.11, 0],[0.1, 0.16, 0],[0.27, 0, 0.19]])')
    D1 = ml.matrix([[0.16, 0.11, 0],[0.1, 0.16, 0],[0.27, 0, 0.19]])
    print('>>> D2 = ml.matrix([[0.01, 0.09, 0.13],[0.26, 0.21, 0.05],[0, 0.16, 0.07]])')
    D2 = ml.matrix([[0.01, 0.09, 0.13],[0.26, 0.21, 0.05],[0, 0.16, 0.07]])
    print('>>> D3 = ml.matrix([[0.19, 0.06, 0.2],[0.17, 0.16, 0.27],[0, 0, 0.14]])')
    D3 = ml.matrix([[0.19, 0.06, 0.2],[0.17, 0.16, 0.27],[0, 0, 0.14]])
    print('>>> flag = CheckMMAPRepresentation([D0, D1, D2, D3])')
    flag = CheckMMAPRepresentation([D0, D1, D2, D3])
    print('>>> print(flag)')
    print(flag)
    print('=== CheckMRAPRepresentation ===')
    print('>>> x = 0.18')
    x = 0.18
    print('>>> H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])')
    H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])
    print('>>> H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])')
    H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])
    print('>>> H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])')
    H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])
    print('>>> flag = CheckMRAPRepresentation([H0, H1, H2])')
    flag = CheckMRAPRepresentation([H0, H1, H2])
    print('>>> print(flag)')
    print(flag)
    print('=== RAPFromMoments ===')
    print('>>> G0 = ml.matrix([[-6.2, 2., 0.],[2., -9., 1.],[1., 0, -3.]])')
    G0 = ml.matrix([[-6.2, 2., 0.],[2., -9., 1.],[1., 0, -3.]])
    print('>>> G1 = ml.matrix([[2.2, -2., 4.],[2., 2., 2.],[1., 0, 1.]])')
    G1 = ml.matrix([[2.2, -2., 4.],[2., 2., 2.],[1., 0, 1.]])
    print('>>> moms = MarginalMomentsFromRAP(G0, G1, 5)')
    moms = MarginalMomentsFromRAP(G0, G1, 5)
    print('>>> print(moms)')
    print(moms)
    print('>>> Nm = LagkJointMomentsFromRAP(G0, G1, 2, 1)')
    Nm = LagkJointMomentsFromRAP(G0, G1, 2, 1)
    print('>>> print(Nm)')
    print(Nm)
    print('>>> H0, H1 = RAPFromMoments(moms, Nm)')
    H0, H1 = RAPFromMoments(moms, Nm)
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> rmoms = MarginalMomentsFromRAP(H0, H1, 5)')
    rmoms = MarginalMomentsFromRAP(H0, H1, 5)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rNm = LagkJointMomentsFromRAP(H0, H1, 2, 1)')
    rNm = LagkJointMomentsFromRAP(H0, H1, 2, 1)
    print('>>> print(rNm)')
    print(rNm)
    print('>>> G0 = ml.matrix([[-5., 0, 1., 1.],[1., -8., 1., 0],[1., 0, -4., 1.],[1., 2., 3., -9.]])')
    G0 = ml.matrix([[-5., 0, 1., 1.],[1., -8., 1., 0],[1., 0, -4., 1.],[1., 2., 3., -9.]])
    print('>>> G1 = ml.matrix([[0, 1., 0, 2.],[2., 1., 3., 0],[0, 0, 1., 1.],[1., 1., 0, 1.]])')
    G1 = ml.matrix([[0, 1., 0, 2.],[2., 1., 3., 0],[0, 0, 1., 1.],[1., 1., 0, 1.]])
    print('>>> moms = MarginalMomentsFromRAP(G0, G1, 7)')
    moms = MarginalMomentsFromRAP(G0, G1, 7)
    print('>>> print(moms)')
    print(moms)
    print('>>> Nm = LagkJointMomentsFromRAP(G0, G1, 3, 1)')
    Nm = LagkJointMomentsFromRAP(G0, G1, 3, 1)
    print('>>> print(Nm)')
    print(Nm)
    print('>>> H0, H1 = RAPFromMoments(moms, Nm)')
    H0, H1 = RAPFromMoments(moms, Nm)
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> butools.checkPrecision = 10.**-8')
    butools.checkPrecision = 10.**-8
    print('>>> rmoms = MarginalMomentsFromRAP(H0, H1, 7)')
    rmoms = MarginalMomentsFromRAP(H0, H1, 7)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rNm = LagkJointMomentsFromRAP(H0, H1, 3, 1)')
    rNm = LagkJointMomentsFromRAP(H0, H1, 3, 1)
    print('>>> print(rNm)')
    print(rNm)
    print('=== MRAPFromMoments ===')
    print('>>> G0 = ml.matrix([[-1.05, 0.03, 0.07],[0.19, -1.63, 0.06],[0, 0.2, -1.03]])')
    G0 = ml.matrix([[-1.05, 0.03, 0.07],[0.19, -1.63, 0.06],[0, 0.2, -1.03]])
    print('>>> G1 = ml.matrix([[0.16, 0.11, 0],[0.1, 0.16, 0],[0.27, 0, 0.19]])')
    G1 = ml.matrix([[0.16, 0.11, 0],[0.1, 0.16, 0],[0.27, 0, 0.19]])
    print('>>> G2 = ml.matrix([[0.01, 0.09, 0.13],[0.26, 0.21, 0.05],[0, 0.16, 0.07]])')
    G2 = ml.matrix([[0.01, 0.09, 0.13],[0.26, 0.21, 0.05],[0, 0.16, 0.07]])
    print('>>> G3 = ml.matrix([[0.19, 0.06, 0.2],[0.17, 0.16, 0.27],[0, 0, 0.14]])')
    G3 = ml.matrix([[0.19, 0.06, 0.2],[0.17, 0.16, 0.27],[0, 0, 0.14]])
    print('>>> G = [G0, G1, G2, G3]')
    G = [G0, G1, G2, G3]
    print('>>> moms = MarginalMomentsFromMRAP(G, 5)')
    moms = MarginalMomentsFromMRAP(G, 5)
    print('>>> print(moms)')
    print(moms)
    print('>>> Nm = LagkJointMomentsFromMRAP(G, 2, 1)')
    Nm = LagkJointMomentsFromMRAP(G, 2, 1)
    print('>>> Nm1, Nm2, Nm3 = Nm')
    Nm1, Nm2, Nm3 = Nm
    print('>>> print(Nm1)')
    print(Nm1)
    print('>>> print(Nm2)')
    print(Nm2)
    print('>>> print(Nm3)')
    print(Nm3)
    print('>>> H = MRAPFromMoments(moms, Nm)')
    H = MRAPFromMoments(moms, Nm)
    print('>>> print(H[0])')
    print(H[0])
    print('>>> print(H[1])')
    print(H[1])
    print('>>> print(H[2])')
    print(H[2])
    print('>>> print(H[3])')
    print(H[3])
    print('>>> butools.checkPrecision = 10.**-10')
    butools.checkPrecision = 10.**-10
    print('>>> rmoms = MarginalMomentsFromMRAP(H, 5)')
    rmoms = MarginalMomentsFromMRAP(H, 5)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rNm = LagkJointMomentsFromMRAP(H, 2, 1)')
    rNm = LagkJointMomentsFromMRAP(H, 2, 1)
    print('>>> rNm1, rNm2, rNm3 = rNm')
    rNm1, rNm2, rNm3 = rNm
    print('>>> print(rNm1)')
    print(rNm1)
    print('>>> print(rNm2)')
    print(rNm2)
    print('>>> print(rNm3)')
    print(rNm3)
    print('=== RAPFromMomentsAndCorrelations ===')
    print('>>> H0 = ml.matrix([[-6.2, 2., 0],[2., -9., 1.],[1., 0, -3.]])')
    H0 = ml.matrix([[-6.2, 2., 0],[2., -9., 1.],[1., 0, -3.]])
    print('>>> H1 = ml.matrix([[2.2, 0, 2.],[0, 4., 2.],[0, 1., 1.]])')
    H1 = ml.matrix([[2.2, 0, 2.],[0, 4., 2.],[0, 1., 1.]])
    print('>>> mom = MarginalMomentsFromRAP(H0, H1)')
    mom = MarginalMomentsFromRAP(H0, H1)
    print('>>> print(mom)')
    print(mom)
    print('>>> corr = LagCorrelationsFromRAP(H0, H1, 3)')
    corr = LagCorrelationsFromRAP(H0, H1, 3)
    print('>>> print(corr)')
    print(corr)
    print('>>> G0, G1 = RAPFromMomentsAndCorrelations(mom, corr)')
    G0, G1 = RAPFromMomentsAndCorrelations(mom, corr)
    print('>>> print(G0)')
    print(G0)
    print('>>> print(G1)')
    print(G1)
    print('>>> rmom = MarginalMomentsFromRAP(G0, G1)')
    rmom = MarginalMomentsFromRAP(G0, G1)
    print('>>> print(rmom)')
    print(rmom)
    print('>>> rcorr = LagCorrelationsFromRAP(G0, G1, 3)')
    rcorr = LagCorrelationsFromRAP(G0, G1, 3)
    print('>>> print(rcorr)')
    print(rcorr)
    print('=== MAP2FromMoments ===')
    print('>>> D0 = ml.matrix([[-14., 1.],[1, -25.]])')
    D0 = ml.matrix([[-14., 1.],[1, -25.]])
    print('>>> D1 = ml.matrix([[6., 7.],[3., 21.]])')
    D1 = ml.matrix([[6., 7.],[3., 21.]])
    print('>>> moms = MarginalMomentsFromMAP(D0, D1, 3)')
    moms = MarginalMomentsFromMAP(D0, D1, 3)
    print('>>> print(moms)')
    print(moms)
    print('>>> corr = LagCorrelationsFromMAP(D0, D1, 1)[0]')
    corr = LagCorrelationsFromMAP(D0, D1, 1)[0]
    print('>>> print(corr)')
    print(corr)
    print('>>> D0, D1 = MAP2FromMoments(moms, corr)')
    D0, D1 = MAP2FromMoments(moms, corr)
    print('>>> print(D0)')
    print(D0)
    print('>>> print(D1)')
    print(D1)
    print('>>> rmoms = MarginalMomentsFromMAP(D0, D1, 3)')
    rmoms = MarginalMomentsFromMAP(D0, D1, 3)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rcorr = LagCorrelationsFromMAP(D0, D1, 1)[0]')
    rcorr = LagCorrelationsFromMAP(D0, D1, 1)[0]
    print('>>> print(rcorr)')
    print(rcorr)
    print('=== MAP2CorrelationBounds ===')
    print('>>> D0 = ml.matrix([[-14., 1.],[1., -25.]])')
    D0 = ml.matrix([[-14., 1.],[1., -25.]])
    print('>>> D1 = ml.matrix([[6., 7.],[3., 21.]])')
    D1 = ml.matrix([[6., 7.],[3., 21.]])
    print('>>> moms = MarginalMomentsFromMAP(D0, D1, 3)')
    moms = MarginalMomentsFromMAP(D0, D1, 3)
    print('>>> print(moms)')
    print(moms)
    print('>>> lb, ub = MAP2CorrelationBounds(moms)')
    lb, ub = MAP2CorrelationBounds(moms)
    print('>>> print(lb)')
    print(lb)
    print('>>> print(ub)')
    print(ub)
    print('=== MAPFromFewMomentsAndCorrelations ===')
    print('>>> moms = [1.1, 6.05]')
    moms = [1.1, 6.05]
    print('>>> corr1 = -0.17')
    corr1 = -0.17
    print('>>> D0, D1 = MAPFromFewMomentsAndCorrelations(moms, corr1)')
    D0, D1 = MAPFromFewMomentsAndCorrelations(moms, corr1)
    print('>>> print(D0)')
    print(D0)
    print('>>> print(D1)')
    print(D1)
    print('>>> rmoms = MarginalMomentsFromMAP(D0, D1, 2)')
    rmoms = MarginalMomentsFromMAP(D0, D1, 2)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rcorr1 = LagCorrelationsFromMAP(D0, D1, 1)[0]')
    rcorr1 = LagCorrelationsFromMAP(D0, D1, 1)[0]
    print('>>> print(rcorr1)')
    print(rcorr1)
    print('>>> moms = [1.2, 4.32, 20.]')
    moms = [1.2, 4.32, 20.]
    print('>>> corr1 = -0.4')
    corr1 = -0.4
    print('>>> D0, D1 = MAPFromFewMomentsAndCorrelations(moms, corr1)')
    D0, D1 = MAPFromFewMomentsAndCorrelations(moms, corr1)
    print('>>> print(D0)')
    print(D0)
    print('>>> print(D1)')
    print(D1)
    print('>>> butools.checkPrecision = 10.**-12')
    butools.checkPrecision = 10.**-12
    print('>>> rmoms = MarginalMomentsFromMAP(D0, D1, 3)')
    rmoms = MarginalMomentsFromMAP(D0, D1, 3)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rcorr1 = LagCorrelationsFromMAP(D0, D1, 1)[0]')
    rcorr1 = LagCorrelationsFromMAP(D0, D1, 1)[0]
    print('>>> print(rcorr1)')
    print(rcorr1)
    print('>>> moms = [1.2, 4.32, 20.]')
    moms = [1.2, 4.32, 20.]
    print('>>> corr1 = 0.4')
    corr1 = 0.4
    print('>>> D0, D1 = MAPFromFewMomentsAndCorrelations(moms, corr1)')
    D0, D1 = MAPFromFewMomentsAndCorrelations(moms, corr1)
    print('>>> print(D0)')
    print(D0)
    print('>>> print(D1)')
    print(D1)
    print('>>> rmoms = MarginalMomentsFromMAP(D0, D1, 3)')
    rmoms = MarginalMomentsFromMAP(D0, D1, 3)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rcorr1 = LagCorrelationsFromMAP(D0, D1, 1)[0]')
    rcorr1 = LagCorrelationsFromMAP(D0, D1, 1)[0]
    print('>>> print(rcorr1)')
    print(rcorr1)
    print('=== CanonicalFromMAP2 ===')
    print('>>> D0 = ml.matrix([[-14., 1.],[1., -25.]])')
    D0 = ml.matrix([[-14., 1.],[1., -25.]])
    print('>>> D1 = ml.matrix([[6., 7.],[3., 21.]])')
    D1 = ml.matrix([[6., 7.],[3., 21.]])
    print('>>> H0, H1 = CanonicalFromMAP2(D0, D1)')
    H0, H1 = CanonicalFromMAP2(D0, D1)
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> Cm = SimilarityMatrix(H0, D0)')
    Cm = SimilarityMatrix(H0, D0)
    print('>>> err1 = la.norm(H0*Cm-Cm*D0)')
    err1 = la.norm(H0*Cm-Cm*D0)
    print('>>> err2 = la.norm(H1*Cm-Cm*D1)')
    err2 = la.norm(H1*Cm-Cm*D1)
    print('>>> print(np.max(err1, err2))')
    print(np.max(err1, err2))
    print('=== MAPFromRAP ===')
    print('>>> D0 = ml.matrix([[-2., 2.],[2., -9.]])')
    D0 = ml.matrix([[-2., 2.],[2., -9.]])
    print('>>> D1 = ml.matrix([[-2., 2.],[3., 4.]])')
    D1 = ml.matrix([[-2., 2.],[3., 4.]])
    print('>>> H0, H1 = MAPFromRAP(D0, D1)')
    H0, H1 = MAPFromRAP(D0, D1)
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> err = la.norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1))')
    err = la.norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1))
    print('>>> print(err)')
    print(err)
    print('>>> D0 = ml.matrix([[-2.4, 2.],[2., -9.]])')
    D0 = ml.matrix([[-2.4, 2.],[2., -9.]])
    print('>>> D1 = ml.matrix([[-1.6, 2.],[3., 4.]])')
    D1 = ml.matrix([[-1.6, 2.],[3., 4.]])
    print('>>> H0, H1 = MAPFromRAP(D0, D1)')
    H0, H1 = MAPFromRAP(D0, D1)
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> err = la.norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1))')
    err = la.norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1))
    print('>>> print(err)')
    print(err)
    print('=== MMAPFromMRAP ===')
    print('>>> x = 0.18')
    x = 0.18
    print('>>> H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])')
    H0 = ml.matrix([[-5., 0.1+x, 0.9, 1.],[1., -8., 0.9, 0.1],[0.9, 0.1, -4., 1.],[1., 2., 3., -9.]])
    print('>>> H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])')
    H1 = ml.matrix([[0.1-x, 0.7, 0.1, 0.1],[0.1, 1., 1.8, 0.1],[0.1, 0.1, 0.1, 0.7],[0.7, 0.1, 0.1, 0.1]])
    print('>>> H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])')
    H2 = ml.matrix([[0.1, 0.1, 0.1, 1.7],[1.8, 0.1, 1., 0.1],[0.1, 0.1, 0.7, 0.1],[0.1, 1., 0.1, 0.8]])
    print('>>> H = [H0, H1, H2]')
    H = [H0, H1, H2]
    print('>>> moms = MarginalMomentsFromMRAP(H)')
    moms = MarginalMomentsFromMRAP(H)
    print('>>> print(moms)')
    print(moms)
    print('>>> jmom = LagkJointMomentsFromMRAP(H, 3, 1)')
    jmom = LagkJointMomentsFromMRAP(H, 3, 1)
    print('>>> G = MMAPFromMRAP(H)')
    G = MMAPFromMRAP(H)
    print('>>> print(G[0])')
    print(G[0])
    print('>>> print(G[1])')
    print(G[1])
    print('>>> print(G[2])')
    print(G[2])
    print('>>> rmoms = MarginalMomentsFromMMAP(G)')
    rmoms = MarginalMomentsFromMMAP(G)
    print('>>> print(rmoms)')
    print(rmoms)
    print('>>> rjmom = LagkJointMomentsFromMMAP(G, 3, 1)')
    rjmom = LagkJointMomentsFromMMAP(G, 3, 1)
    print('>>> err = la.norm(rjmom[0]-jmom[0])+la.norm(rjmom[1]-jmom[1])')
    err = la.norm(rjmom[0]-jmom[0])+la.norm(rjmom[1]-jmom[1])
    print('>>> print(err)')
    print(err)
    print('=== MinimalRepFromRAP ===')
    print('>>> D0 = ml.matrix([[-5., 1., 0],[3., -3., 0],[1., 1., -5.]])')
    D0 = ml.matrix([[-5., 1., 0],[3., -3., 0],[1., 1., -5.]])
    print('>>> D1 = ml.matrix([[0, 0, 4.],[0, 0, 0],[1., 1., 1.]])')
    D1 = ml.matrix([[0, 0, 4.],[0, 0, 0],[1., 1., 1.]])
    print('>>> H0, H1 = MinimalRepFromRAP(D0, D1, "cont")')
    H0, H1 = MinimalRepFromRAP(D0, D1, "cont")
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> Cm = SimilarityMatrix(H0, D0)')
    Cm = SimilarityMatrix(H0, D0)
    print('>>> err1 = la.norm(H0*Cm-Cm*D0)')
    err1 = la.norm(H0*Cm-Cm*D0)
    print('>>> err2 = la.norm(H1*Cm-Cm*D1)')
    err2 = la.norm(H1*Cm-Cm*D1)
    print('>>> print(np.max(err1, err2))')
    print(np.max(err1, err2))
    print('>>> H0, H1 = MinimalRepFromRAP(D0, D1, "obs")')
    H0, H1 = MinimalRepFromRAP(D0, D1, "obs")
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> Cm = SimilarityMatrix(H0, D0)')
    Cm = SimilarityMatrix(H0, D0)
    print('>>> err1 = la.norm(H0*Cm-Cm*D0)')
    err1 = la.norm(H0*Cm-Cm*D0)
    print('>>> err2 = la.norm(H1*Cm-Cm*D1)')
    err2 = la.norm(H1*Cm-Cm*D1)
    print('>>> print(np.max(err1, err2))')
    print(np.max(err1, err2))
    print('>>> H0, H1 = MinimalRepFromRAP(D0, D1, "obscont")')
    H0, H1 = MinimalRepFromRAP(D0, D1, "obscont")
    print('>>> print(H0)')
    print(H0)
    print('>>> print(H1)')
    print(H1)
    print('>>> Cm = SimilarityMatrix(H0, D0)')
    Cm = SimilarityMatrix(H0, D0)
    print('>>> err1 = la.norm(H0*Cm-Cm*D0)')
    err1 = la.norm(H0*Cm-Cm*D0)
    print('>>> err2 = la.norm(H1*Cm-Cm*D1)')
    err2 = la.norm(H1*Cm-Cm*D1)
    print('>>> print(np.max(err1, err2))')
    print(np.max(err1, err2))
    print('=== MinimalRepFromMRAP ===')
    print('>>> D0 = ml.matrix([[-5., 1., 0],[3., -3., 0],[1., 1., -5.]])')
    D0 = ml.matrix([[-5., 1., 0],[3., -3., 0],[1., 1., -5.]])
    print('>>> D1 = ml.matrix([[0, 0, 0.8],[0, 0, 0],[0.2, 0.2, 0.2]])')
    D1 = ml.matrix([[0, 0, 0.8],[0, 0, 0],[0.2, 0.2, 0.2]])
    print('>>> D2 = ml.matrix([[0, 0, 3.2],[0, 0, 0],[0.8, 0.8, 0.8]])')
    D2 = ml.matrix([[0, 0, 3.2],[0, 0, 0],[0.8, 0.8, 0.8]])
    print('>>> Dm = [D0, D1, D2]')
    Dm = [D0, D1, D2]
    print('>>> H = MinimalRepFromMRAP(Dm, "cont")')
    H = MinimalRepFromMRAP(Dm, "cont")
    print('>>> print(H[0])')
    print(H[0])
    print('>>> print(H[1])')
    print(H[1])
    print('>>> print(H[2])')
    print(H[2])
    print('>>> Cm = SimilarityMatrix(H[0], Dm[0])')
    Cm = SimilarityMatrix(H[0], Dm[0])
    print('>>> err = la.norm(H[0]*Cm-Cm*Dm[0])+la.norm(H[1]*Cm-Cm*Dm[1])+la.norm(H[2]*Cm-Cm*Dm[2])')
    err = la.norm(H[0]*Cm-Cm*Dm[0])+la.norm(H[1]*Cm-Cm*Dm[1])+la.norm(H[2]*Cm-Cm*Dm[2])
    print('>>> print(err)')
    print(err)
    print('>>> H = MinimalRepFromMRAP(Dm, "obs")')
    H = MinimalRepFromMRAP(Dm, "obs")
    print('>>> print(H[0])')
    print(H[0])
    print('>>> print(H[1])')
    print(H[1])
    print('>>> print(H[2])')
    print(H[2])
    print('>>> Cm = SimilarityMatrix(H[0], Dm[0])')
    Cm = SimilarityMatrix(H[0], Dm[0])
    print('>>> err = la.norm(H[0]*Cm-Cm*Dm[0])+la.norm(H[1]*Cm-Cm*Dm[1])+la.norm(H[2]*Cm-Cm*Dm[2])')
    err = la.norm(H[0]*Cm-Cm*Dm[0])+la.norm(H[1]*Cm-Cm*Dm[1])+la.norm(H[2]*Cm-Cm*Dm[2])
    print('>>> print(err)')
    print(err)
    print('>>> H = MinimalRepFromMRAP(Dm, "obscont")')
    H = MinimalRepFromMRAP(Dm, "obscont")
    print('>>> print(H[0])')
    print(H[0])
    print('>>> print(H[1])')
    print(H[1])
    print('>>> print(H[2])')
    print(H[2])
    print('>>> Cm = SimilarityMatrix(H[0], Dm[0])')
    Cm = SimilarityMatrix(H[0], Dm[0])
    print('>>> err = la.norm(H[0]*Cm-Cm*Dm[0])+la.norm(H[1]*Cm-Cm*Dm[1])+la.norm(H[2]*Cm-Cm*Dm[2])')
    err = la.norm(H[0]*Cm-Cm*Dm[0])+la.norm(H[1]*Cm-Cm*Dm[1])+la.norm(H[2]*Cm-Cm*Dm[2])
    print('>>> print(err)')
    print(err)
    print('=== SamplesFromMAP ===')
    print('>>> D0 = ml.matrix([[-0.17, 0, 0, 0.07],[0.01, -0.78, 0.03, 0.08],[0.22, 0.17, -1.1, 0.02],[0.04, 0.12, 0, -0.42]])')
    D0 = ml.matrix([[-0.17, 0, 0, 0.07],[0.01, -0.78, 0.03, 0.08],[0.22, 0.17, -1.1, 0.02],[0.04, 0.12, 0, -0.42]])
    print('>>> D1 = ml.matrix([[0, 0.06, 0, 0.04],[0.04, 0.19, 0.21, 0.22],[0.22, 0.13, 0.15, 0.19],[0.05, 0, 0.17, 0.04]])')
    D1 = ml.matrix([[0, 0.06, 0, 0.04],[0.04, 0.19, 0.21, 0.22],[0.22, 0.13, 0.15, 0.19],[0.05, 0, 0.17, 0.04]])
    print('>>> x = SamplesFromMAP(D0, D1, 10000)')
    x = SamplesFromMAP(D0, D1, 10000)
    print('>>> mt = MarginalMomentsFromTrace(x, 3)')
    mt = MarginalMomentsFromTrace(x, 3)
    print('>>> print(mt)')
    print(mt)
    print('>>> mm = MarginalMomentsFromMAP(D0, D1, 3)')
    mm = MarginalMomentsFromMAP(D0, D1, 3)
    print('>>> print(mm)')
    print(mm)
    print('=== SamplesFromMMAP ===')
    print('>>> D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])')
    D0 = ml.matrix([[-1.78, 0.29],[0.07, -0.92]])
    print('>>> D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])')
    D1 = ml.matrix([[0.15, 0.49],[0.23, 0.36]])
    print('>>> D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])')
    D2 = ml.matrix([[0.11, 0.2],[0.01, 0]])
    print('>>> D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])')
    D3 = ml.matrix([[0.14, 0.4],[0.11, 0.14]])
    print('>>> Dm = [D0, D1, D2, D3]')
    Dm = [D0, D1, D2, D3]
    print('>>> x = SamplesFromMMAP(Dm, 10000)')
    x = SamplesFromMMAP(Dm, 10000)
    print('>>> mt = MarginalMomentsFromTrace(x[:, 0], 3)')
    mt = MarginalMomentsFromTrace(x[:, 0], 3)
    print('>>> print(mt)')
    print(mt)
    print('>>> mm = MarginalMomentsFromMMAP(Dm, 3)')
    mm = MarginalMomentsFromMMAP(Dm, 3)
    print('>>> print(mm)')
    print(mm)

