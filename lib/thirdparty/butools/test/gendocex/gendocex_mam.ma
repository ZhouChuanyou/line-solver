ClearAll["Global`*"]
AppendTo[$Path,"/home/gabor/github/butools/Mathematica"];
<<BuTools`
Print["---BuTools: MAM package test file---"//OutputForm];
Print["Enable the verbose messages with the BuToolsVerbose flag"//OutputForm];
BuTools`Verbose = True;
Print["Enable input parameter checking with the BuToolsCheckInput flag"//OutputForm];
BuTools`CheckInput = true;
On[Assert];
tmpOut = $Output;
stream = OpenWrite["/home/gabor/github/butools/test/docex/MAM_mathematica.docex", FormatType -> InputForm, PageWidth -> Infinity];
$Output = {stream};
Unprotect[Print];
Print[args___] := Block[{$inMsg = True, result, str},
   If[MatrixQ[args],
       str = "{";
       Do[str = StringJoin[str, ToString[args[[r]], FormatType -> InputForm]]; 
            If[r < Length[args], str = StringJoin[str, ",\n "]], {r, Length[args]}];
            str = StringJoin[str, "}"];
            Print[str//OutputForm],
            result = Print[args],
            result = Print[args]
        ]] /; ! TrueQ[$inMsg];
Print["=== QBDFundamentalMatrices ==="]
Print[">>> B = {{0., 0.},{3., 4.}};"//OutputForm];
B = {{0., 0.},{3., 4.}};
Print[">>> L = {{-6., 5.},{3., -12.}};"//OutputForm];
L = {{-6., 5.},{3., -12.}};
Print[">>> F = {{1., 0.},{2., 0.}};"//OutputForm];
F = {{1., 0.},{2., 0.}};
Print[">>> L0 = {{-6., 5.},{6., -8.}};"//OutputForm];
L0 = {{-6., 5.},{6., -8.}};
Print[">>> {R, G, U} = QBDFundamentalMatrices[B, L, F, \"RGU\"];"//OutputForm];
{R, G, U} = QBDFundamentalMatrices[B, L, F, "RGU"];
Print[">>> Print[R];"//OutputForm];
Print[R];
Print[">>> Print[G];"//OutputForm];
Print[G];
Print[">>> Print[U];"//OutputForm];
Print[U];
Print["=== QBDSolve ==="]
Print[">>> B = {{0., 0.},{3., 4.}};"//OutputForm];
B = {{0., 0.},{3., 4.}};
Print[">>> L = {{-6., 5.},{3., -12.}};"//OutputForm];
L = {{-6., 5.},{3., -12.}};
Print[">>> F = {{1., 0.},{2., 0.}};"//OutputForm];
F = {{1., 0.},{2., 0.}};
Print[">>> L0 = {{-6., 5.},{6., -8.}};"//OutputForm];
L0 = {{-6., 5.},{6., -8.}};
Print[">>> {pi0, R} = QBDSolve[B, L, F, L0];"//OutputForm];
{pi0, R} = QBDSolve[B, L, F, L0];
Print[">>> Print[pi0];"//OutputForm];
Print[pi0];
Print[">>> Print[R];"//OutputForm];
Print[R];
Print["=== QBDStationaryDistr ==="]
Print[">>> B = {{0., 0.},{3., 4.}};"//OutputForm];
B = {{0., 0.},{3., 4.}};
Print[">>> L = {{-6., 5.},{3., -12.}};"//OutputForm];
L = {{-6., 5.},{3., -12.}};
Print[">>> F = {{1., 0.},{2., 0.}};"//OutputForm];
F = {{1., 0.},{2., 0.}};
Print[">>> L0 = {{-6., 5.},{6., -8.}};"//OutputForm];
L0 = {{-6., 5.},{6., -8.}};
Print[">>> pi = QBDStationaryDistr[pi0, R, 5];"//OutputForm];
pi = QBDStationaryDistr[pi0, R, 5];
Print[">>> Print[pi];"//OutputForm];
Print[pi];
Print["=== MG1FundamentalMatrix ==="]
Print[">>> A0 = {{0.4, 0.2},{0.3, 0.4}};"//OutputForm];
A0 = {{0.4, 0.2},{0.3, 0.4}};
Print[">>> A1 = {{0., 0.1},{0., 0.}};"//OutputForm];
A1 = {{0., 0.1},{0., 0.}};
Print[">>> A2 = {{0., 0.2},{0., 0.2}};"//OutputForm];
A2 = {{0., 0.2},{0., 0.2}};
Print[">>> A3 = {{0.1, 0.},{0.1, 0.}};"//OutputForm];
A3 = {{0.1, 0.},{0.1, 0.}};
Print[">>> A = {A0, A1, A2, A3};"//OutputForm];
A = {A0, A1, A2, A3};
Print[">>> G = MG1FundamentalMatrix[A];"//OutputForm];
G = MG1FundamentalMatrix[A];
Print[">>> Print[G];"//OutputForm];
Print[G];
Print["=== MG1StationaryDistr ==="]
Print[">>> B0 = {{0.1, 0.5},{0.3, 0.4}};"//OutputForm];
B0 = {{0.1, 0.5},{0.3, 0.4}};
Print[">>> B1 = {{0., 0.1},{0., 0.}};"//OutputForm];
B1 = {{0., 0.1},{0., 0.}};
Print[">>> B2 = {{0.2, 0.},{0., 0.2}};"//OutputForm];
B2 = {{0.2, 0.},{0., 0.2}};
Print[">>> B3 = {{0., 0.1},{0.1, 0.}};"//OutputForm];
B3 = {{0., 0.1},{0.1, 0.}};
Print[">>> A0 = {{0.4, 0.2},{0.3, 0.4}};"//OutputForm];
A0 = {{0.4, 0.2},{0.3, 0.4}};
Print[">>> A1 = {{0., 0.1},{0., 0.}};"//OutputForm];
A1 = {{0., 0.1},{0., 0.}};
Print[">>> A2 = {{0., 0.2},{0., 0.2}};"//OutputForm];
A2 = {{0., 0.2},{0., 0.2}};
Print[">>> A3 = {{0.1, 0.},{0.1, 0.}};"//OutputForm];
A3 = {{0.1, 0.},{0.1, 0.}};
Print[">>> B = {B0, B1, B2, B3};"//OutputForm];
B = {B0, B1, B2, B3};
Print[">>> A = {A0, A1, A2, A3};"//OutputForm];
A = {A0, A1, A2, A3};
Print[">>> G = MG1FundamentalMatrix[A];"//OutputForm];
G = MG1FundamentalMatrix[A];
Print[">>> Print[G];"//OutputForm];
Print[G];
Print[">>> pi = MG1StationaryDistr[A, B, G, 300];"//OutputForm];
pi = MG1StationaryDistr[A, B, G, 300];
Print["=== GM1FundamentalMatrix ==="]
Print[">>> A0 = {{0.1, 0.},{0., 0.1}};"//OutputForm];
A0 = {{0.1, 0.},{0., 0.1}};
Print[">>> A1 = {{0., 0.2},{0., 0.2}};"//OutputForm];
A1 = {{0., 0.2},{0., 0.2}};
Print[">>> A2 = {{0., 0.1},{0., 0.}};"//OutputForm];
A2 = {{0., 0.1},{0., 0.}};
Print[">>> A3 = {{0.3, 0.2},{0.3, 0.2}};"//OutputForm];
A3 = {{0.3, 0.2},{0.3, 0.2}};
Print[">>> A4 = {{0., 0.1},{0.2, 0.}};"//OutputForm];
A4 = {{0., 0.1},{0.2, 0.}};
Print[">>> A = {A0, A1, A2, A3, A4};"//OutputForm];
A = {A0, A1, A2, A3, A4};
Print[">>> R = GM1FundamentalMatrix[A];"//OutputForm];
R = GM1FundamentalMatrix[A];
Print[">>> Print[R];"//OutputForm];
Print[R];
Print["=== GM1StationaryDistr ==="]
Print[">>> B0 = {{0.7, 0.2},{0.3, 0.6}};"//OutputForm];
B0 = {{0.7, 0.2},{0.3, 0.6}};
Print[">>> B1 = {{0.3, 0.4},{0.5, 0.2}};"//OutputForm];
B1 = {{0.3, 0.4},{0.5, 0.2}};
Print[">>> B2 = {{0.2, 0.4},{0.1, 0.6}};"//OutputForm];
B2 = {{0.2, 0.4},{0.1, 0.6}};
Print[">>> B3 = {{0., 0.1},{0.2, 0.}};"//OutputForm];
B3 = {{0., 0.1},{0.2, 0.}};
Print[">>> A0 = {{0.1, 0.},{0., 0.1}};"//OutputForm];
A0 = {{0.1, 0.},{0., 0.1}};
Print[">>> A1 = {{0., 0.2},{0., 0.2}};"//OutputForm];
A1 = {{0., 0.2},{0., 0.2}};
Print[">>> A2 = {{0., 0.1},{0., 0.}};"//OutputForm];
A2 = {{0., 0.1},{0., 0.}};
Print[">>> A3 = {{0.3, 0.2},{0.3, 0.2}};"//OutputForm];
A3 = {{0.3, 0.2},{0.3, 0.2}};
Print[">>> A4 = {{0., 0.1},{0.2, 0.}};"//OutputForm];
A4 = {{0., 0.1},{0.2, 0.}};
Print[">>> B = {B0, B1, B2, B3};"//OutputForm];
B = {B0, B1, B2, B3};
Print[">>> A = {A0, A1, A2, A3, A4};"//OutputForm];
A = {A0, A1, A2, A3, A4};
Print[">>> R = GM1FundamentalMatrix[A];"//OutputForm];
R = GM1FundamentalMatrix[A];
Print[">>> Print[R];"//OutputForm];
Print[R];
Print[">>> pi = GM1StationaryDistr[B, R, 300];"//OutputForm];
pi = GM1StationaryDistr[B, R, 300];
Print["=== FluidFundamentalMatrices ==="]
Print[">>> Fpp = {{-5., 1.},{2., -3.}};"//OutputForm];
Fpp = {{-5., 1.},{2., -3.}};
Print[">>> Fpm = {{2., 1., 1.},{1., 0., 0.}};"//OutputForm];
Fpm = {{2., 1., 1.},{1., 0., 0.}};
Print[">>> Fmm = {{-8., 4., 1.},{2., -12., 3.},{2., 0., -2.}};"//OutputForm];
Fmm = {{-8., 4., 1.},{2., -12., 3.},{2., 0., -2.}};
Print[">>> Fmp = {{3., 0.},{2., 5.},{0., 0.}};"//OutputForm];
Fmp = {{3., 0.},{2., 5.},{0., 0.}};
Print[">>> {Psi, K, U} = FluidFundamentalMatrices[Fpp, Fpm, Fmp, Fmm, \"PKU\"];"//OutputForm];
{Psi, K, U} = FluidFundamentalMatrices[Fpp, Fpm, Fmp, Fmm, "PKU"];
Print[">>> Print[Psi];"//OutputForm];
Print[Psi];
Print[">>> Print[K];"//OutputForm];
Print[K];
Print[">>> Print[U];"//OutputForm];
Print[U];
Print["=== FluidSolve ==="]
Print[">>> Fpp = {{-5., 1.},{2., -3.}};"//OutputForm];
Fpp = {{-5., 1.},{2., -3.}};
Print[">>> Fpm = {{2., 1., 1.},{1., 0., 0.}};"//OutputForm];
Fpm = {{2., 1., 1.},{1., 0., 0.}};
Print[">>> Fmm = {{-8., 4., 1.},{2., -12., 3.},{2., 0., -2.}};"//OutputForm];
Fmm = {{-8., 4., 1.},{2., -12., 3.},{2., 0., -2.}};
Print[">>> Fmp = {{3., 0.},{2., 5.},{0., 0.}};"//OutputForm];
Fmp = {{3., 0.},{2., 5.},{0., 0.}};
Print[">>> x = 0.7;"//OutputForm];
x = 0.7;
Print[">>> {mass0, ini, K, clo} = FluidSolve[Fpp, Fpm, Fmp, Fmm];"//OutputForm];
{mass0, ini, K, clo} = FluidSolve[Fpp, Fpm, Fmp, Fmm];
Print[">>> Print[mass0];"//OutputForm];
Print[mass0];
Print[">>> Print[ini];"//OutputForm];
Print[ini];
Print[">>> Print[K];"//OutputForm];
Print[K];
Print[">>> Print[clo];"//OutputForm];
Print[clo];
Print[">>> pdfAtX = ini.MatrixExponential[K*x].clo;"//OutputForm];
pdfAtX = ini.MatrixExponential[K*x].clo;
Print[">>> Print[pdfAtX];"//OutputForm];
Print[pdfAtX];
Print["=== GeneralFluidSolve ==="]
Print[">>> Q = {{-6., 1., 3., 2., 0., 0.},{6., -10., 2., 0., 2., 0.},{3., 7., -12., 0., 0., 2.},{5., 0., 0., -9., 1., 3.},{0., 5., 0., 6., -13., 2.},{0., 0., 5., 3., 7., -15.}};"//OutputForm];
Q = {{-6., 1., 3., 2., 0., 0.},{6., -10., 2., 0., 2., 0.},{3., 7., -12., 0., 0., 2.},{5., 0., 0., -9., 1., 3.},{0., 5., 0., 6., -13., 2.},{0., 0., 5., 3., 7., -15.}};
Print[">>> R = {{2., 0., 0., 0., 0., 0.},{0., -4., 0., 0., 0., 0.},{0., 0., -12., 0., 0., 0.},{0., 0., 0., 6., 0., 0.},{0., 0., 0., 0., 0., 0.},{0., 0., 0., 0., 0., -8.}};"//OutputForm];
R = {{2., 0., 0., 0., 0., 0.},{0., -4., 0., 0., 0., 0.},{0., 0., -12., 0., 0., 0.},{0., 0., 0., 6., 0., 0.},{0., 0., 0., 0., 0., 0.},{0., 0., 0., 0., 0., -8.}};
Print[">>> x = 0.7;"//OutputForm];
x = 0.7;
Print[">>> {mass0, ini, K, clo} = GeneralFluidSolve[Q, R];"//OutputForm];
{mass0, ini, K, clo} = GeneralFluidSolve[Q, R];
Print[">>> Print[mass0];"//OutputForm];
Print[mass0];
Print[">>> Print[ini];"//OutputForm];
Print[ini];
Print[">>> Print[K];"//OutputForm];
Print[K];
Print[">>> Print[clo];"//OutputForm];
Print[clo];
Print[">>> pdfAtX = ini.MatrixExponential[K*x].clo;"//OutputForm];
pdfAtX = ini.MatrixExponential[K*x].clo;
Print[">>> Print[pdfAtX];"//OutputForm];
Print[pdfAtX];
Print["=== FluidStationaryDistr ==="]
Print[">>> Q = {{-6., 1., 3., 2., 0., 0.},{6., -10., 2., 0., 2., 0.},{3., 7., -12., 0., 0., 2.},{5., 0., 0., -9., 1., 3.},{0., 5., 0., 6., -13., 2.},{0., 0., 5., 3., 7., -15.}};"//OutputForm];
Q = {{-6., 1., 3., 2., 0., 0.},{6., -10., 2., 0., 2., 0.},{3., 7., -12., 0., 0., 2.},{5., 0., 0., -9., 1., 3.},{0., 5., 0., 6., -13., 2.},{0., 0., 5., 3., 7., -15.}};
Print[">>> R = {{2., 0., 0., 0., 0., 0.},{0., -4., 0., 0., 0., 0.},{0., 0., -12., 0., 0., 0.},{0., 0., 0., 6., 0., 0.},{0., 0., 0., 0., 0., 0.},{0., 0., 0., 0., 0., -8.}};"//OutputForm];
R = {{2., 0., 0., 0., 0., 0.},{0., -4., 0., 0., 0., 0.},{0., 0., -12., 0., 0., 0.},{0., 0., 0., 6., 0., 0.},{0., 0., 0., 0., 0., 0.},{0., 0., 0., 0., 0., -8.}};
Print[">>> x = Range[0.0,30.0,1.0];"//OutputForm];
x = Range[0.0,30.0,1.0];
Print[">>> {mass0, ini, K, clo} = GeneralFluidSolve[Q, R];"//OutputForm];
{mass0, ini, K, clo} = GeneralFluidSolve[Q, R];
Print[">>> Print[mass0];"//OutputForm];
Print[mass0];
Print[">>> Print[ini];"//OutputForm];
Print[ini];
Print[">>> Print[K];"//OutputForm];
Print[K];
Print[">>> Print[clo];"//OutputForm];
Print[clo];
Print[">>> y = FluidStationaryDistr[mass0, ini, K, clo, x];"//OutputForm];
y = FluidStationaryDistr[mass0, ini, K, clo, x];
Print[">>> Print[y];"//OutputForm];
Print[y];
pi = CTMCSolve[Q];
$Output = tmpOut;Close[stream];

