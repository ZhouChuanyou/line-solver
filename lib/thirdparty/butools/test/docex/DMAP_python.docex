=== MarginalDistributionFromDMAP ===
>>> D0 = ml.matrix([[0, 0.02, 0, 0],[0, 0.17, 0.2, 0.14],[0.16, 0.17, 0.02, 0.18],[0, 0, 0, 0.12]])
>>> D1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> a, A = MarginalDistributionFromDMAP(D0, D1)
>>> print(a)
[[ 0.24388  0.40412  0.1941   0.1579 ]]
>>> print(A)
[[ 0.    0.02  0.    0.  ]
 [ 0.    0.17  0.2   0.14]
 [ 0.16  0.17  0.02  0.18]
 [ 0.    0.    0.    0.12]]
=== MarginalMomentsFromDMAP ===
>>> D0 = ml.matrix([[0, 0.02, 0, 0],[0, 0.17, 0.2, 0.14],[0.16, 0.17, 0.02, 0.18],[0, 0, 0, 0.12]])
>>> D1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> moms = MarginalMomentsFromDMAP(D0, D1)
>>> print(moms)
[1.4955358592094412, 2.9542479654368474, 7.885226907678561, 27.282328108669493, 116.17171481905851, 587.04478024802427, 3437.0301824147914]
=== MarginalDistributionFromDRAP ===
>>> H0 = ml.matrix([[0, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1, -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> a, A = MarginalDistributionFromDRAP(H0, H1)
>>> print(a)
[[ 0.02149  0.71253  0.26598]]
>>> print(A)
[[ 0.    0.    0.13]
 [ 0.    0.6   0.18]
 [ 0.31  0.26  0.02]]
=== MarginalMomentsFromDRAP ===
>>> H0 = ml.matrix([[0, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1, -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> moms = MarginalMomentsFromDRAP(H0, H1)
>>> print(moms)
[3.2070236684078202, 16.897636691953394, 130.77054574356021, 1347.0743893905096, 17343.182467560622]
=== MarginalDistributionFromDMMAP ===
>>> D0 = ml.matrix([[0.34, 0, 0],[0.06, 0.05, 0.03],[0.11, 0.13, 0]])
>>> D1 = ml.matrix([[0.3, 0, 0],[0.16, 0.18, 0.05],[0.15, 0.04, 0.09]])
>>> D2 = ml.matrix([[0, 0.01, 0],[0.1, 0.07, 0.08],[0.13, 0.12, 0.13]])
>>> D3 = ml.matrix([[0.35, 0, 0],[0, 0.18, 0.04],[0.06, 0.03, 0.01]])
>>> a, A = MarginalDistributionFromDMMAP([D0, D1, D2, D3])
>>> print(a)
[[ 0.96166  0.03065  0.00769]]
>>> print(A)
[[ 0.34  0.    0.  ]
 [ 0.06  0.05  0.03]
 [ 0.11  0.13  0.  ]]
=== MarginalMomentsFromDMMAP ===
>>> D0 = ml.matrix([[0.34, 0, 0],[0.06, 0.05, 0.03],[0.11, 0.13, 0]])
>>> D1 = ml.matrix([[0.3, 0, 0],[0.16, 0.18, 0.05],[0.15, 0.04, 0.09]])
>>> D2 = ml.matrix([[0, 0.01, 0],[0.1, 0.07, 0.08],[0.13, 0.12, 0.13]])
>>> D3 = ml.matrix([[0.35, 0, 0],[0, 0.18, 0.04],[0.06, 0.03, 0.01]])
>>> moms = MarginalMomentsFromDMMAP([D0, D1, D2, D3])
>>> print(moms)
[1.503697331491185, 3.0278418573508938, 8.424305390832199, 31.097386717744087, 143.88041840101141]
=== MarginalDistributionFromDMRAP ===
>>> H0 = ml.matrix([[0.15, 0.2, 0.18],[-0.23, 0.17, 0.22],[0.19, 0.15, 0.16]])
>>> H1 = ml.matrix([[0.01, 0.08, 0.16],[0.02, 0.2, 0.07],[0.02, 0.15, 0.17]])
>>> H2 = ml.matrix([[0.14, 0.07, 0.01],[0.19, 0.02, 0.34],[0.06, 0.1, 0]])
>>> a, A = MarginalDistributionFromDMRAP([H0, H1, H2])
>>> print(a)
[[ 0.22615  0.35424  0.41962]]
>>> print(A)
[[ 0.15  0.2   0.18]
 [-0.23  0.17  0.22]
 [ 0.19  0.15  0.16]]
=== MarginalMomentsFromDMRAP ===
>>> H0 = ml.matrix([[0.15, 0.2, 0.18],[-0.23, 0.17, 0.22],[0.19, 0.15, 0.16]])
>>> H1 = ml.matrix([[0.01, 0.08, 0.16],[0.02, 0.2, 0.07],[0.02, 0.15, 0.17]])
>>> H2 = ml.matrix([[0.14, 0.07, 0.01],[0.19, 0.02, 0.34],[0.06, 0.1, 0]])
>>> moms = MarginalMomentsFromDMRAP([H0, H1, H2])
>>> print(moms)
[1.5947682612697014, 3.4185320639932879, 9.9594855925243557, 37.742369501645818, 177.12501064870213]
=== LagCorrelationsFromDMAP ===
>>> D0 = ml.matrix([[0, 0.02, 0, 0],[0, 0.17, 0.2, 0.14],[0.16, 0.17, 0.02, 0.18],[0, 0, 0, 0.12]])
>>> D1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> corr = LagCorrelationsFromDMAP(D0, D1, 3)
>>> print(corr)
[-0.04586  0.01075 -0.0048 ]
=== LagCorrelationsFromDRAP ===
>>> H0 = ml.matrix([[0, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1, -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> corr = LagCorrelationsFromDRAP(H0, H1, 3)
>>> print(corr)
[  1.43030e-02   1.24240e-03   7.58676e-06]
=== LagkJointMomentsFromDMAP ===
>>> D0 = ml.matrix([[0, 0.02, 0, 0],[0, 0.17, 0.2, 0.14],[0.16, 0.17, 0.02, 0.18],[0, 0, 0, 0.12]])
>>> D1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> Nm = LagkJointMomentsFromDMAP(D0, D1, 4, 1)
>>> print(Nm)
[[   1.         1.49554    2.95425    7.88523   27.28233]
 [   1.49554    2.20372    4.28267   11.29332   38.82179]
 [   2.95425    4.28749    8.1899    21.31528   72.75329]
 [   7.88523   11.32649   21.37906   55.12909  187.21291]
 [  27.28233   38.99278   73.17047  187.82218  636.23062]]
>>> moms = MarginalMomentsFromDMAP(D0, D1, 4)
>>> print(moms)
[1.4955358592094412, 2.9542479654368474, 7.885226907678561, 27.282328108669493]
>>> cjm = np.zeros(3)
>>> for i in range(1,4,1):
>>>     Nx = LagkJointMomentsFromDMAP(D0, D1, 1, i)
>>>     cjm[i-1] = (Nx[1, 1]-moms[0]**2)/(moms[1]-moms[0]**2)
>>> print(cjm)
[-0.04586  0.01075 -0.0048 ]
>>> corr = LagCorrelationsFromDMAP(D0, D1, 3)
>>> print(corr)
[-0.04586  0.01075 -0.0048 ]
=== LagkJointMomentsFromDRAP ===
>>> H0 = ml.matrix([[0, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1, -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> Nm = LagkJointMomentsFromDRAP(H0, H1, 4, 1)
>>> print(Length(Nm))
5
>>> moms = MarginalMomentsFromDRAP(H0, H1, 4)
>>> print(moms)
[3.2070236684078202, 16.897636691953394, 130.77054574356021, 1347.0743893905096]
>>> cjm = np.zeros(3)
>>> for i in range(1,4,1):
>>>     Nx = LagkJointMomentsFromDRAP(H0, H1, 1, i)
>>>     cjm[i-1] = (Nx[1, 1]-moms[0]**2)/(moms[1]-moms[0]**2)
>>> print(cjm)
[  1.43030e-02   1.24240e-03   7.58676e-06]
>>> corr = LagCorrelationsFromDRAP(H0, H1, 3)
>>> print(corr)
[  1.43030e-02   1.24240e-03   7.58676e-06]
=== LagkJointMomentsFromDMMAP ===
>>> D0 = ml.matrix([[0.34, 0, 0],[0.06, 0.05, 0.03],[0.11, 0.13, 0]])
>>> D1 = ml.matrix([[0.3, 0, 0],[0.16, 0.18, 0.05],[0.15, 0.04, 0.09]])
>>> D2 = ml.matrix([[0, 0.01, 0],[0.1, 0.07, 0.08],[0.13, 0.12, 0.13]])
>>> D3 = ml.matrix([[0.35, 0, 0],[0, 0.18, 0.04],[0.06, 0.03, 0.01]])
>>> Nm = LagkJointMomentsFromDMMAP([D0, D1, D2, D3], 3, 1)
>>> print(Nm[0])
[[  0.45395   0.68525   1.38564   3.86705]
 [  0.68283   1.03179   2.08868   5.83387]
 [  1.37545   2.08069   4.21706  11.78914]
 [  3.82802   5.79545  11.75638  32.88737]]
>>> print(Nm[1])
[[ 0.02628  0.03323  0.05306  0.11925]
 [ 0.03505  0.04387  0.06892  0.15222]
 [ 0.06065  0.07477  0.11464  0.24631]
 [ 0.1482   0.17996  0.26901  0.56074]]
>>> print(Nm[2])
[[  0.51977   0.78522   1.58915   4.438  ]
 [  0.78582   1.1881    2.40665   6.72537]
 [  1.59173   2.4087    4.88378  13.65717]
 [  4.44809   6.73539  13.66584  38.23481]]
=== LagkJointMomentsFromDMRAP ===
>>> H0 = ml.matrix([[0.15, 0.2, 0.18],[-0.23, 0.17, 0.22],[0.19, 0.15, 0.16]])
>>> H1 = ml.matrix([[0.01, 0.08, 0.16],[0.02, 0.2, 0.07],[0.02, 0.15, 0.17]])
>>> H2 = ml.matrix([[0.14, 0.07, 0.01],[0.19, 0.02, 0.34],[0.06, 0.1, 0]])
>>> Nm = LagkJointMomentsFromDMRAP([H0, H1, H2], 3, 2)
>>> print(Nm[0])
[[  0.48798   0.78047   1.67848   4.90286]
 [  0.77458   1.23953   2.66726   7.79449]
 [  1.65386   2.64809   5.70161  16.66907]
 [  4.80922   7.70333  16.59293  48.52561]]
>>> print(Nm[1])
[[  0.51202   0.81429   1.74005   5.05662]
 [  0.82019   1.30356   2.78367   8.08526]
 [  1.76467   2.8029    5.98142  17.36464]
 [  5.15026   8.17697  17.44196  50.61883]]
=== RandomDMAP ===
>>> D0, D1 = RandomDMAP(4, 5.62, 10)
CheckDMMAPRepresentation: Some of the matrices D1 ... DM have negative elements!
>>> print(D0)
[[ 0.91231  0.       0.       0.02106]
 [ 0.15283  0.16699  0.18905  0.     ]
 [ 0.02497  0.12509  0.52043  0.10254]
 [ 0.0759   0.       0.       0.29181]]
>>> print(D1)
[[ 0.00719  0.02013  0.01658  0.02274]
 [ 0.15648  0.       0.18936  0.1453 ]
 [ 0.10408  0.       0.       0.12289]
 [ 0.21349  0.       0.       0.41879]]
>>> m = MarginalMomentsFromDMAP(D0, D1, 1)[0]
>>> print(m)
5.62
=== RandomDMMAP ===
>>> Dm = RandomDMMAP(4, 3, 5.62, 10)
>>> print(Dm[0])
[[ 0.29063  0.03984  0.06259  0.07765]
 [ 0.01556  0.84309  0.01363  0.01053]
 [ 0.       0.00355  0.92541  0.     ]
 [ 0.04962  0.       0.       0.36085]]
>>> print(Dm[1])
[[ 0.05324  0.07616  0.00057  0.02539]
 [ 0.01533  0.00616  0.00771  0.01641]
 [ 0.00574  0.00682  0.0007   0.00409]
 [ 0.04219  0.       0.       0.16326]]
>>> print(Dm[2])
[[ 0.0679   0.00653  0.06991  0.09437]
 [ 0.00512  0.01717  0.0088   0.00242]
 [ 0.00205  0.00353  0.00687  0.01247]
 [ 0.       0.08672  0.10873  0.16826]]
>>> print(Dm[3])
[[ 0.0577   0.03984  0.00719  0.03049]
 [ 0.00606  0.0186   0.00132  0.0121 ]
 [ 0.00942  0.00709  0.00834  0.00392]
 [ 0.       0.       0.       0.02038]]
>>> m = MarginalMomentsFromDMMAP(Dm, 1)[0]
>>> print(m)
5.62
=== CheckDMAPRepresentation ===
>>> D0 = ml.matrix([[0, 0.02, 0],[0, 0.17, 0.2],[0.16, 0.17, 0.02]])
>>> D1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> flag = CheckDMAPRepresentation(D0, D1)
CheckDMAPRepresentation: D0 and D1 have different sizes!
>>> print(flag)
False
>>> D0 = ml.matrix([[0, 0.02, 0],[0, 0.17, 0.2],[0.16, 0.17, 0.02]])
>>> D1 = ml.matrix([[0, 0.88, 0.1],[0.18, 0.07, 0.14],[0.13, 0.15, 0.15]])
>>> flag = CheckDMAPRepresentation(D0, D1)
CheckDMAPRepresentation: The rowsum of D0+D1 is not 1!
>>> print(flag)
False
>>> D0 = ml.matrix([[0, 0.02, 0, 0],[0, 0.17, 0.2, 0.14],[0.16, 0.17, 0.02, 0.18],[0, 0, 0, 0.12]])
>>> D1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> flag = CheckDMAPRepresentation(D0, D1)
>>> print(flag)
True
=== CheckDRAPRepresentation ===
>>> H0 = ml.matrix([[0, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02],[0.2, 0, 0]])
>>> H1 = ml.matrix([[0, 1., -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29],[0, 0.8, 0]])
>>> flag = CheckDRAPRepresentation(H0, H1)
CheckDRAPRepresentation: D0 is not a quadratic matrix!
>>> print(flag)
False
>>> H0 = ml.matrix([[0.2, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1., -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> flag = CheckDRAPRepresentation(H0, H1)
CheckDRAPRepresentation: A rowsum of D0+D1 is not 1!
>>> print(flag)
False
>>> H0 = ml.matrix([[-1., 0, 0],[0, -2., 2.],[0, 3., -3.]])
>>> H1 = ml.matrix([[0, 0, 1.],[0, -1., 1.],[1., 0, -1.]])
>>> flag = CheckDRAPRepresentation(H0, H1)
CheckDRAPRepresentation: A rowsum of D0+D1 is not 1!
>>> print(flag)
False
>>> H0 = ml.matrix([[0, 0, 15.],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1., -15.],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> flag = CheckDRAPRepresentation(H0, H1)
CheckDRAPRepresentation: The largest eigenvalue of matrix D0 is greater than 1!
>>> print(flag)
False
>>> H0 = ml.matrix([[0, 0.5, 0.1],[0, -1.4, 3.1],[0.67, 0, 0.4]])
>>> H1 = ml.matrix([[0, 0.4, 0],[0, -0.2, -0.5],[0.3, -0.7, 0.33]])
>>> flag = CheckDRAPRepresentation(H0, H1)
CheckDRAPRepresentation: The largest eigenvalue of matrix D0 is complex!
>>> print(flag)
False
>>> H0 = ml.matrix([[0, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1., -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> flag = CheckDRAPRepresentation(H0, H1)
>>> print(flag)
True
=== CheckDMMAPRepresentation ===
>>> D0 = ml.matrix([[0.34, 0, 0],[0.06, 0.05, 0.03],[0.11, 0.13, 0]])
>>> D1 = ml.matrix([[0.3, 0, 0],[0.16, 0.18, 0.05],[0.15, 0.04, 0.09]])
>>> D2 = ml.matrix([[0, 0.01, 0],[0.1, 0.07, 0.08],[0.13, 0.12, 0.13]])
>>> D3 = ml.matrix([[0.35, 0, 0],[0, 0.18, 0.04],[0.06, 0.03, 0.01]])
>>> flag = CheckDMMAPRepresentation([D0, D1, D2, D3])
>>> print(flag)
True
=== CheckDMRAPRepresentation ===
>>> H0 = ml.matrix([[0.15, 0.2, 0.18],[-0.23, 0.17, 0.22],[0.19, 0.15, 0.16]])
>>> H1 = ml.matrix([[0.01, 0.08, 0.16],[0.02, 0.2, 0.07],[0.02, 0.15, 0.17]])
>>> H2 = ml.matrix([[0.14, 0.07, 0.01],[0.19, 0.02, 0.34],[0.06, 0.1, 0]])
>>> flag = CheckDMRAPRepresentation([H0, H1, H2])
>>> print(flag)
True
=== DRAPFromMoments ===
>>> G0 = ml.matrix([[0, 0.02, 0, 0],[0, 0.17, 0.2, 0.14],[0.16, 0.17, 0.02, 0.18],[0, 0, 0, 0.12]])
>>> G1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> moms = MarginalMomentsFromDRAP(G0, G1, 5)
>>> print(moms)
[1.4955358592094412, 2.9542479654368474, 7.885226907678561, 27.282328108669493, 116.17171481905851]
>>> Nm = LagkJointMomentsFromDRAP(G0, G1, 2, 1)
>>> print(Nm)
[[ 1.       1.49554  2.95425]
 [ 1.49554  2.20372  4.28267]
 [ 2.95425  4.28749  8.1899 ]]
>>> H0, H1 = DRAPFromMoments(moms, Nm)
>>> print(H0)
[[ 0.56447  0.47188 -0.69474]
 [-0.50857 -0.10551  0.95921]
 [ 0.18477  0.26121 -0.13431]]
>>> print(H1)
[[ 2.39938  1.12431 -2.8653 ]
 [-1.75346 -0.59009  2.99842]
 [ 0.95074  0.51879 -0.7812 ]]
>>> rmoms = MarginalMomentsFromDRAP(H0, H1, 5)
>>> print(rmoms)
[1.495535859209453, 2.9542479654368994, 7.885226907678768, 27.282328108670363, 116.17171481906257]
>>> rNm = LagkJointMomentsFromDRAP(H0, H1, 2, 1)
>>> print(rNm)
[[ 1.       1.49554  2.95425]
 [ 1.49554  2.20372  4.28267]
 [ 2.95425  4.28749  8.1899 ]]
=== DMRAPFromMoments ===
>>> G0 = ml.matrix([[0.34, 0, 0],[0.06, 0.05, 0.03],[0.11, 0.13, 0]])
>>> G1 = ml.matrix([[0.3, 0, 0],[0.16, 0.18, 0.05],[0.15, 0.04, 0.09]])
>>> G2 = ml.matrix([[0, 0.01, 0],[0.1, 0.07, 0.08],[0.13, 0.12, 0.13]])
>>> G3 = ml.matrix([[0.35, 0, 0],[0, 0.18, 0.04],[0.06, 0.03, 0.01]])
>>> G = [G0, G1, G2, G3]
>>> moms = MarginalMomentsFromDMRAP(G, 5)
>>> print(moms)
[1.503697331491185, 3.0278418573508938, 8.424305390832199, 31.097386717744087, 143.88041840101141]
>>> Nm = LagkJointMomentsFromDMRAP(G, 2, 1)
>>> Nm1, Nm2, Nm3 = Nm
>>> print(Nm1)
[[ 0.45395  0.68525  1.38564]
 [ 0.68283  1.03179  2.08868]
 [ 1.37545  2.08069  4.21706]]
>>> print(Nm2)
[[ 0.02628  0.03323  0.05306]
 [ 0.03505  0.04387  0.06892]
 [ 0.06065  0.07477  0.11464]]
>>> print(Nm3)
[[ 0.51977  0.78522  1.58915]
 [ 0.78582  1.1881   2.40665]
 [ 1.59173  2.4087   4.88378]]
>>> H = DMRAPFromMoments(moms, Nm)
>>> print(H[0])
[[ 0.0678   0.67922 -0.42509]
 [-0.01872  0.00355  0.35386]
 [-0.0199   0.03992  0.31865]]
>>> print(H[1])
[[ 0.19512  1.65707 -1.5453 ]
 [-0.0081   0.18194  0.12658]
 [-0.00769  0.11526  0.19294]]
>>> print(H[2])
[[ 0.25787  3.83412 -4.05553]
 [ 0.12827 -1.35077  1.2347 ]
 [ 0.12666 -1.40761  1.2929 ]]
>>> print(H[3])
[[ 0.17441 -0.11574  0.27606]
 [-0.01401 -0.01367  0.37636]
 [-0.01289 -0.0175   0.37926]]
>>> butools.checkPrecision = 10.**-10
>>> rmoms = MarginalMomentsFromDMRAP(H, 5)
>>> print(rmoms)
[1.5036973314922903, 3.0278418573555848, 8.4243053908503818, 31.09738671782155, 143.88041840139212]
>>> rNm = LagkJointMomentsFromDMRAP(H, 2, 1)
>>> rNm1, rNm2, rNm3 = rNm
>>> print(rNm1)
[[ 0.45395  0.68525  1.38564]
 [ 0.68283  1.03179  2.08868]
 [ 1.37545  2.08069  4.21706]]
>>> print(rNm2)
[[ 0.02628  0.03323  0.05306]
 [ 0.03505  0.04387  0.06892]
 [ 0.06065  0.07477  0.11464]]
>>> print(rNm3)
[[ 0.51977  0.78522  1.58915]
 [ 0.78582  1.1881   2.40665]
 [ 1.59173  2.4087   4.88378]]
>>> print(la.norm(np.array(moms)-np.array(rmoms)))
3.8896478315352875e-10
=== DMAPFromDRAP ===
>>> H0 = ml.matrix([[0, 0, 0.13],[0, 0.6, 0.18],[0.31, 0.26, 0.02]])
>>> H1 = ml.matrix([[0, 1, -0.13],[0, 0.18, 0.04],[0.03, 0.09, 0.29]])
>>> D0, D1 = DMAPFromDRAP(H0, H1)
>>> print(D0)
[[ 0.13782  0.05942  0.11897]
 [ 0.01119  0.45679  0.39467]
 [ 0.35308  0.27994  0.02539]]
>>> print(D1)
[[ 0.09145  0.53681  0.05553]
 [ 0.00598  0.07747  0.0539 ]
 [ 0.03151  0.00901  0.30108]]
>>> err = la.norm(LagkJointMomentsFromDRAP(D0, D1, 3, 1)-LagkJointMomentsFromDRAP(H0, H1, 3, 1))
>>> print(err)
7.00079825521e-11
=== DMMAPFromDMRAP ===
>>> H0 = ml.matrix([[0.15, 0.2, 0.18],[-0.20, 0.17, 0.22],[0.19, 0.15, 0.16]])
>>> H1 = ml.matrix([[0.01, 0.08, 0.16],[0.02, 0.2, 0.07],[0.02, 0.15, 0.17]])
>>> H2 = ml.matrix([[0.14, 0.07, 0.01],[0.19, 0.02, 0.31],[0.06, 0.1, 0.]])
>>> H = [H0, H1, H2]
>>> moms = MarginalMomentsFromDMRAP(H)
>>> print(moms)
[1.6263896740154515, 3.6054695734649633, 10.991320699229343, 43.902870881249427, 218.07910677758866]
>>> jmom = LagkJointMomentsFromDMRAP(H, 3, 1)
>>> G = DMMAPFromDMRAP(H)
>>> print(G[0])
[[ 0.15737  0.31966  0.07273]
 [ 0.01095  0.22961  0.06546]
 [ 0.16355  0.1105   0.09302]]
>>> print(G[1])
[[ 0.08443  0.03798  0.09227]
 [ 0.01529  0.2798   0.01004]
 [ 0.02635  0.39383  0.01577]]
>>> print(G[2])
[[ 0.12909  0.09375  0.01271]
 [ 0.22947  0.01525  0.14412]
 [ 0.01002  0.1713   0.01567]]
>>> rmoms = MarginalMomentsFromDMMAP(G)
>>> print(rmoms)
[1.6263896740154513, 3.6054695734649629, 10.991320699229343, 43.902870881249434, 218.07910677758866]
>>> rjmom = LagkJointMomentsFromDMMAP(G, 3, 1)
>>> err = la.norm(rjmom[0]-jmom[0])+la.norm(rjmom[1]-jmom[1])
>>> print(err)
6.76975985004e-14
=== CanonicalFromDMAP2 ===
>>> D0 = ml.matrix([[0.46, 0.28],[0.35, 0.23]])
>>> D1 = ml.matrix([[0.08, 0.18],[0.14, 0.28]])
>>> H0, H1 = CanonicalFromDMAP2(D0, D1)
>>> print(H0)
[[ 0.6785   0.31704]
 [ 0.       0.0115 ]]
>>> print(H1)
[[ 0.       0.00446]
 [ 0.6285   0.36   ]]
>>> Cm = SimilarityMatrix(H0, D0)
>>> err1 = la.norm(H0*Cm-Cm*D0)
>>> err2 = la.norm(H1*Cm-Cm*D1)
>>> print(np.max(err1, err2))
8.9717085547e-14
>>> D0 = ml.matrix([[0.26, 0.28],[0.35, 0.23]])
>>> D1 = ml.matrix([[0.28, 0.18],[0.14, 0.28]])
>>> H0, H1 = CanonicalFromDMAP2(D0, D1)
>>> print(H0)
[[ 0.49     0.38875]
 [ 0.09826  0.     ]]
>>> print(H1)
[[ 0.12125  0.     ]
 [ 0.46299  0.43875]]
>>> Cm = SimilarityMatrix(H0, D0)
>>> err1 = la.norm(H0*Cm-Cm*D0)
>>> err2 = la.norm(H1*Cm-Cm*D1)
>>> print(np.max(err1, err2))
1.74838096756e-15
>>> D0 = ml.matrix([[0.14, 0.34],[0.35, 0.23]])
>>> D1 = ml.matrix([[0.22, 0.3],[0.28, 0.14]])
>>> H0, H1 = CanonicalFromDMAP2(D0, D1)
>>> print(H0)
[[ 0.37     0.51734]
 [ 0.16778  0.     ]]
>>> print(H1)
[[ 0.       0.11266]
 [ 0.47222  0.36   ]]
>>> Cm = SimilarityMatrix(H0, D0)
>>> err1 = la.norm(H0*Cm-Cm*D0)
>>> err2 = la.norm(H1*Cm-Cm*D1)
>>> print(np.max(err1, err2))
1.92296268638e-16
=== DMAP2FromMoments ===
>>> D0 = ml.matrix([[0.2, 0.7],[0.6, 0.1]])
>>> D1 = ml.matrix([[0.09, 0.01],[0.2, 0.1]])
>>> moms = MarginalMomentsFromDMAP(D0, D1, 3)
>>> print(moms)
[5.1535836177474383, 46.587030716723511, 626.4505119453919]
>>> corr = LagCorrelationsFromDMAP(D0, D1, 1)[0]
>>> print(corr)
-0.000802861546515
>>> D0, D1 = DMAP2FromMoments(moms, corr)
>>> print(D0)
[[ 0.3      0.65   ]
 [ 0.61538  0.     ]]
>>> print(D1)
[[ 0.05     0.     ]
 [ 0.24462  0.14   ]]
>>> rmoms = MarginalMomentsFromDMAP(D0, D1, 3)
>>> print(rmoms)
[5.1535836177474366, 46.587030716723469, 626.45051194539042]
>>> rcorr = LagCorrelationsFromDMAP(D0, D1, 1)[0]
>>> print(rcorr)
-0.000802861546514
=== SamplesFromDMAP ===
>>> D0 = ml.matrix([[0, 0.02, 0, 0],[0, 0.17, 0.2, 0.14],[0.16, 0.17, 0.02, 0.18],[0, 0, 0, 0.12]])
>>> D1 = ml.matrix([[0, 0.88, 0.1, 0],[0.18, 0.07, 0.14, 0.1],[0.13, 0.15, 0.15, 0.04],[0.31, 0.18, 0.12, 0.27]])
>>> x = SamplesFromDMAP(D0, D1, 10000)
>>> mt = MarginalMomentsFromTrace(x, 3)
>>> print(mt)
[1.5088999999999999, 3.0240999999999998, 8.1935000000000002]
>>> mm = MarginalMomentsFromDMAP(D0, D1, 3)
>>> print(mm)
[1.4955358592094412, 2.9542479654368474, 7.885226907678561]
=== SamplesFromDMMAP ===
>>> D0 = ml.matrix([[0.34, 0, 0],[0.06, 0.05, 0.03],[0.11, 0.13, 0]])
>>> D1 = ml.matrix([[0.3, 0, 0],[0.16, 0.18, 0.05],[0.15, 0.04, 0.09]])
>>> D2 = ml.matrix([[0, 0.01, 0],[0.1, 0.07, 0.08],[0.13, 0.12, 0.13]])
>>> D3 = ml.matrix([[0.35, 0, 0],[0, 0.18, 0.04],[0.06, 0.03, 0.01]])
>>> Dm = [D0, D1, D2, D3]
>>> x = SamplesFromDMMAP(Dm, 10000)
>>> mt = MarginalMomentsFromTrace(x[:, 0], 3)
>>> print(mt)
[1.5124, 3.0524, 8.4244000000000003]
>>> mm = MarginalMomentsFromDMMAP(Dm, 3)
>>> print(mm)
[1.503697331491185, 3.0278418573508938, 8.424305390832199]
