clear all
run('/home/gabor/github/butools/Matlab/BuToolsInit.m')

disp('---BuTools: MAM package test file---');
disp('Enable the verbose messages with the BuToolsVerbose flag');
global BuToolsVerbose;
BuToolsVerbose = true;
disp('Enable input parameter checking with the BuToolsCheckInput flag');
global BuToolsCheckInput;
BuToolsCheckInput = true;
global BuToolsCheckPrecision;
format short g;
disp('========================================')
disp('Testing BuTools function QBDFundamentalMatrices')
disp('Input:');
disp('------');
B = [0., 0.; 3., 4.];
disp('B = ');
disp(B);
L = [-6., 5.; 3., -12.];
disp('L = ');
disp(L);
F = [1., 0.; 2., 0.];
disp('F = ');
disp(F);
L0 = [-6., 5.; 6., -8.];
disp('L0 = ');
disp(L0);
disp('Test:');
disp('-----');
disp('[R, G, U] = QBDFundamentalMatrices(B, L, F, ''RGU'');:');
[R, G, U] = QBDFundamentalMatrices(B, L, F, 'RGU');
disp('R = ');
disp(R);
disp('G = ');
disp(G);
disp('U = ');
disp(U);
assert(CheckGenerator(U, true), 'QBDFundamentalMatrices: matrix U is not a transient generator!');
assert(all(abs(eig(R))<=1), 'QBDFundamentalMatrices: the eigenvalues of matrix R are not inside the unit disc!');
assert(CheckProbMatrix(G), 'QBDFundamentalMatrices: matrix G is not a transition prob. matrix!');
disp('========================================')
disp('Testing BuTools function QBDSolve')
disp('Input:');
disp('------');
B = [0., 0.; 3., 4.];
disp('B = ');
disp(B);
L = [-6., 5.; 3., -12.];
disp('L = ');
disp(L);
F = [1., 0.; 2., 0.];
disp('F = ');
disp(F);
L0 = [-6., 5.; 6., -8.];
disp('L0 = ');
disp(L0);
disp('Test:');
disp('-----');
disp('[pi0, R] = QBDSolve(B, L, F, L0);:');
[pi0, R] = QBDSolve(B, L, F, L0);
disp('pi0 = ');
disp(pi0);
disp('R = ');
disp(R);
assert(CheckGenerator(U, true), 'QBDFundamentalMatrices: matrix U is not a transient generator!');
assert(sum(pi0)>0&&sum(pi0)<=1&&all(pi0>=0), 'QBDSolve: wrong pi0 vector!');
assert(all(abs(eig(R))<=1), 'QBDSolve: the eigenvalues of matrix R are not inside the unit disc!');
disp('========================================')
disp('Testing BuTools function QBDStationaryDistr')
disp('Input:');
disp('------');
B = [0., 0.; 3., 4.];
disp('B = ');
disp(B);
L = [-6., 5.; 3., -12.];
disp('L = ');
disp(L);
F = [1., 0.; 2., 0.];
disp('F = ');
disp(F);
L0 = [-6., 5.; 6., -8.];
disp('L0 = ');
disp(L0);
disp('Test:');
disp('-----');
disp('pi = QBDStationaryDistr(pi0, R, 5);:');
pi = QBDStationaryDistr(pi0, R, 5);
disp('pi = ');
disp(pi);
assert(CheckGenerator(U, true), 'QBDFundamentalMatrices: matrix U is not a transient generator!');
assert(sum(pi)>0&&sum(pi)<=1&&all(pi0>=0), 'QBDStationaryDistr: wrong pi vector!');
disp('========================================')
disp('Testing BuTools function MG1FundamentalMatrix')
disp('Input:');
disp('------');
A0 = [0.4, 0.2; 0.3, 0.4];
disp('A0 = ');
disp(A0);
A1 = [0., 0.1; 0., 0.];
disp('A1 = ');
disp(A1);
A2 = [0., 0.2; 0., 0.2];
disp('A2 = ');
disp(A2);
A3 = [0.1, 0.; 0.1, 0.];
disp('A3 = ');
disp(A3);
disp('A = {A0, A1, A2, A3};:');
A = {A0, A1, A2, A3};
disp('Test:');
disp('-----');
disp('G = MG1FundamentalMatrix(A);:');
G = MG1FundamentalMatrix(A);
disp('G = ');
disp(G);
assert(CheckProbMatrix(G), 'MG1FundamentalMatrix: matrix G is not a transition prob. matrix!');
disp('========================================')
disp('Testing BuTools function MG1StationaryDistr')
disp('Input:');
disp('------');
B0 = [0.1, 0.5; 0.3, 0.4];
disp('B0 = ');
disp(B0);
B1 = [0., 0.1; 0., 0.];
disp('B1 = ');
disp(B1);
B2 = [0.2, 0.; 0., 0.2];
disp('B2 = ');
disp(B2);
B3 = [0., 0.1; 0.1, 0.];
disp('B3 = ');
disp(B3);
A0 = [0.4, 0.2; 0.3, 0.4];
disp('A0 = ');
disp(A0);
A1 = [0., 0.1; 0., 0.];
disp('A1 = ');
disp(A1);
A2 = [0., 0.2; 0., 0.2];
disp('A2 = ');
disp(A2);
A3 = [0.1, 0.; 0.1, 0.];
disp('A3 = ');
disp(A3);
disp('B = {B0, B1, B2, B3};:');
B = {B0, B1, B2, B3};
disp('A = {A0, A1, A2, A3};:');
A = {A0, A1, A2, A3};
disp('Test:');
disp('-----');
disp('G = MG1FundamentalMatrix(A);:');
G = MG1FundamentalMatrix(A);
disp('G = ');
disp(G);
disp('pi = MG1StationaryDistr(A, B, G, 300);:');
pi = MG1StationaryDistr(A, B, G, 300);
assert(CheckProbMatrix(G), 'MG1StationaryDistr: matrix G is not a transition prob. matrix!');
assert(sum(pi)>0&&sum(pi)<=1&&all(pi>=0), 'MG1StationaryDistr: wrong pi vector!');
disp('========================================')
disp('Testing BuTools function GM1FundamentalMatrix')
disp('Input:');
disp('------');
A0 = [0.1, 0.; 0., 0.1];
disp('A0 = ');
disp(A0);
A1 = [0., 0.2; 0., 0.2];
disp('A1 = ');
disp(A1);
A2 = [0., 0.1; 0., 0.];
disp('A2 = ');
disp(A2);
A3 = [0.3, 0.2; 0.3, 0.2];
disp('A3 = ');
disp(A3);
A4 = [0., 0.1; 0.2, 0.];
disp('A4 = ');
disp(A4);
disp('A = {A0, A1, A2, A3, A4};:');
A = {A0, A1, A2, A3, A4};
disp('Test:');
disp('-----');
disp('R = GM1FundamentalMatrix(A);:');
R = GM1FundamentalMatrix(A);
disp('R = ');
disp(R);
assert(all(abs(eig(R))<=1), 'GM1FundamentalMatrix: the eigenvalues of matrix R are not inside the unit disc!');
disp('========================================')
disp('Testing BuTools function GM1StationaryDistr')
disp('Input:');
disp('------');
B0 = [0.7, 0.2; 0.3, 0.6];
disp('B0 = ');
disp(B0);
B1 = [0.3, 0.4; 0.5, 0.2];
disp('B1 = ');
disp(B1);
B2 = [0.2, 0.4; 0.1, 0.6];
disp('B2 = ');
disp(B2);
B3 = [0., 0.1; 0.2, 0.];
disp('B3 = ');
disp(B3);
A0 = [0.1, 0.; 0., 0.1];
disp('A0 = ');
disp(A0);
A1 = [0., 0.2; 0., 0.2];
disp('A1 = ');
disp(A1);
A2 = [0., 0.1; 0., 0.];
disp('A2 = ');
disp(A2);
A3 = [0.3, 0.2; 0.3, 0.2];
disp('A3 = ');
disp(A3);
A4 = [0., 0.1; 0.2, 0.];
disp('A4 = ');
disp(A4);
disp('B = {B0, B1, B2, B3};:');
B = {B0, B1, B2, B3};
disp('A = {A0, A1, A2, A3, A4};:');
A = {A0, A1, A2, A3, A4};
disp('Test:');
disp('-----');
disp('R = GM1FundamentalMatrix(A);:');
R = GM1FundamentalMatrix(A);
disp('R = ');
disp(R);
disp('pi = GM1StationaryDistr(B, R, 300);:');
pi = GM1StationaryDistr(B, R, 300);
assert(all(abs(eig(R))<=1), 'GM1StationaryDistr: the eigenvalues of matrix R are not inside the unit disc!');
assert(sum(pi)>0&&sum(pi)<=1&&all(pi>=0), 'GM1StationaryDistr: wrong pi vector!');
disp('========================================')
disp('Testing BuTools function FluidFundamentalMatrices')
disp('Input:');
disp('------');
Fpp = [-5., 1.; 2., -3.];
disp('Fpp = ');
disp(Fpp);
Fpm = [2., 1., 1.; 1., 0., 0.];
disp('Fpm = ');
disp(Fpm);
Fmm = [-8., 4., 1.; 2., -12., 3.; 2., 0., -2.];
disp('Fmm = ');
disp(Fmm);
Fmp = [3., 0.; 2., 5.; 0., 0.];
disp('Fmp = ');
disp(Fmp);
disp('Test:');
disp('-----');
disp('[Psi, K, U] = FluidFundamentalMatrices(Fpp, Fpm, Fmp, Fmm, ''PKU'');:');
[Psi, K, U] = FluidFundamentalMatrices(Fpp, Fpm, Fmp, Fmm, 'PKU');
disp('Psi = ');
disp(Psi);
disp('K = ');
disp(K);
disp('U = ');
disp(U);
assert(CheckGenerator(U), 'FluidFundamentalMatrices: matrix U is not a generator!');
assert(all(eig(K)<0), 'FluidFundamentalMatrices: the eigenvalues of matrix K are not negative!');
assert(all(all(Psi>=0))&&all(all(Psi<=1))&&norm(sum(Psi,2)-1)<10^-14, 'FluidFundamentalMatrices: matrix Psi is not a transition prob. matrix!');
disp('========================================')
disp('Testing BuTools function FluidSolve')
disp('Input:');
disp('------');
Fpp = [-5., 1.; 2., -3.];
disp('Fpp = ');
disp(Fpp);
Fpm = [2., 1., 1.; 1., 0., 0.];
disp('Fpm = ');
disp(Fpm);
Fmm = [-8., 4., 1.; 2., -12., 3.; 2., 0., -2.];
disp('Fmm = ');
disp(Fmm);
Fmp = [3., 0.; 2., 5.; 0., 0.];
disp('Fmp = ');
disp(Fmp);
x = 0.7;
disp('x = ');
disp(x);
disp('Test:');
disp('-----');
disp('[mass0, ini, K, clo] = FluidSolve(Fpp, Fpm, Fmp, Fmm);:');
[mass0, ini, K, clo] = FluidSolve(Fpp, Fpm, Fmp, Fmm);
disp('mass0 = ');
disp(mass0);
disp('ini = ');
disp(ini);
disp('K = ');
disp(K);
disp('clo = ');
disp(clo);
disp('pdfAtX = ini*expm(K*x)*clo;:');
pdfAtX = ini*expm(K*x)*clo;
disp('pdfAtX = ');
disp(pdfAtX);
assert(all(eig(K)<0), 'FluidSolve: the eigenvalues of matrix K are not negative!');
assert(abs(1.-sum(mass0)-sum(ini*inv(-K)*clo))<10^-14, 'FluidSolve: the integral of the fluid density in not one!');
disp('========================================')
disp('Testing BuTools function GeneralFluidSolve')
disp('Input:');
disp('------');
Q = [-6., 1., 3., 2., 0., 0.; 6., -10., 2., 0., 2., 0.; 3., 7., -12., 0., 0., 2.; 5., 0., 0., -9., 1., 3.; 0., 5., 0., 6., -13., 2.; 0., 0., 5., 3., 7., -15.];
disp('Q = ');
disp(Q);
R = [2., 0., 0., 0., 0., 0.; 0., -4., 0., 0., 0., 0.; 0., 0., -12., 0., 0., 0.; 0., 0., 0., 6., 0., 0.; 0., 0., 0., 0., 0., 0.; 0., 0., 0., 0., 0., -8.];
disp('R = ');
disp(R);
x = 0.7;
disp('x = ');
disp(x);
disp('Test:');
disp('-----');
disp('[mass0, ini, K, clo] = GeneralFluidSolve(Q, R);:');
[mass0, ini, K, clo] = GeneralFluidSolve(Q, R);
disp('mass0 = ');
disp(mass0);
disp('ini = ');
disp(ini);
disp('K = ');
disp(K);
disp('clo = ');
disp(clo);
disp('pdfAtX = ini*expm(K*x)*clo;:');
pdfAtX = ini*expm(K*x)*clo;
disp('pdfAtX = ');
disp(pdfAtX);
assert(all(eig(K)<0), 'GeneralFluidSolve: the eigenvalues of matrix K are not negative!');
assert(abs(1.-sum(mass0)-sum(ini*inv(-K)*clo))<10^-14, 'GeneralFluidSolve: the integral of the fluid density in not one!');
disp('========================================')
disp('Testing BuTools function FluidStationaryDistr')
disp('Input:');
disp('------');
Q = [-6., 1., 3., 2., 0., 0.; 6., -10., 2., 0., 2., 0.; 3., 7., -12., 0., 0., 2.; 5., 0., 0., -9., 1., 3.; 0., 5., 0., 6., -13., 2.; 0., 0., 5., 3., 7., -15.];
disp('Q = ');
disp(Q);
R = [2., 0., 0., 0., 0., 0.; 0., -4., 0., 0., 0., 0.; 0., 0., -12., 0., 0., 0.; 0., 0., 0., 6., 0., 0.; 0., 0., 0., 0., 0., 0.; 0., 0., 0., 0., 0., -8.];
disp('R = ');
disp(R);
x = (0.0:1.0:30.0);
disp('x = ');
disp(x);
disp('Test:');
disp('-----');
disp('[mass0, ini, K, clo] = GeneralFluidSolve(Q, R);:');
[mass0, ini, K, clo] = GeneralFluidSolve(Q, R);
disp('mass0 = ');
disp(mass0);
disp('ini = ');
disp(ini);
disp('K = ');
disp(K);
disp('clo = ');
disp(clo);
disp('y = FluidStationaryDistr(mass0, ini, K, clo, x);:');
y = FluidStationaryDistr(mass0, ini, K, clo, x);
disp('y = ');
disp(y);
pi = CTMCSolve(Q);
assert(norm(y(end, 1:end)-pi)<10^-5, 'FluidStationaryDistr: stationary distribution does not converge to the steady state distribution of the phases!');

