clear all
run('/home/gabor/github/butools/Matlab/BuToolsInit.m')

disp('---BuTools: MAP package test file---');
disp('Enable the verbose messages with the BuToolsVerbose flag');
global BuToolsVerbose;
BuToolsVerbose = true;
disp('Enable input parameter checking with the BuToolsCheckInput flag');
global BuToolsCheckInput;
BuToolsCheckInput = true;
global BuToolsCheckPrecision;
format short g;
disp('========================================')
disp('Testing BuTools function MarginalDistributionFromMAP')
disp('Input:');
disp('------');
D0 = [-0.17, 0, 0, 0.07; 0.01, -0.78, 0.03, 0.08; 0.22, 0.17, -1.1, 0.02; 0.04, 0.12, 0, -0.42];
disp('D0 = ');
disp(D0);
D1 = [0, 0.06, 0, 0.04; 0.04, 0.19, 0.21, 0.22; 0.22, 0.13, 0.15, 0.19; 0.05, 0, 0.17, 0.04];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('[a, A] = MarginalDistributionFromMAP(D0, D1);:');
[a, A] = MarginalDistributionFromMAP(D0, D1);
disp('a = ');
disp(a);
disp('A = ');
disp(A);
assert(length(a)==size(D0,1)&&CheckPHRepresentation(a, A), 'MarginalDistributionFromMAP returned a wrong PH representation!');
disp('========================================')
disp('Testing BuTools function MarginalMomentsFromMAP')
disp('Input:');
disp('------');
D0 = [-0.17, 0, 0, 0.07; 0.01, -0.78, 0.03, 0.08; 0.22, 0.17, -1.1, 0.02; 0.04, 0.12, 0, -0.42];
disp('D0 = ');
disp(D0);
D1 = [0, 0.06, 0, 0.04; 0.04, 0.19, 0.21, 0.22; 0.22, 0.13, 0.15, 0.19; 0.05, 0, 0.17, 0.04];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('moms = MarginalMomentsFromMAP(D0, D1);:');
moms = MarginalMomentsFromMAP(D0, D1);
disp('moms = ');
disp(moms);
assert(length(moms)==2*size(D0,1)-1&&CheckMoments(moms), 'MarginalMomentsFromMAP returned wrong moments!');
disp('========================================')
disp('Testing BuTools function MarginalDistributionFromRAP')
disp('Input:');
disp('------');
H0 = [-2, 0, 0; 0, -3, 1; 0, -1, -2];
disp('H0 = ');
disp(H0);
H1 = [1.8, 0.2, 0; 0.2, 1.8, 0; 0.2, 1.8, 1];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('[a, A] = MarginalDistributionFromRAP(H0, H1);:');
[a, A] = MarginalDistributionFromRAP(H0, H1);
disp('a = ');
disp(a);
disp('A = ');
disp(A);
assert(length(a)==size(H0,1)&&CheckMERepresentation(a, A), 'MarginalDistributionFromRAP returned a wrong ME representation!');
disp('========================================')
disp('Testing BuTools function MarginalMomentsFromRAP')
disp('Input:');
disp('------');
H0 = [-2., 0, 0; 0, -3., 1.; 0, -1., -2.];
disp('H0 = ');
disp(H0);
H1 = [1.8, 0.2, 0; 0.2, 1.8, 0; 0.2, 1.8, 1.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('moms = MarginalMomentsFromRAP(H0, H1);:');
moms = MarginalMomentsFromRAP(H0, H1);
disp('moms = ');
disp(moms);
assert(length(moms)==2*size(H0,1)-1&&CheckMoments(moms), 'MarginalMomentsFromRAP returned wrong moments!');
disp('========================================')
disp('Testing BuTools function MarginalDistributionFromMMAP')
D0 = [-1.78, 0.29; 0.07, -0.92];
disp('D0 = ');
disp(D0);
D1 = [0.15, 0.49; 0.23, 0.36];
disp('D1 = ');
disp(D1);
D2 = [0.11, 0.2; 0.01, 0];
disp('D2 = ');
disp(D2);
D3 = [0.14, 0.4; 0.11, 0.14];
disp('D3 = ');
disp(D3);
disp('Test:');
disp('-----');
disp('[a, A] = MarginalDistributionFromMMAP({D0, D1, D2, D3});:');
[a, A] = MarginalDistributionFromMMAP({D0, D1, D2, D3});
disp('a = ');
disp(a);
disp('A = ');
disp(A);
assert(length(a)==size(D0,1)&&CheckPHRepresentation(a, A), 'MarginalDistributionFromMMAP returned a wrong PH representation!');
disp('========================================')
disp('Testing BuTools function MarginalMomentsFromMMAP')
disp('Input:');
disp('------');
D0 = [-1.78, 0.29; 0.07, -0.92];
disp('D0 = ');
disp(D0);
D1 = [0.15, 0.49; 0.23, 0.36];
disp('D1 = ');
disp(D1);
D2 = [0.11, 0.2; 0.01, 0];
disp('D2 = ');
disp(D2);
D3 = [0.14, 0.4; 0.11, 0.14];
disp('D3 = ');
disp(D3);
disp('Test:');
disp('-----');
disp('moms = MarginalMomentsFromMMAP({D0, D1, D2, D3});:');
moms = MarginalMomentsFromMMAP({D0, D1, D2, D3});
disp('moms = ');
disp(moms);
assert(length(moms)==2*size(D0,1)-1&&CheckMoments(moms), 'MarginalMomentsFromMMAP returned wrong moments!');
disp('========================================')
disp('Testing BuTools function MarginalDistributionFromMRAP')
disp('Input:');
disp('------');
x = 0.18;
H0 = [-5., 0.1+x, 0.9, 1.; 1., -8., 0.9, 0.1; 0.9, 0.1, -4., 1.; 1., 2., 3., -9.];
disp('H0 = ');
disp(H0);
H1 = [0.1-x, 0.7, 0.1, 0.1; 0.1, 1., 1.8, 0.1; 0.1, 0.1, 0.1, 0.7; 0.7, 0.1, 0.1, 0.1];
disp('H1 = ');
disp(H1);
H2 = [0.1, 0.1, 0.1, 1.7; 1.8, 0.1, 1., 0.1; 0.1, 0.1, 0.7, 0.1; 0.1, 1., 0.1, 0.8];
disp('H2 = ');
disp(H2);
disp('Test:');
disp('-----');
disp('[a, A] = MarginalDistributionFromMRAP({H0, H1, H2});:');
[a, A] = MarginalDistributionFromMRAP({H0, H1, H2});
disp('a = ');
disp(a);
disp('A = ');
disp(A);
assert(length(a)==size(H0,1)&&CheckMERepresentation(a, A), 'MarginalDistributionFromMRAP returned a wrong ME representation!');
disp('========================================')
disp('Testing BuTools function MarginalMomentsFromMRAP')
disp('Input:');
disp('------');
x = 0.18;
H0 = [-5., 0.1+x, 0.9, 1.; 1., -8., 0.9, 0.1; 0.9, 0.1, -4., 1.; 1., 2., 3., -9.];
disp('H0 = ');
disp(H0);
H1 = [0.1-x, 0.7, 0.1, 0.1; 0.1, 1., 1.8, 0.1; 0.1, 0.1, 0.1, 0.7; 0.7, 0.1, 0.1, 0.1];
disp('H1 = ');
disp(H1);
H2 = [0.1, 0.1, 0.1, 1.7; 1.8, 0.1, 1., 0.1; 0.1, 0.1, 0.7, 0.1; 0.1, 1., 0.1, 0.8];
disp('H2 = ');
disp(H2);
disp('Test:');
disp('-----');
disp('moms = MarginalMomentsFromMRAP({H0, H1, H2});:');
moms = MarginalMomentsFromMRAP({H0, H1, H2});
disp('moms = ');
disp(moms);
assert(length(moms)==2*size(H0,1)-1&&CheckMoments(moms), 'MarginalMomentsFromMRAP returned wrong moments!');
disp('========================================')
disp('Testing BuTools function LagCorrelationsFromMAP')
disp('Input:');
disp('------');
D0 = [-5., 0, 1., 1.; 1., -8., 1., 0; 1., 0, -4., 1.; 1., 2., 3., -9.];
disp('D0 = ');
disp(D0);
D1 = [0, 1., 0, 2.; 2., 1., 3., 0; 0, 0, 1., 1.; 1., 1., 0, 1.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('corr = LagCorrelationsFromMAP(D0, D1, 3);:');
corr = LagCorrelationsFromMAP(D0, D1, 3);
disp('corr = ');
disp(corr);
assert(length(corr)==3&&all(corr<=1)&&all(corr>=-1), 'LagCorrelationsFromMAP returned wrong autocorrelation coefficients!');
disp('========================================')
disp('Testing BuTools function LagCorrelationsFromRAP')
disp('Input:');
disp('------');
H0 = [-2., 0, 0; 0, -3., 1.; 0, -1., -2.];
disp('H0 = ');
disp(H0);
H1 = [1.8, 0.2, 0; 0.2, 1.8, 0; 0.2, 1.8, 1.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('corr = LagCorrelationsFromRAP(H0, H1, 3);:');
corr = LagCorrelationsFromRAP(H0, H1, 3);
disp('corr = ');
disp(corr);
assert(length(corr)==3&&all(corr<=1)&&all(corr>=-1), 'LagCorrelationsFromRAP returned wrong autocorrelation coefficients!');
disp('========================================')
disp('Testing BuTools function LagkJointMomentsFromMAP')
disp('Input:');
disp('------');
D0 = [-5., 0, 1., 1.; 1., -8., 1., 0; 1., 0, -4., 1.; 1., 2., 3., -9.];
disp('D0 = ');
disp(D0);
D1 = [0, 1., 0, 2.; 2., 1., 3., 0; 0, 0, 1., 1.; 1., 1., 0, 1.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('Nm = LagkJointMomentsFromMAP(D0, D1, 4, 1);:');
Nm = LagkJointMomentsFromMAP(D0, D1, 4, 1);
disp('Nm = ');
disp(Nm);
disp('moms = MarginalMomentsFromMAP(D0, D1, 4);:');
moms = MarginalMomentsFromMAP(D0, D1, 4);
disp('moms = ');
disp(moms);
cjm = zeros(1,3);
for i=1:1:3
    Nx = LagkJointMomentsFromMAP(D0, D1, 1, i);
    cjm(i) = (Nx(2, 2)-moms(1)^2)/(moms(2)-moms(1)^2);
end
disp('Correlation from joint moments:');
disp(cjm);
disp('corr = LagCorrelationsFromMAP(D0, D1, 3);:');
corr = LagCorrelationsFromMAP(D0, D1, 3);
disp('corr = ');
disp(corr);
mNm1 = reshape(Nm(1, 2:end),1,numel(Nm(1, 2:end)));
mNm2 = reshape(Nm(2:end, 1),1,numel(Nm(2:end, 1)));
assert(all(all(Nm>0))&&norm(moms-mNm1)<10^-14&&norm(moms-mNm2)<10^-14&&norm(corr-cjm)<10^-14, 'Joint moment matrix is invalid!');
disp('========================================')
disp('Testing BuTools function LagkJointMomentsFromRAP')
disp('Input:');
disp('------');
H0 = [-2., 0, 0; 0, -3., 1.; 0, -1., -2.];
disp('H0 = ');
disp(H0);
H1 = [1.8, 0.2, 0; 0.2, 1.8, 0; 0.2, 1.8, 1.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('Nm = LagkJointMomentsFromRAP(H0, H1, 4, 1);:');
Nm = LagkJointMomentsFromRAP(H0, H1, 4, 1);
disp('length(Nm):');
disp(length(Nm));
disp('moms = MarginalMomentsFromRAP(H0, H1, 4);:');
moms = MarginalMomentsFromRAP(H0, H1, 4);
disp('moms = ');
disp(moms);
cjm = zeros(1,3);
for i=1:1:3
    Nx = LagkJointMomentsFromRAP(H0, H1, 1, i);
    cjm(i) = (Nx(2, 2)-moms(1)^2)/(moms(2)-moms(1)^2);
end
disp('Correlation from joint moments:');
disp(cjm);
disp('corr = LagCorrelationsFromRAP(H0, H1, 3);:');
corr = LagCorrelationsFromRAP(H0, H1, 3);
disp('corr = ');
disp(corr);
mNm1 = reshape(Nm(1, 2:end),1,numel(Nm(1, 2:end)));
mNm2 = reshape(Nm(2:end, 1),1,numel(Nm(2:end, 1)));
assert(all(all(Nm>0))&&norm(moms-mNm1)<10^-14&&norm(moms-mNm2)<10^-14&&norm(corr-cjm)<10^-14, 'Joint moment matrix is invalid!');
disp('========================================')
disp('Testing BuTools function LagkJointMomentsFromMMAP')
disp('Input:');
disp('------');
D0 = [-1.78, 0.29; 0.07, -0.92];
disp('D0 = ');
disp(D0);
D1 = [0.15, 0.49; 0.23, 0.36];
disp('D1 = ');
disp(D1);
D2 = [0.11, 0.2; 0.01, 0];
disp('D2 = ');
disp(D2);
D3 = [0.14, 0.4; 0.11, 0.14];
disp('D3 = ');
disp(D3);
disp('Test:');
disp('-----');
disp('Nm = LagkJointMomentsFromMMAP({D0, D1, D2, D3}, 3, 1);:');
Nm = LagkJointMomentsFromMMAP({D0, D1, D2, D3}, 3, 1);
disp(Nm{1});
disp(Nm{2});
disp(Nm{3});
assert(length(Nm)==3&&norm(Nm{1}+Nm{2}+Nm{3}-LagkJointMomentsFromMAP(D0, D1+D2+D3, 3, 1))<10^-14, 'Joint moment matrix is invalid!');
disp('========================================')
disp('Testing BuTools function LagkJointMomentsFromMRAP')
disp('Input:');
disp('------');
x = 0.18;
H0 = [-5., 0.1+x, 0.9, 1.; 1., -8., 0.9, 0.1; 0.9, 0.1, -4., 1.; 1., 2., 3., -9.];
disp('H0 = ');
disp(H0);
H1 = [0.1-x, 0.7, 0.1, 0.1; 0.1, 1., 1.8, 0.1; 0.1, 0.1, 0.1, 0.7; 0.7, 0.1, 0.1, 0.1];
disp('H1 = ');
disp(H1);
H2 = [0.1, 0.1, 0.1, 1.7; 1.8, 0.1, 1., 0.1; 0.1, 0.1, 0.7, 0.1; 0.1, 1., 0.1, 0.8];
disp('H2 = ');
disp(H2);
disp('Test:');
disp('-----');
disp('Nm = LagkJointMomentsFromMRAP({H0, H1, H2}, 3, 2);:');
Nm = LagkJointMomentsFromMRAP({H0, H1, H2}, 3, 2);
disp(Nm{1});
disp(Nm{2});
assert(length(Nm)==2&&norm(Nm{1}+Nm{2}-LagkJointMomentsFromRAP(H0, H1+H2, 3, 2))<10^-14, 'Joint moment matrix is invalid!');
disp('========================================')
disp('Testing BuTools function RandomMAP')
disp('Test:');
disp('-----');
disp('[D0, D1] = RandomMAP(4, 1.62, 10);:');
[D0, D1] = RandomMAP(4, 1.62, 10);
disp('D0 = ');
disp(D0);
disp('D1 = ');
disp(D1);
disp('m = MarginalMomentsFromMAP(D0, D1, 1);:');
m = MarginalMomentsFromMAP(D0, D1, 1);
disp('m = ');
disp(m);
assert(CheckMAPRepresentation(D0, D1), 'RandomMAP failed to return a valid MAP representation!');
assert(abs(m-1.62)<10^-14, 'RandomMAP failed to match the given mean value!');
disp('========================================')
disp('Testing BuTools function RandomMMAP')
disp('Test:');
disp('-----');
disp('Dm = RandomMMAP(4, 3, 1.62, 10);:');
Dm = RandomMMAP(4, 3, 1.62, 10);
disp(Dm{1});
disp(Dm{2});
disp(Dm{3});
disp(Dm{4});
disp('m = MarginalMomentsFromMMAP(Dm, 1);:');
m = MarginalMomentsFromMMAP(Dm, 1);
disp('m = ');
disp(m);
assert(CheckMMAPRepresentation(Dm), 'RandomMMAP failed to return a valid MMAP representation!');
assert(abs(m-1.62)<10^-14, 'RandomMMAP failed to match the given mean value!');
disp('========================================')
disp('Testing BuTools function CheckMAPRepresentation')
disp('Input:');
disp('------');
D0 = [-1., 0, 1.; 0, -2., 0; 1., 0, -3.];
disp('D0 = ');
disp(D0);
D1 = [-1., 0, 1., 0; 0, -2., 0, 1.; 1., 0, -3., 0; 1., 2., 2., 1.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('flag = CheckMAPRepresentation(D0, D1);:');
flag = CheckMAPRepresentation(D0, D1);
disp('flag = ');
disp(flag);
assert(flag==false, 'CheckMAPRepresentation failed to detect the incompatible shapes of D0 and D1!');
disp('Input:');
disp('------');
D0 = [-1., 0, 1.; 0, -2., 0; 1., 0, -3.];
disp('D0 = ');
disp(D0);
D1 = [1., 0, 1.; 0, 2., 0; 1., 0, 3.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('flag = CheckMAPRepresentation(D0, D1);:');
flag = CheckMAPRepresentation(D0, D1);
disp('flag = ');
disp(flag);
assert(flag==false, 'CheckMAPRepresentation failed to detect invalid rowsums!');
disp('Input:');
disp('------');
D0 = [-3., 0, 1.; 0, -2., 0; 1., 0, -5.];
disp('D0 = ');
disp(D0);
D1 = [1., 0, 1.; 0, 2., 0; 1., 0, 3.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('flag = CheckMAPRepresentation(D0, D1);:');
flag = CheckMAPRepresentation(D0, D1);
disp('flag = ');
disp(flag);
assert(flag==true, 'CheckMAPRepresentation failed to recognize a valid MAP representation!');
disp('========================================')
disp('Testing BuTools function CheckRAPRepresentation')
disp('Input:');
disp('------');
H0 = [-1., 0, 1.; 0, -2., 0; 1., 0, -3.; 1., 2., 2.];
disp('H0 = ');
disp(H0);
H1 = [-1., 0, 1.; 0, -2., 0; 1., 0, -3.; 1., 2., 2.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('flag = CheckRAPRepresentation(H0, H1);:');
flag = CheckRAPRepresentation(H0, H1);
disp('flag = ');
disp(flag);
assert(flag==false, 'CheckRAPRepresentation failed to detect the incompatible shapes of D0 and D1!');
disp('Input:');
disp('------');
H0 = [-1., 0, 2.; 0, 2., 0; 1., 0, -3.];
disp('H0 = ');
disp(H0);
H1 = [-1., 0, 1.; 0, -2., 0; 1., 0, -3.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('flag = CheckRAPRepresentation(H0, H1);:');
flag = CheckRAPRepresentation(H0, H1);
disp('flag = ');
disp(flag);
assert(flag==false, 'CheckRAPRepresentation failed to detect invalid rowsums!');
disp('Input:');
disp('------');
H0 = [-1., 0, 0; 0, -2., 2.; 0, 3., -3.];
disp('H0 = ');
disp(H0);
H1 = [0, 0, 1.; 0, -1., 1.; 1., 0, -1.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('flag = CheckRAPRepresentation(H0, H1);:');
flag = CheckRAPRepresentation(H0, H1);
disp('flag = ');
disp(flag);
assert(flag==false, 'CheckRAPRepresentation failed to detect invalid eigenvalues!');
disp('Input:');
disp('------');
H0 = [-2., 0, 0; 0, -1., 1.; 0, -1., -1.];
disp('H0 = ');
disp(H0);
H1 = [1., 0, 1.; 0, 1., -1.; 1., 0, 1.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('flag = CheckRAPRepresentation(H0, H1);:');
flag = CheckRAPRepresentation(H0, H1);
disp('flag = ');
disp(flag);
assert(flag==false, 'CheckRAPRepresentation failed to detect invalid eigenvalues!');
disp('Input:');
disp('------');
H0 = [-1., 0, 0; 0, -2., 1.; 0, -1., -2.];
disp('H0 = ');
disp(H0);
H1 = [1., 0, 0; 0, 1., 0; 1., 1., 1.];
disp('H1 = ');
disp(H1);
disp('Test:');
disp('-----');
disp('flag = CheckRAPRepresentation(H0, H1);:');
flag = CheckRAPRepresentation(H0, H1);
disp('flag = ');
disp(flag);
assert(flag==true, 'CheckRAPRepresentation failed to recognize a valid RAP representation!');
disp('========================================')
disp('Testing BuTools function CheckMMAPRepresentation')
disp('Input:');
disp('------');
D0 = [-1.05, 0.03, 0.07; 0.19, -1.63, 0.06; 0, 0.2, -1.03];
disp('D0 = ');
disp(D0);
D1 = [0.16, 0.11, 0; 0.1, 0.16, 0; 0.27, 0, 0.19];
disp('D1 = ');
disp(D1);
D2 = [0.01, 0.09, 0.13; 0.26, 0.21, 0.05; 0, 0.16, 0.07];
disp('D2 = ');
disp(D2);
D3 = [0.19, 0.06, 0.2; 0.17, 0.16, 0.27; 0, 0, 0.14];
disp('D3 = ');
disp(D3);
disp('Test:');
disp('-----');
disp('flag = CheckMMAPRepresentation({D0, D1, D2, D3});:');
flag = CheckMMAPRepresentation({D0, D1, D2, D3});
disp('flag = ');
disp(flag);
assert(flag==true, 'CheckMMAPRepresentation failed to recognize a valid MMAP representation!');
disp('========================================')
disp('Testing BuTools function CheckMRAPRepresentation')
disp('Input:');
disp('------');
x = 0.18;
H0 = [-5., 0.1+x, 0.9, 1.; 1., -8., 0.9, 0.1; 0.9, 0.1, -4., 1.; 1., 2., 3., -9.];
disp('H0 = ');
disp(H0);
H1 = [0.1-x, 0.7, 0.1, 0.1; 0.1, 1., 1.8, 0.1; 0.1, 0.1, 0.1, 0.7; 0.7, 0.1, 0.1, 0.1];
disp('H1 = ');
disp(H1);
H2 = [0.1, 0.1, 0.1, 1.7; 1.8, 0.1, 1., 0.1; 0.1, 0.1, 0.7, 0.1; 0.1, 1., 0.1, 0.8];
disp('H2 = ');
disp(H2);
disp('Test:');
disp('-----');
disp('flag = CheckMRAPRepresentation({H0, H1, H2});:');
flag = CheckMRAPRepresentation({H0, H1, H2});
disp('flag = ');
disp(flag);
assert(flag==true, 'CheckMRAPRepresentation failed to recognize a valid MRAP representation!');
disp('========================================')
disp('Testing BuTools function RAPFromMoments')
disp('Input:');
disp('------');
G0 = [-6.2, 2., 0.; 2., -9., 1.; 1., 0, -3.];
disp('G0 = ');
disp(G0);
G1 = [2.2, -2., 4.; 2., 2., 2.; 1., 0, 1.];
disp('G1 = ');
disp(G1);
disp('moms = MarginalMomentsFromRAP(G0, G1, 5);:');
moms = MarginalMomentsFromRAP(G0, G1, 5);
disp('moms = ');
disp(moms);
disp('Nm = LagkJointMomentsFromRAP(G0, G1, 2, 1);:');
Nm = LagkJointMomentsFromRAP(G0, G1, 2, 1);
disp('Nm = ');
disp(Nm);
disp('Test:');
disp('-----');
disp('[H0, H1] = RAPFromMoments(moms, Nm);:');
[H0, H1] = RAPFromMoments(moms, Nm);
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
disp('rmoms = MarginalMomentsFromRAP(H0, H1, 5);:');
rmoms = MarginalMomentsFromRAP(H0, H1, 5);
disp('rmoms = ');
disp(rmoms);
disp('rNm = LagkJointMomentsFromRAP(H0, H1, 2, 1);:');
rNm = LagkJointMomentsFromRAP(H0, H1, 2, 1);
disp('rNm = ');
disp(rNm);
assert(norm(moms-rmoms)<10^-12&&norm(Nm-rNm)<10^-12, 'The moments and joint moments returned by RAPFromMoments are not the same as given!');
disp('Input:');
disp('------');
G0 = [-5., 0, 1., 1.; 1., -8., 1., 0; 1., 0, -4., 1.; 1., 2., 3., -9.];
disp('G0 = ');
disp(G0);
G1 = [0, 1., 0, 2.; 2., 1., 3., 0; 0, 0, 1., 1.; 1., 1., 0, 1.];
disp('G1 = ');
disp(G1);
disp('moms = MarginalMomentsFromRAP(G0, G1, 7);:');
moms = MarginalMomentsFromRAP(G0, G1, 7);
disp('moms = ');
disp(moms);
disp('Nm = LagkJointMomentsFromRAP(G0, G1, 3, 1);:');
Nm = LagkJointMomentsFromRAP(G0, G1, 3, 1);
disp('Nm = ');
disp(Nm);
disp('Test:');
disp('-----');
disp('[H0, H1] = RAPFromMoments(moms, Nm);:');
[H0, H1] = RAPFromMoments(moms, Nm);
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
BuToolsCheckPrecision = 10.^-8;
disp('rmoms = MarginalMomentsFromRAP(H0, H1, 7);:');
rmoms = MarginalMomentsFromRAP(H0, H1, 7);
disp('rmoms = ');
disp(rmoms);
disp('rNm = LagkJointMomentsFromRAP(H0, H1, 3, 1);:');
rNm = LagkJointMomentsFromRAP(H0, H1, 3, 1);
disp('rNm = ');
disp(rNm);
assert(CheckRAPRepresentation(H0, H1, 10^-8), 'RAPFromMoments returned an invalid RAP representation!');
assert(norm(moms-rmoms)<10^-8&&norm(Nm-rNm)<10^-8, 'The moments and joint moments returned by RAPFromMoments are not the same as given!');
disp('========================================')
disp('Testing BuTools function MRAPFromMoments')
disp('Input:');
disp('------');
G0 = [-1.05, 0.03, 0.07; 0.19, -1.63, 0.06; 0, 0.2, -1.03];
disp('G0 = ');
disp(G0);
G1 = [0.16, 0.11, 0; 0.1, 0.16, 0; 0.27, 0, 0.19];
disp('G1 = ');
disp(G1);
G2 = [0.01, 0.09, 0.13; 0.26, 0.21, 0.05; 0, 0.16, 0.07];
disp('G2 = ');
disp(G2);
G3 = [0.19, 0.06, 0.2; 0.17, 0.16, 0.27; 0, 0, 0.14];
disp('G3 = ');
disp(G3);
disp('G = {G0, G1, G2, G3};:');
G = {G0, G1, G2, G3};
disp('moms = MarginalMomentsFromMRAP(G, 5);:');
moms = MarginalMomentsFromMRAP(G, 5);
disp('moms = ');
disp(moms);
disp('Nm = LagkJointMomentsFromMRAP(G, 2, 1);:');
Nm = LagkJointMomentsFromMRAP(G, 2, 1);
disp('[Nm1, Nm2, Nm3] = Nm{:};:');
[Nm1, Nm2, Nm3] = Nm{:};
disp('Nm1 = ');
disp(Nm1);
disp('Nm2 = ');
disp(Nm2);
disp('Nm3 = ');
disp(Nm3);
disp('Test:');
disp('-----');
disp('H = MRAPFromMoments(moms, Nm);:');
H = MRAPFromMoments(moms, Nm);
disp('H{1}:');
disp(H{1});
disp('H{2}:');
disp(H{2});
disp('H{3}:');
disp(H{3});
disp('H{4}:');
disp(H{4});
BuToolsCheckPrecision = 10.^-10;
disp('rmoms = MarginalMomentsFromMRAP(H, 5);:');
rmoms = MarginalMomentsFromMRAP(H, 5);
disp('rmoms = ');
disp(rmoms);
disp('rNm = LagkJointMomentsFromMRAP(H, 2, 1);:');
rNm = LagkJointMomentsFromMRAP(H, 2, 1);
disp('[rNm1, rNm2, rNm3] = rNm{:};:');
[rNm1, rNm2, rNm3] = rNm{:};
disp('rNm1 = ');
disp(rNm1);
disp('rNm2 = ');
disp(rNm2);
disp('rNm3 = ');
disp(rNm3);
assert(norm(moms-rmoms)<10^-9&&norm(Nm1-rNm1)<10^-10&&norm(Nm2-rNm2)<10^-10&&norm(Nm3-rNm3)<10^-10, 'The moments and joint moments returned by MRAPFromMoments are not the same as given!');
disp('========================================')
disp('Testing BuTools function RAPFromMomentsAndCorrelations')
disp('Input:');
disp('------');
H0 = [-6.2, 2., 0; 2., -9., 1.; 1., 0, -3.];
disp('H0 = ');
disp(H0);
H1 = [2.2, 0, 2.; 0, 4., 2.; 0, 1., 1.];
disp('H1 = ');
disp(H1);
disp('mom = MarginalMomentsFromRAP(H0, H1);:');
mom = MarginalMomentsFromRAP(H0, H1);
disp('mom = ');
disp(mom);
disp('corr = LagCorrelationsFromRAP(H0, H1, 3);:');
corr = LagCorrelationsFromRAP(H0, H1, 3);
disp('corr = ');
disp(corr);
disp('Test:');
disp('-----');
disp('[G0, G1] = RAPFromMomentsAndCorrelations(mom, corr);:');
[G0, G1] = RAPFromMomentsAndCorrelations(mom, corr);
disp('G0 = ');
disp(G0);
disp('G1 = ');
disp(G1);
disp('rmom = MarginalMomentsFromRAP(G0, G1);:');
rmom = MarginalMomentsFromRAP(G0, G1);
disp('rmom = ');
disp(rmom);
disp('rcorr = LagCorrelationsFromRAP(G0, G1, 3);:');
rcorr = LagCorrelationsFromRAP(G0, G1, 3);
disp('rcorr = ');
disp(rcorr);
assert(CheckRAPRepresentation(G0, G1), 'RAPFromMomentsAndCorrelations returned an invalid RAP representation!');
assert(norm(rmom-mom)+norm(rcorr-corr)<10^-12, 'The result of RAPFromMomentsAndCorrelations has different moments or correlations than given!');
disp('========================================')
disp('Testing BuTools function MAP2FromMoments')
disp('Input:');
disp('------');
D0 = [-14., 1.; 1, -25.];
disp('D0 = ');
disp(D0);
D1 = [6., 7.; 3., 21.];
disp('D1 = ');
disp(D1);
disp('moms = MarginalMomentsFromMAP(D0, D1, 3);:');
moms = MarginalMomentsFromMAP(D0, D1, 3);
disp('moms = ');
disp(moms);
disp('corr = LagCorrelationsFromMAP(D0, D1, 1);:');
corr = LagCorrelationsFromMAP(D0, D1, 1);
disp('corr = ');
disp(corr);
disp('Test:');
disp('-----');
disp('[D0, D1] = MAP2FromMoments(moms, corr);:');
[D0, D1] = MAP2FromMoments(moms, corr);
disp('D0 = ');
disp(D0);
disp('D1 = ');
disp(D1);
disp('rmoms = MarginalMomentsFromMAP(D0, D1, 3);:');
rmoms = MarginalMomentsFromMAP(D0, D1, 3);
disp('rmoms = ');
disp(rmoms);
disp('rcorr = LagCorrelationsFromMAP(D0, D1, 1);:');
rcorr = LagCorrelationsFromMAP(D0, D1, 1);
disp('rcorr = ');
disp(rcorr);
assert(CheckMAPRepresentation(D0, D1), 'MAP2FromMoments returned an invalid MAP representation!');
assert(norm(moms-rmoms)<10^-12&&abs(corr-rcorr)<10^-12, 'The moments and the correlation returned by MAP2FromMoments are not the same as given!');
disp('========================================')
disp('Testing BuTools function MAP2CorrelationBounds')
disp('Input:');
disp('------');
D0 = [-14., 1.; 1., -25.];
disp('D0 = ');
disp(D0);
D1 = [6., 7.; 3., 21.];
disp('D1 = ');
disp(D1);
disp('moms = MarginalMomentsFromMAP(D0, D1, 3);:');
moms = MarginalMomentsFromMAP(D0, D1, 3);
disp('moms = ');
disp(moms);
disp('Test:');
disp('-----');
disp('[lb, ub] = MAP2CorrelationBounds(moms);:');
[lb, ub] = MAP2CorrelationBounds(moms);
disp('lb = ');
disp(lb);
disp('ub = ');
disp(ub);
assert(lb<=0&&lb>=-1&&ub>=0&&ub<=1, 'Correlation bounds given by MAP2CorrelationBounds are not correct');
disp('========================================')
disp('Testing BuTools function MAPFromFewMomentsAndCorrelations')
disp('Input:');
disp('------');
moms = [1.1, 6.05];
disp('moms = ');
disp(moms);
corr1 = -0.17;
disp('corr1 = ');
disp(corr1);
disp('Test:');
disp('-----');
disp('[D0, D1] = MAPFromFewMomentsAndCorrelations(moms, corr1);:');
[D0, D1] = MAPFromFewMomentsAndCorrelations(moms, corr1);
disp('D0 = ');
disp(D0);
disp('D1 = ');
disp(D1);
disp('rmoms = MarginalMomentsFromMAP(D0, D1, 2);:');
rmoms = MarginalMomentsFromMAP(D0, D1, 2);
disp('rmoms = ');
disp(rmoms);
disp('rcorr1 = LagCorrelationsFromMAP(D0, D1, 1);:');
rcorr1 = LagCorrelationsFromMAP(D0, D1, 1);
disp('rcorr1 = ');
disp(rcorr1);
assert(CheckMAPRepresentation(D0, D1), 'MAPFromFewMomentsAndCorrelations returned with a non-Markovian representation!');
assert(norm(rmoms-moms)<10^-12&&abs(rcorr1-corr1)<10^-12, 'MAPFromFewMomentsAndCorrelations failed to match the marginal moments or the lag-1 autocorrelation!');
disp('Input:');
disp('------');
moms = [1.2, 4.32, 20.];
disp('moms = ');
disp(moms);
corr1 = -0.4;
disp('corr1 = ');
disp(corr1);
disp('Test:');
disp('-----');
disp('[D0, D1] = MAPFromFewMomentsAndCorrelations(moms, corr1);:');
[D0, D1] = MAPFromFewMomentsAndCorrelations(moms, corr1);
disp('D0 = ');
disp(D0);
disp('D1 = ');
disp(D1);
BuToolsCheckPrecision = 10.^-12;
disp('rmoms = MarginalMomentsFromMAP(D0, D1, 3);:');
rmoms = MarginalMomentsFromMAP(D0, D1, 3);
disp('rmoms = ');
disp(rmoms);
disp('rcorr1 = LagCorrelationsFromMAP(D0, D1, 1);:');
rcorr1 = LagCorrelationsFromMAP(D0, D1, 1);
disp('rcorr1 = ');
disp(rcorr1);
assert(CheckMAPRepresentation(D0, D1, 10^-13), 'MAPFromFewMomentsAndCorrelations returned with a non-Markovian representation!');
assert(norm(rmoms-moms)<10^-12&&abs(rcorr1-corr1)<10^-12, 'MAPFromFewMomentsAndCorrelations failed to match the marginal moments or the lag-1 autocorrelation!');
disp('Input:');
disp('------');
moms = [1.2, 4.32, 20.];
disp('moms = ');
disp(moms);
corr1 = 0.4;
disp('corr1 = ');
disp(corr1);
disp('Test:');
disp('-----');
disp('[D0, D1] = MAPFromFewMomentsAndCorrelations(moms, corr1);:');
[D0, D1] = MAPFromFewMomentsAndCorrelations(moms, corr1);
disp('D0 = ');
disp(D0);
disp('D1 = ');
disp(D1);
disp('rmoms = MarginalMomentsFromMAP(D0, D1, 3);:');
rmoms = MarginalMomentsFromMAP(D0, D1, 3);
disp('rmoms = ');
disp(rmoms);
disp('rcorr1 = LagCorrelationsFromMAP(D0, D1, 1);:');
rcorr1 = LagCorrelationsFromMAP(D0, D1, 1);
disp('rcorr1 = ');
disp(rcorr1);
assert(CheckMAPRepresentation(D0, D1, 10^-13), 'MAPFromFewMomentsAndCorrelations returned with a non-Markovian representation!');
assert(norm(rmoms-moms)<10^-12&&abs(rcorr1-corr1)<10^-12, 'MAPFromFewMomentsAndCorrelations failed to match the marginal moments or the lag-1 autocorrelation!');
disp('========================================')
disp('Testing BuTools function CanonicalFromMAP2')
disp('Input:');
disp('------');
D0 = [-14., 1.; 1., -25.];
disp('D0 = ');
disp(D0);
D1 = [6., 7.; 3., 21.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('[H0, H1] = CanonicalFromMAP2(D0, D1);:');
[H0, H1] = CanonicalFromMAP2(D0, D1);
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
Cm = SimilarityMatrix(H0, D0);
err1 = norm(H0*Cm-Cm*D0);
err2 = norm(H1*Cm-Cm*D1);
disp('Transformation errors:');
disp(max(err1, err2));
assert(CheckMAPRepresentation(H0, H1), 'The result of CanonicalFromMAP2 is not a valid MAP representation!');
assert(max(err1, err2)<10^-12, 'The MAP returned by CanonicalFromMAP2 is not similar to the input!');
disp('========================================')
disp('Testing BuTools function MAPFromRAP')
disp('Input:');
disp('------');
D0 = [-2., 2.; 2., -9.];
disp('D0 = ');
disp(D0);
D1 = [-2., 2.; 3., 4.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('[H0, H1] = MAPFromRAP(D0, D1);:');
[H0, H1] = MAPFromRAP(D0, D1);
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
disp('err = norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1));:');
err = norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1));
disp('err = ');
disp(err);
assert(err<10^-12, 'The RAP returned by MAPFromRAP is not similar to the input!');
disp('Input:');
disp('------');
D0 = [-2.4, 2.; 2., -9.];
disp('D0 = ');
disp(D0);
D1 = [-1.6, 2.; 3., 4.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('[H0, H1] = MAPFromRAP(D0, D1);:');
[H0, H1] = MAPFromRAP(D0, D1);
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
disp('err = norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1));:');
err = norm(LagkJointMomentsFromRAP(D0, D1, 3, 1)-LagkJointMomentsFromRAP(H0, H1, 3, 1));
disp('err = ');
disp(err);
assert(err<10^-12, 'The MAP returned by MAPFromRAP is not similar to the input!');
assert(CheckMAPRepresentation(H0, H1), 'The result of MAPFromRAP is not a MAP, as it should be!');
disp('========================================')
disp('Testing BuTools function MMAPFromMRAP')
disp('Input:');
disp('------');
x = 0.18;
H0 = [-5., 0.1+x, 0.9, 1.; 1., -8., 0.9, 0.1; 0.9, 0.1, -4., 1.; 1., 2., 3., -9.];
disp('H0 = ');
disp(H0);
H1 = [0.1-x, 0.7, 0.1, 0.1; 0.1, 1., 1.8, 0.1; 0.1, 0.1, 0.1, 0.7; 0.7, 0.1, 0.1, 0.1];
disp('H1 = ');
disp(H1);
H2 = [0.1, 0.1, 0.1, 1.7; 1.8, 0.1, 1., 0.1; 0.1, 0.1, 0.7, 0.1; 0.1, 1., 0.1, 0.8];
disp('H2 = ');
disp(H2);
H = {H0, H1, H2};
disp('moms = MarginalMomentsFromMRAP(H);:');
moms = MarginalMomentsFromMRAP(H);
disp('moms = ');
disp(moms);
disp('jmom = LagkJointMomentsFromMRAP(H, 3, 1);:');
jmom = LagkJointMomentsFromMRAP(H, 3, 1);
disp('Test:');
disp('-----');
disp('G = MMAPFromMRAP(H);:');
G = MMAPFromMRAP(H);
disp(G{1});
disp(G{2});
disp(G{3});
disp('rmoms = MarginalMomentsFromMMAP(G);:');
rmoms = MarginalMomentsFromMMAP(G);
disp('rmoms = ');
disp(rmoms);
disp('rjmom = LagkJointMomentsFromMMAP(G, 3, 1);:');
rjmom = LagkJointMomentsFromMMAP(G, 3, 1);
disp('err = norm(rjmom{1}-jmom{1})+norm(rjmom{2}-jmom{2});:');
err = norm(rjmom{1}-jmom{1})+norm(rjmom{2}-jmom{2});
disp('err = ');
disp(err);
assert(err<10^-12, 'The MMAP returned by MMAPFromMRAP is not similar to the input!');
assert(CheckMMAPRepresentation(G), 'The result of MMAPFromMRAP is not a MMAP, as it should be!');
disp('========================================')
disp('Testing BuTools function MinimalRepFromRAP')
disp('Input:');
disp('------');
D0 = [-5., 1., 0; 3., -3., 0; 1., 1., -5.];
disp('D0 = ');
disp(D0);
D1 = [0, 0, 4.; 0, 0, 0; 1., 1., 1.];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('[H0, H1] = MinimalRepFromRAP(D0, D1, ''cont'');:');
[H0, H1] = MinimalRepFromRAP(D0, D1, 'cont');
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
Cm = SimilarityMatrix(H0, D0);
err1 = norm(H0*Cm-Cm*D0);
err2 = norm(H1*Cm-Cm*D1);
disp('Transformation errors:');
disp(max(err1, err2));
assert(CheckRAPRepresentation(H0, H1), 'MinimalRepFromRAP did not return a valid RAP representation!');
assert(size(H0,1)==3&&max(err1, err2)<10^-12, 'MinimalRepFromRAP returned a RAP which is non-similar to the input or has an unexpected size!');
disp('[H0, H1] = MinimalRepFromRAP(D0, D1, ''obs'');:');
[H0, H1] = MinimalRepFromRAP(D0, D1, 'obs');
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
Cm = SimilarityMatrix(H0, D0);
err1 = norm(H0*Cm-Cm*D0);
err2 = norm(H1*Cm-Cm*D1);
disp('Transformation errors:');
disp(max(err1, err2));
assert(CheckRAPRepresentation(H0, H1), 'MinimalRepFromRAP did not return a valid RAP representation!');
assert(size(H0,1)==2&&max(err1, err2)<10^-12, 'MinimalRepFromRAP returned a RAP which is non-similar to the input or has an unexpected size!');
disp('[H0, H1] = MinimalRepFromRAP(D0, D1, ''obscont'');:');
[H0, H1] = MinimalRepFromRAP(D0, D1, 'obscont');
disp('H0 = ');
disp(H0);
disp('H1 = ');
disp(H1);
Cm = SimilarityMatrix(H0, D0);
err1 = norm(H0*Cm-Cm*D0);
err2 = norm(H1*Cm-Cm*D1);
disp('Transformation errors:');
disp(max(err1, err2));
assert(CheckRAPRepresentation(H0, H1), 'MinimalRepFromRAP did not return a valid RAP representation!');
assert(size(H0,1)==2&&max(err1, err2)<10^-12, 'MinimalRepFromRAP returned a RAP which is non-similar to the input or has an unexpected size!');
disp('========================================')
disp('Testing BuTools function MinimalRepFromMRAP')
disp('Input:');
disp('------');
D0 = [-5., 1., 0; 3., -3., 0; 1., 1., -5.];
disp('D0 = ');
disp(D0);
D1 = [0, 0, 0.8; 0, 0, 0; 0.2, 0.2, 0.2];
disp('D1 = ');
disp(D1);
D2 = [0, 0, 3.2; 0, 0, 0; 0.8, 0.8, 0.8];
disp('D2 = ');
disp(D2);
Dm = {D0, D1, D2};
disp('Test:');
disp('-----');
disp('H = MinimalRepFromMRAP(Dm, ''cont'');:');
H = MinimalRepFromMRAP(Dm, 'cont');
disp(H{1});
disp(H{2});
disp(H{3});
Cm = SimilarityMatrix(H{1}, Dm{1});
err = norm(H{1}*Cm-Cm*Dm{1})+norm(H{2}*Cm-Cm*Dm{2})+norm(H{3}*Cm-Cm*Dm{3});
disp('Transformation errors:');
disp(err);
assert(CheckMRAPRepresentation(H), 'MinimalRepFromMRAP did not return a valid MRAP representation!');
assert(size(H{2},1)==3&&err<10^-12, 'MinimalRepFromMRAP returned a MRAP which is non-similar to the input or has an unexpected size!');
disp('H = MinimalRepFromMRAP(Dm, ''obs'');:');
H = MinimalRepFromMRAP(Dm, 'obs');
disp(H{1});
disp(H{2});
disp(H{3});
Cm = SimilarityMatrix(H{1}, Dm{1});
err = norm(H{1}*Cm-Cm*Dm{1})+norm(H{2}*Cm-Cm*Dm{2})+norm(H{3}*Cm-Cm*Dm{3});
disp('Transformation errors:');
disp(err);
assert(CheckMRAPRepresentation(H), 'MinimalRepFromMRAP did not return a valid MRAP representation!');
assert(size(H{2},1)==2&&err<10^-12, 'MinimalRepFromMRAP returned a MRAP which is non-similar to the input or has an unexpected size!');
disp('H = MinimalRepFromMRAP(Dm, ''obscont'');:');
H = MinimalRepFromMRAP(Dm, 'obscont');
disp(H{1});
disp(H{2});
disp(H{3});
Cm = SimilarityMatrix(H{1}, Dm{1});
err = norm(H{1}*Cm-Cm*Dm{1})+norm(H{2}*Cm-Cm*Dm{2})+norm(H{3}*Cm-Cm*Dm{3});
disp('Transformation errors:');
disp(err);
assert(CheckMRAPRepresentation(H), 'MinimalRepFromMRAP did not return a valid MRAP representation!');
assert(size(H{2},1)==2&&err<10^-12, 'MinimalRepFromMRAP returned a MRAP which is non-similar to the input or has an unexpected size!');
disp('========================================')
disp('Testing BuTools function SamplesFromMAP')
disp('Input:');
disp('------');
D0 = [-0.17, 0, 0, 0.07; 0.01, -0.78, 0.03, 0.08; 0.22, 0.17, -1.1, 0.02; 0.04, 0.12, 0, -0.42];
disp('D0 = ');
disp(D0);
D1 = [0, 0.06, 0, 0.04; 0.04, 0.19, 0.21, 0.22; 0.22, 0.13, 0.15, 0.19; 0.05, 0, 0.17, 0.04];
disp('D1 = ');
disp(D1);
disp('Test:');
disp('-----');
disp('x = SamplesFromMAP(D0, D1, 10000);:');
x = SamplesFromMAP(D0, D1, 10000);
disp('mt = MarginalMomentsFromTrace(x, 3);:');
mt = MarginalMomentsFromTrace(x, 3);
disp('mt = ');
disp(mt);
disp('mm = MarginalMomentsFromMAP(D0, D1, 3);:');
mm = MarginalMomentsFromMAP(D0, D1, 3);
disp('mm = ');
disp(mm);
disp('========================================')
disp('Testing BuTools function SamplesFromMMAP')
disp('Input:');
disp('------');
D0 = [-1.78, 0.29; 0.07, -0.92];
disp('D0 = ');
disp(D0);
D1 = [0.15, 0.49; 0.23, 0.36];
disp('D1 = ');
disp(D1);
D2 = [0.11, 0.2; 0.01, 0];
disp('D2 = ');
disp(D2);
D3 = [0.14, 0.4; 0.11, 0.14];
disp('D3 = ');
disp(D3);
Dm = {D0, D1, D2, D3};
disp('Test:');
disp('-----');
disp('x = SamplesFromMMAP(Dm, 10000);:');
x = SamplesFromMMAP(Dm, 10000);
disp('mt = MarginalMomentsFromTrace(x(1:end, 1), 3);:');
mt = MarginalMomentsFromTrace(x(1:end, 1), 3);
disp('mt = ');
disp(mt);
disp('mm = MarginalMomentsFromMMAP(Dm, 3);:');
mm = MarginalMomentsFromMMAP(Dm, 3);
disp('mm = ');
disp(mm);

