ClearAll["Global`*"]
AppendTo[$Path,"/home/gabor/github/butools/Mathematica"];
<<BuTools`
Print["---BuTools: Fitting package test file---"//OutputForm];
Print["Enable the verbose messages with the BuToolsVerbose flag"//OutputForm];
BuTools`Verbose = True;
Print["Enable input parameter checking with the BuToolsCheckInput flag"//OutputForm];
BuTools`CheckInput = true;
On[Assert];
Print["========================================"]
Print["Testing BuTools function EmpiricalSquaredDifference"]
Print["Input:"//OutputForm];
Print["------"//OutputForm];
Print["tr = Flatten[Import[\"/home/gabor/github/butools/test/data/bctrace.iat\",\"CSV\"]];:"//OutputForm];
tr = Flatten[Import["/home/gabor/github/butools/test/data/bctrace.iat","CSV"]];
Print["intBounds = Array[# &, 50, {0, MarginalMomentsFromTrace[tr, 1][[1]]*4}];:"//OutputForm];
intBounds = Array[# &, 50, {0, MarginalMomentsFromTrace[tr, 1][[1]]*4}];
Print["{pdfTrX, pdfTrY} = PdfFromTrace[tr, intBounds];:"//OutputForm];
{pdfTrX, pdfTrY} = PdfFromTrace[tr, intBounds];
Print["{cdfTrX, cdfTrY} = CdfFromTrace[tr];:"//OutputForm];
{cdfTrX, cdfTrY} = CdfFromTrace[tr];
Print["step = Ceiling[Length[tr]/2000];:"//OutputForm];
step = Ceiling[Length[tr]/2000];
Print["cdfTrX = cdfTrX[[1;;Length[tr];;step]];:"//OutputForm];
cdfTrX = cdfTrX[[1;;Length[tr];;step]];
Print["cdfTrY = cdfTrY[[1;;Length[tr];;step]];:"//OutputForm];
cdfTrY = cdfTrY[[1;;Length[tr];;step]];
Print["{alpha, A} = APHFrom3Moments[MarginalMomentsFromTrace[tr, 3]];:"//OutputForm];
{alpha, A} = APHFrom3Moments[MarginalMomentsFromTrace[tr, 3]];
Print["{pdfPHX, pdfPHY} = IntervalPdfFromPH[alpha, A, intBounds];:"//OutputForm];
{pdfPHX, pdfPHY} = IntervalPdfFromPH[alpha, A, intBounds];
Print["cdfPHY = CdfFromPH[alpha, A, cdfTrX];:"//OutputForm];
cdfPHY = CdfFromPH[alpha, A, cdfTrX];
Print["Test:"//OutputForm];
Print["-----"//OutputForm];
Print["sqPdf = EmpiricalSquaredDifference[pdfTrY, pdfPHY, intBounds];:"//OutputForm];
sqPdf = EmpiricalSquaredDifference[pdfTrY, pdfPHY, intBounds];
Print["sqPdf = "//OutputForm];
Print[sqPdf];
Print["sqCdf = EmpiricalSquaredDifference[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];:"//OutputForm];
sqCdf = EmpiricalSquaredDifference[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];
Print["sqCdf = "//OutputForm];
Print[sqCdf];
Assert[sqPdf>=0, "Empirical squared difference is negative!"];
Assert[sqCdf>=0, "Empirical squared difference is negative!"];
Print["========================================"]
Print["Testing BuTools function EmpiricalRelativeEntropy"]
Print["Input:"//OutputForm];
Print["------"//OutputForm];
Print["tr = Flatten[Import[\"/home/gabor/github/butools/test/data/bctrace.iat\",\"CSV\"]];:"//OutputForm];
tr = Flatten[Import["/home/gabor/github/butools/test/data/bctrace.iat","CSV"]];
Print["intBounds = Array[# &, 50, {0, MarginalMomentsFromTrace[tr, 1][[1]]*4}];:"//OutputForm];
intBounds = Array[# &, 50, {0, MarginalMomentsFromTrace[tr, 1][[1]]*4}];
Print["{pdfTrX, pdfTrY} = PdfFromTrace[tr, intBounds];:"//OutputForm];
{pdfTrX, pdfTrY} = PdfFromTrace[tr, intBounds];
Print["{cdfTrX, cdfTrY} = CdfFromTrace[tr];:"//OutputForm];
{cdfTrX, cdfTrY} = CdfFromTrace[tr];
Print["step = Ceiling[Length[tr]/2000];:"//OutputForm];
step = Ceiling[Length[tr]/2000];
Print["cdfTrX = cdfTrX[[1;;Length[tr];;step]];:"//OutputForm];
cdfTrX = cdfTrX[[1;;Length[tr];;step]];
Print["cdfTrY = cdfTrY[[1;;Length[tr];;step]];:"//OutputForm];
cdfTrY = cdfTrY[[1;;Length[tr];;step]];
Print["{alpha, A} = APHFrom3Moments[MarginalMomentsFromTrace[tr, 3]];:"//OutputForm];
{alpha, A} = APHFrom3Moments[MarginalMomentsFromTrace[tr, 3]];
Print["{pdfPHX, pdfPHY} = IntervalPdfFromPH[alpha, A, intBounds];:"//OutputForm];
{pdfPHX, pdfPHY} = IntervalPdfFromPH[alpha, A, intBounds];
Print["cdfPHY = CdfFromPH[alpha, A, cdfTrX];:"//OutputForm];
cdfPHY = CdfFromPH[alpha, A, cdfTrX];
Print["Test:"//OutputForm];
Print["-----"//OutputForm];
Print["rePdf = EmpiricalRelativeEntropy[pdfTrY, pdfPHY, intBounds];:"//OutputForm];
rePdf = EmpiricalRelativeEntropy[pdfTrY, pdfPHY, intBounds];
Print["rePdf = "//OutputForm];
Print[rePdf];
Print["reCdf = EmpiricalRelativeEntropy[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];:"//OutputForm];
reCdf = EmpiricalRelativeEntropy[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];
Print["reCdf = "//OutputForm];
Print[reCdf];
Assert[rePdf>=0, "Empirical relative entropy is negative!"];
Assert[reCdf>=0, "Empirical relative entropy is negative!"];
Print["========================================"]
Print["Testing BuTools function LikelihoodFromTrace"]
Print["Input:"//OutputForm];
Print["------"//OutputForm];
Print["tr = Flatten[Import[\"/home/gabor/github/butools/test/data/bctrace.iat\",\"CSV\"]];:"//OutputForm];
tr = Flatten[Import["/home/gabor/github/butools/test/data/bctrace.iat","CSV"]];
Print["{alpha, A} = APHFrom3Moments[MarginalMomentsFromTrace[tr, 3]];:"//OutputForm];
{alpha, A} = APHFrom3Moments[MarginalMomentsFromTrace[tr, 3]];
Print["{D0, D1} = MAPFromFewMomentsAndCorrelations[MarginalMomentsFromTrace[tr, 3], LagCorrelationsFromTrace[tr, 1][[1]]];:"//OutputForm];
{D0, D1} = MAPFromFewMomentsAndCorrelations[MarginalMomentsFromTrace[tr, 3], LagCorrelationsFromTrace[tr, 1][[1]]];
Print["Test:"//OutputForm];
Print["-----"//OutputForm];
Print["logliPH = LikelihoodFromTrace[tr, alpha, A];:"//OutputForm];
logliPH = LikelihoodFromTrace[tr, alpha, A];
Print["logliPH = "//OutputForm];
Print[logliPH];
Print["logliMAP = LikelihoodFromTrace[tr, D0, D1];:"//OutputForm];
logliMAP = LikelihoodFromTrace[tr, D0, D1];
Print["logliMAP = "//OutputForm];
Print[logliMAP];
Print["========================================"]
Print["Testing BuTools function SquaredDifference"]
Print["Input:"//OutputForm];
Print["------"//OutputForm];
Print["tr = Flatten[Import[\"/home/gabor/github/butools/test/data/bctrace.iat\",\"CSV\"]];:"//OutputForm];
tr = Flatten[Import["/home/gabor/github/butools/test/data/bctrace.iat","CSV"]];
Print["trAcf = LagCorrelationsFromTrace[tr, 10];:"//OutputForm];
trAcf = LagCorrelationsFromTrace[tr, 10];
Print["trAcf = "//OutputForm];
Print[trAcf];
Print["{D0, D1} = MAPFromFewMomentsAndCorrelations[MarginalMomentsFromTrace[tr, 3], trAcf[[1]]];:"//OutputForm];
{D0, D1} = MAPFromFewMomentsAndCorrelations[MarginalMomentsFromTrace[tr, 3], trAcf[[1]]];
Print["mapAcf = LagCorrelationsFromMAP[D0, D1, 10];:"//OutputForm];
mapAcf = LagCorrelationsFromMAP[D0, D1, 10];
Print["mapAcf = "//OutputForm];
Print[mapAcf];
Print["Test:"//OutputForm];
Print["-----"//OutputForm];
Print["sqAcf = SquaredDifference[mapAcf, trAcf];:"//OutputForm];
sqAcf = SquaredDifference[mapAcf, trAcf];
Print["sqAcf = "//OutputForm];
Print[sqAcf];
Assert[sqAcf>=0, "Squared difference is negative!"];
Print["========================================"]
Print["Testing BuTools function RelativeEntropy"]
Print["Input:"//OutputForm];
Print["------"//OutputForm];
Print["tr = Flatten[Import[\"/home/gabor/github/butools/test/data/bctrace.iat\",\"CSV\"]];:"//OutputForm];
tr = Flatten[Import["/home/gabor/github/butools/test/data/bctrace.iat","CSV"]];
Print["trAcf = LagCorrelationsFromTrace[tr, 10];:"//OutputForm];
trAcf = LagCorrelationsFromTrace[tr, 10];
Print["trAcf = "//OutputForm];
Print[trAcf];
Print["{D0, D1} = MAPFromFewMomentsAndCorrelations[MarginalMomentsFromTrace[tr, 3], trAcf[[1]]];:"//OutputForm];
{D0, D1} = MAPFromFewMomentsAndCorrelations[MarginalMomentsFromTrace[tr, 3], trAcf[[1]]];
Print["mapAcf = LagCorrelationsFromMAP[D0, D1, 10];:"//OutputForm];
mapAcf = LagCorrelationsFromMAP[D0, D1, 10];
Print["mapAcf = "//OutputForm];
Print[mapAcf];
Print["Test:"//OutputForm];
Print["-----"//OutputForm];
Print["reAcf = RelativeEntropy[mapAcf, trAcf];:"//OutputForm];
reAcf = RelativeEntropy[mapAcf, trAcf];
Print["reAcf = "//OutputForm];
Print[reAcf];
Assert[reAcf>=0, "Relative entropy is negative!"];
Print["========================================"]
Print["Testing BuTools function PHFromTrace"]
Print["Input:"//OutputForm];
Print["------"//OutputForm];
Print["tr = Flatten[Import[\"/home/gabor/github/butools/test/data/bctrace.iat\",\"CSV\"]];:"//OutputForm];
tr = Flatten[Import["/home/gabor/github/butools/test/data/bctrace.iat","CSV"]];
Print["Test:"//OutputForm];
Print["-----"//OutputForm];
Print["{alpha, A, logli} = PHFromTrace[tr, 5];:"//OutputForm];
{alpha, A, logli} = PHFromTrace[tr, 5];
Print["alpha = "//OutputForm];
Print[alpha];
Print["A = "//OutputForm];
Print[A];
Print["logli = "//OutputForm];
Print[logli];
Print["logli = LikelihoodFromTrace[tr, alpha, A];:"//OutputForm];
logli = LikelihoodFromTrace[tr, alpha, A];
Print["logli = "//OutputForm];
Print[logli];
Print["intBounds = Array[# &, 50, {0, MarginalMomentsFromTrace[tr, 1][[1]]*4}];:"//OutputForm];
intBounds = Array[# &, 50, {0, MarginalMomentsFromTrace[tr, 1][[1]]*4}];
Print["{pdfTrX, pdfTrY} = PdfFromTrace[tr, intBounds];:"//OutputForm];
{pdfTrX, pdfTrY} = PdfFromTrace[tr, intBounds];
Print["{pdfPHX, pdfPHY} = IntervalPdfFromPH[alpha, A, intBounds];:"//OutputForm];
{pdfPHX, pdfPHY} = IntervalPdfFromPH[alpha, A, intBounds];
Print["sqPdf = EmpiricalSquaredDifference[pdfTrY, pdfPHY, intBounds];:"//OutputForm];
sqPdf = EmpiricalSquaredDifference[pdfTrY, pdfPHY, intBounds];
Print["sqPdf = "//OutputForm];
Print[sqPdf];
Print["rePdf = EmpiricalRelativeEntropy[pdfTrY, pdfPHY, intBounds];:"//OutputForm];
rePdf = EmpiricalRelativeEntropy[pdfTrY, pdfPHY, intBounds];
Print["rePdf = "//OutputForm];
Print[rePdf];
Print["{cdfTrX, cdfTrY} = CdfFromTrace[tr];:"//OutputForm];
{cdfTrX, cdfTrY} = CdfFromTrace[tr];
Print["step = Ceiling[Length[tr]/2000];:"//OutputForm];
step = Ceiling[Length[tr]/2000];
Print["cdfTrX = cdfTrX[[1;;Length[tr];;step]];:"//OutputForm];
cdfTrX = cdfTrX[[1;;Length[tr];;step]];
Print["cdfTrY = cdfTrY[[1;;Length[tr];;step]];:"//OutputForm];
cdfTrY = cdfTrY[[1;;Length[tr];;step]];
Print["cdfPHY = CdfFromPH[alpha, A, cdfTrX];:"//OutputForm];
cdfPHY = CdfFromPH[alpha, A, cdfTrX];
Print["sqCdf = EmpiricalSquaredDifference[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];:"//OutputForm];
sqCdf = EmpiricalSquaredDifference[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];
Print["sqCdf = "//OutputForm];
Print[sqCdf];
Print["reCdf = EmpiricalRelativeEntropy[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];:"//OutputForm];
reCdf = EmpiricalRelativeEntropy[cdfTrY[[1;;-2]], cdfPHY[[1;;-2]], cdfTrX];
Print["reCdf = "//OutputForm];
Print[reCdf];
Print["========================================"]
Print["Testing BuTools function MAPFromTrace"]
Print["Input:"//OutputForm];
Print["------"//OutputForm];
Print["tr = Flatten[Import[\"/home/gabor/github/butools/test/data/bctrace.iat\",\"CSV\"]];:"//OutputForm];
tr = Flatten[Import["/home/gabor/github/butools/test/data/bctrace.iat","CSV"]];
Print["tr = tr[[1;;10000]];:"//OutputForm];
tr = tr[[1;;10000]];
Print["Test:"//OutputForm];
Print["-----"//OutputForm];
Print["{D0, D1, logli} = MAPFromTrace[tr, 5];:"//OutputForm];
{D0, D1, logli} = MAPFromTrace[tr, 5];
Print["D0 = "//OutputForm];
Print[D0];
Print["D1 = "//OutputForm];
Print[D1];
Print["logli = "//OutputForm];
Print[logli];
Print["logli = LikelihoodFromTrace[tr, D0, D1];:"//OutputForm];
logli = LikelihoodFromTrace[tr, D0, D1];
Print["logli = "//OutputForm];
Print[logli];
Print["trAcf = LagCorrelationsFromTrace[tr, 10];:"//OutputForm];
trAcf = LagCorrelationsFromTrace[tr, 10];
Print["trAcf = "//OutputForm];
Print[trAcf];
Print["mapAcf = LagCorrelationsFromMAP[D0, D1, 10];:"//OutputForm];
mapAcf = LagCorrelationsFromMAP[D0, D1, 10];
Print["mapAcf = "//OutputForm];
Print[mapAcf];
Print["sqAcf = SquaredDifference[mapAcf, trAcf];:"//OutputForm];
sqAcf = SquaredDifference[mapAcf, trAcf];
Print["sqAcf = "//OutputForm];
Print[sqAcf];
Print["reAcf = RelativeEntropy[mapAcf, trAcf];:"//OutputForm];
reAcf = RelativeEntropy[mapAcf, trAcf];
Print["reAcf = "//OutputForm];
Print[reAcf];
