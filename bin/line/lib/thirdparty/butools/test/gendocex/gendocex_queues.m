clear all
run('/home/gabor/project/butools/Matlab/BuToolsInit.m')

disp('---BuTools: Queues package test file---');
disp('Enable the verbose messages with the BuToolsVerbose flag');
global BuToolsVerbose;
BuToolsVerbose = true;
disp('Enable input parameter checking with the BuToolsCheckInput flag');
global BuToolsCheckInput;
BuToolsCheckInput = true;
global BuToolsCheckPrecision;
format short g;
format compact
delete('/home/gabor/project/butools/test/docex/Queues_matlab.docex');
diary('/home/gabor/project/butools/test/docex/Queues_matlab.docex');
disp('=== QBDQueue ===')
disp('>>> B = [6., 1., 0.; 0., 4., 1.; 2., 0., 0.];');
B = [6., 1., 0.; 0., 4., 1.; 2., 0., 0.];
disp('>>> F = [0., 1., 1.; 5., 0., 0.; 1., 3., 0.];');
F = [0., 1., 1.; 5., 0., 0.; 1., 3., 0.];
disp('>>> L = [-14., 3., 2.; 0., -14., 4.; 3., 1., -10.];');
L = [-14., 3., 2.; 0., -14., 4.; 3., 1., -10.];
disp('>>> L0 = L+B;');
L0 = L+B;
disp('>>> disp(L0);');
disp(L0);
BuToolsVerbose = false;
[pi0, R] = QBDSolve(B, L, F, L0);
lambd = sum(pi0*inv(eye(size(R,1))-R)*F);
BuToolsVerbose = true;
disp('>>> [ncd, ncm] = QBDQueue(B, L, F, L0, ''ncDistr'', 11, ''ncMoms'', 5);');
[ncd, ncm] = QBDQueue(B, L, F, L0, 'ncDistr', 11, 'ncMoms', 5);
disp('>>> disp(ncd);');
disp(ncd);
disp('>>> disp(ncm);');
disp(ncm);
disp('>>> [alphap, Ap] = QBDQueue(B, L, F, L0, ''ncDistrDPH'');');
[alphap, Ap] = QBDQueue(B, L, F, L0, 'ncDistrDPH');
disp('>>> disp(alphap);');
disp(alphap);
disp('>>> disp(Ap);');
disp(Ap);
disp('>>> [alpha, A] = QBDQueue(B, L, F, L0, ''ncDistrMG'');');
[alpha, A] = QBDQueue(B, L, F, L0, 'ncDistrMG');
disp('>>> disp(alpha);');
disp(alpha);
disp('>>> disp(A);');
disp(A);
disp('>>> ncdFromDPH = PmfFromDPH(alphap, Ap, (0:1:10));');
ncdFromDPH = PmfFromDPH(alphap, Ap, (0:1:10));
disp('>>> disp(ncdFromDPH);');
disp(ncdFromDPH);
disp('>>> ncmFromMG = MomentsFromMG(alpha, A, 5);');
ncmFromMG = MomentsFromMG(alpha, A, 5);
disp('>>> disp(ncmFromMG);');
disp(ncmFromMG);
disp('>>> [std, stm] = QBDQueue(B, L, F, L0, ''stDistr'', (0.:0.1:1.), ''stMoms'', 5);');
[std, stm] = QBDQueue(B, L, F, L0, 'stDistr', (0.:0.1:1.), 'stMoms', 5);
disp('>>> disp(std);');
disp(std);
disp('>>> disp(stm);');
disp(stm);
disp('>>> [betap, Bp] = QBDQueue(B, L, F, L0, ''stDistrPH'');');
[betap, Bp] = QBDQueue(B, L, F, L0, 'stDistrPH');
disp('>>> disp(betap);');
disp(betap);
disp('>>> disp(Bp);');
disp(Bp);
disp('>>> [beta, B] = QBDQueue(B, L, F, L0, ''stDistrME'');');
[beta, B] = QBDQueue(B, L, F, L0, 'stDistrME');
disp('>>> disp(beta);');
disp(beta);
disp('>>> disp(B);');
disp(B);
disp('>>> stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));');
stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));
disp('>>> disp(stdFromPH);');
disp(stdFromPH);
disp('>>> stmFromME = MomentsFromME(beta, B, 5);');
stmFromME = MomentsFromME(beta, B, 5);
disp('>>> disp(stmFromME);');
disp(stmFromME);
disp('=== MAPMAP1 ===')
disp('>>> D0 = [-8., 1., 2.; 0., -6., 4.; 3., 0., -3.];');
D0 = [-8., 1., 2.; 0., -6., 4.; 3., 0., -3.];
disp('>>> D1 = [4., 1., 0.; 0., 2., 0.; 0., 0., 0.];');
D1 = [4., 1., 0.; 0., 2., 0.; 0., 0., 0.];
disp('>>> S0 = [-10., 4.; 0., -7.];');
S0 = [-10., 4.; 0., -7.];
disp('>>> S1 = [5., 1.; 4., 3.];');
S1 = [5., 1.; 4., 3.];
lambd = 1./MarginalMomentsFromMAP(D0, D1, 1);
disp('>>> [ncd, ncm] = MAPMAP1(D0, D1, S0, S1, ''ncDistr'', 11, ''ncMoms'', 5);');
[ncd, ncm] = MAPMAP1(D0, D1, S0, S1, 'ncDistr', 11, 'ncMoms', 5);
disp('>>> disp(ncd);');
disp(ncd);
disp('>>> disp(ncm);');
disp(ncm);
disp('>>> [alphap, Ap] = MAPMAP1(D0, D1, S0, S1, ''ncDistrDPH'');');
[alphap, Ap] = MAPMAP1(D0, D1, S0, S1, 'ncDistrDPH');
disp('>>> disp(alphap);');
disp(alphap);
disp('>>> disp(Ap);');
disp(Ap);
disp('>>> [alpha, A] = MAPMAP1(D0, D1, S0, S1, ''ncDistrMG'');');
[alpha, A] = MAPMAP1(D0, D1, S0, S1, 'ncDistrMG');
disp('>>> disp(alpha);');
disp(alpha);
disp('>>> disp(A);');
disp(A);
disp('>>> ncdFromDPH = PmfFromDPH(alphap, Ap, (0:1:10));');
ncdFromDPH = PmfFromDPH(alphap, Ap, (0:1:10));
disp('>>> disp(ncdFromDPH);');
disp(ncdFromDPH);
disp('>>> ncmFromMG = MomentsFromMG(alpha, A, 5);');
ncmFromMG = MomentsFromMG(alpha, A, 5);
disp('>>> disp(ncmFromMG);');
disp(ncmFromMG);
disp('>>> [std, stm] = MAPMAP1(D0, D1, S0, S1, ''stDistr'', (0.:0.1:1.), ''stMoms'', 5);');
[std, stm] = MAPMAP1(D0, D1, S0, S1, 'stDistr', (0.:0.1:1.), 'stMoms', 5);
disp('>>> disp(std);');
disp(std);
disp('>>> disp(stm);');
disp(stm);
disp('>>> [betap, Bp] = MAPMAP1(D0, D1, S0, S1, ''stDistrPH'');');
[betap, Bp] = MAPMAP1(D0, D1, S0, S1, 'stDistrPH');
disp('>>> disp(betap);');
disp(betap);
disp('>>> disp(Bp);');
disp(Bp);
disp('>>> [beta, B] = MAPMAP1(D0, D1, S0, S1, ''stDistrME'');');
[beta, B] = MAPMAP1(D0, D1, S0, S1, 'stDistrME');
disp('>>> disp(beta);');
disp(beta);
disp('>>> disp(B);');
disp(B);
disp('>>> stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));');
stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));
disp('>>> disp(stdFromPH);');
disp(stdFromPH);
disp('>>> stmFromME = MomentsFromME(beta, B, 5);');
stmFromME = MomentsFromME(beta, B, 5);
disp('>>> disp(stmFromME);');
disp(stmFromME);
IA = eye(size(D0,1));
IS = eye(size(S0,1));
BuToolsVerbose = false;
[gamma, G] = QBDQueue(kron(IA, S1), kron(D0, IS)+kron(IA, S0), kron(D1, IS), kron(D0, IS), 'stDistrME');
BuToolsVerbose = true;
msmall = MomentsFromME(beta, B, 5);
mlarge = MomentsFromME(gamma, G, 5);
disp('>>> delta = [0.5,0.1,0.4];');
delta = [0.5,0.1,0.4];
disp('>>> Dm = [-8., 1., 2.; 0., -6., 4.; 3., 0., -3.];');
Dm = [-8., 1., 2.; 0., -6., 4.; 3., 0., -3.];
disp('>>> sigma = [0.2,0.7,0.1];');
sigma = [0.2,0.7,0.1];
disp('>>> S = [-10., 4., 0.; 5., -7., 2.; 1., 2., -8.];');
S = [-10., 4., 0.; 5., -7., 2.; 1., 2., -8.];
disp('>>> D0 = Dm;');
D0 = Dm;
disp('>>> D1 = sum(-Dm,2)*delta;');
D1 = sum(-Dm,2)*delta;
disp('>>> S0 = S;');
S0 = S;
disp('>>> S1 = sum(-S,2)*sigma;');
S1 = sum(-S,2)*sigma;
lambd = 1./MarginalMomentsFromMAP(D0, D1, 1);
disp('>>> [ncd, ncm] = MAPMAP1(D0, D1, S0, S1, ''ncDistr'', 11, ''ncMoms'', 5);');
[ncd, ncm] = MAPMAP1(D0, D1, S0, S1, 'ncDistr', 11, 'ncMoms', 5);
disp('>>> disp(ncd);');
disp(ncd);
disp('>>> disp(ncm);');
disp(ncm);
disp('>>> [alphap, Ap] = MAPMAP1(D0, D1, S0, S1, ''ncDistrDPH'');');
[alphap, Ap] = MAPMAP1(D0, D1, S0, S1, 'ncDistrDPH');
disp('>>> disp(alphap);');
disp(alphap);
disp('>>> disp(Ap);');
disp(Ap);
disp('>>> [alpha, A] = MAPMAP1(D0, D1, S0, S1, ''ncDistrMG'');');
[alpha, A] = MAPMAP1(D0, D1, S0, S1, 'ncDistrMG');
disp('>>> disp(alpha);');
disp(alpha);
disp('>>> disp(A);');
disp(A);
disp('>>> ncdFromDPH = PmfFromDPH(alphap, Ap, (0:1:10));');
ncdFromDPH = PmfFromDPH(alphap, Ap, (0:1:10));
disp('>>> disp(ncdFromDPH);');
disp(ncdFromDPH);
disp('>>> ncmFromMG = MomentsFromMG(alpha, A, 5);');
ncmFromMG = MomentsFromMG(alpha, A, 5);
disp('>>> disp(ncmFromMG);');
disp(ncmFromMG);
disp('>>> [std, stm] = MAPMAP1(D0, D1, S0, S1, ''stDistr'', (0.:0.1:1.), ''stMoms'', 5);');
[std, stm] = MAPMAP1(D0, D1, S0, S1, 'stDistr', (0.:0.1:1.), 'stMoms', 5);
disp('>>> disp(std);');
disp(std);
disp('>>> disp(stm);');
disp(stm);
disp('>>> [betap, Bp] = MAPMAP1(D0, D1, S0, S1, ''stDistrPH'');');
[betap, Bp] = MAPMAP1(D0, D1, S0, S1, 'stDistrPH');
disp('>>> disp(betap);');
disp(betap);
disp('>>> disp(Bp);');
disp(Bp);
disp('>>> [beta, B] = MAPMAP1(D0, D1, S0, S1, ''stDistrME'');');
[beta, B] = MAPMAP1(D0, D1, S0, S1, 'stDistrME');
disp('>>> disp(beta);');
disp(beta);
disp('>>> disp(B);');
disp(B);
disp('>>> stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));');
stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));
disp('>>> disp(stdFromPH);');
disp(stdFromPH);
disp('>>> stmFromME = MomentsFromME(beta, B, 5);');
stmFromME = MomentsFromME(beta, B, 5);
disp('>>> disp(stmFromME);');
disp(stmFromME);
IA = eye(size(D0,1));
IS = eye(size(S0,1));
BuToolsVerbose = false;
[gamma, G] = QBDQueue(kron(IA, S1), kron(D0, IS)+kron(IA, S0), kron(D1, IS), kron(D0, IS), 'stDistrME');
BuToolsVerbose = true;
msmall = MomentsFromME(beta, B, 5);
mlarge = MomentsFromME(gamma, G, 5);
disp('=== MMAPPH1PRPR ===')
disp('>>> D0 = [-5.49, 0., 1.15, 0.; 0., -2.29, 0., 0.; 0., 0.08, -1.32, 0.; 0.72, 1.17, 0.7, -7.07];');
D0 = [-5.49, 0., 1.15, 0.; 0., -2.29, 0., 0.; 0., 0.08, -1.32, 0.; 0.72, 1.17, 0.7, -7.07];
disp('>>> D1 = [0.25, 0.38, 0.64, 0.; 0., 0., 0., 1.09; 0., 1.24, 0., 0.; 0.37, 0., 0., 0.];');
D1 = [0.25, 0.38, 0.64, 0.; 0., 0., 0., 1.09; 0., 1.24, 0., 0.; 0.37, 0., 0., 0.];
disp('>>> D2 = [0.3, 1.0, 0., 0.48; 0., 0.2, 0., 0.; 0., 0., 0., 0.; 0.61, 0., 0., 0.2];');
D2 = [0.3, 1.0, 0., 0.48; 0., 0.2, 0., 0.; 0., 0., 0., 0.; 0.61, 0., 0., 0.2];
disp('>>> D3 = [0., 0.98, 0., 0.31; 0., 0., 1.0, 0.; 0., 0., 0., 0.; 1.1, 0.84, 0.33, 1.03];');
D3 = [0., 0.98, 0., 0.31; 0., 0., 1.0, 0.; 0., 0., 0., 0.; 1.1, 0.84, 0.33, 1.03];
disp('>>> sigma3 = [0.83333,0.11404,0.05263];');
sigma3 = [0.83333,0.11404,0.05263];
disp('>>> S3 = [-3., 0., 0.; 0.73077, -0.73077, 0.; 0., 0.5, -0.5];');
S3 = [-3., 0., 0.; 0.73077, -0.73077, 0.; 0., 0.5, -0.5];
disp('>>> sigma2 = [1.];');
sigma2 = [1.];
disp('>>> S2 = [-2.];');
S2 = [-2.];
disp('>>> sigma1 = [0.25,0.75];');
sigma1 = [0.25,0.75];
disp('>>> S1 = [-2.5, 2.5; 0., -10.];');
S1 = [-2.5, 2.5; 0., -10.];
disp('>>> [ncm1, ncd1, ncm2, ncd2, ncm3, ncd3] = MMAPPH1PRPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''ncMoms'', 3, ''ncDistr'', 500);');
[ncm1, ncd1, ncm2, ncd2, ncm3, ncd3] = MMAPPH1PRPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'ncMoms', 3, 'ncDistr', 500);
momFromDistr1 = ncd1*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
momFromDistr2 = ncd2*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
momFromDistr3 = ncd3*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
disp('>>> distrPoints = [1., 5., 10.];');
distrPoints = [1., 5., 10.];
disp('>>> [stm1, std1, stm2, std2, stm3, std3] = MMAPPH1PRPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''stMoms'', 3, ''stDistr'', distrPoints);');
[stm1, std1, stm2, std2, stm3, std3] = MMAPPH1PRPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'stMoms', 3, 'stDistr', distrPoints);
disp('>>> disp(stm1);');
disp(stm1);
disp('>>> disp(std1);');
disp(std1);
disp('>>> disp(stm2);');
disp(stm2);
disp('>>> disp(std2);');
disp(std2);
disp('>>> disp(stm3);');
disp(stm3);
disp('>>> disp(std3);');
disp(std3);
lambda1 = 1./MarginalMomentsFromMAP(D0+D2+D3, D1, 1);
lambda2 = 1./MarginalMomentsFromMAP(D0+D1+D3, D2, 1);
lambda3 = 1./MarginalMomentsFromMAP(D0+D1+D2, D3, 1);
disp('=== MMAPPH1NPPR ===')
disp('>>> D0 = [-5.49, 0., 1.15, 0.; 0., -2.29, 0., 0.; 0., 0.08, -1.32, 0.; 0.72, 1.17, 0.7, -7.07];');
D0 = [-5.49, 0., 1.15, 0.; 0., -2.29, 0., 0.; 0., 0.08, -1.32, 0.; 0.72, 1.17, 0.7, -7.07];
disp('>>> D1 = [0.25, 0.38, 0.64, 0.; 0., 0., 0., 1.09; 0., 1.24, 0., 0.; 0.37, 0., 0., 0.];');
D1 = [0.25, 0.38, 0.64, 0.; 0., 0., 0., 1.09; 0., 1.24, 0., 0.; 0.37, 0., 0., 0.];
disp('>>> D2 = [0.3, 1.0, 0., 0.48; 0., 0.2, 0., 0.; 0., 0., 0., 0.; 0.61, 0., 0., 0.2];');
D2 = [0.3, 1.0, 0., 0.48; 0., 0.2, 0., 0.; 0., 0., 0., 0.; 0.61, 0., 0., 0.2];
disp('>>> D3 = [0., 0.98, 0., 0.31; 0., 0., 1.0, 0.; 0., 0., 0., 0.; 1.1, 0.84, 0.33, 1.03];');
D3 = [0., 0.98, 0., 0.31; 0., 0., 1.0, 0.; 0., 0., 0., 0.; 1.1, 0.84, 0.33, 1.03];
disp('>>> sigma3 = [0.83333,0.11404,0.05263];');
sigma3 = [0.83333,0.11404,0.05263];
disp('>>> S3 = [-3., 0., 0.; 0.73077, -0.73077, 0.; 0., 0.5, -0.5];');
S3 = [-3., 0., 0.; 0.73077, -0.73077, 0.; 0., 0.5, -0.5];
disp('>>> sigma2 = [1.];');
sigma2 = [1.];
disp('>>> S2 = [-2.];');
S2 = [-2.];
disp('>>> sigma1 = [0.25,0.75];');
sigma1 = [0.25,0.75];
disp('>>> S1 = [-2.5, 2.5; 0., -10.];');
S1 = [-2.5, 2.5; 0., -10.];
disp('>>> [ncm1, ncd1, ncm2, ncd2, ncm3, ncd3] = MMAPPH1NPPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''ncMoms'', 3, ''ncDistr'', 500);');
[ncm1, ncd1, ncm2, ncd2, ncm3, ncd3] = MMAPPH1NPPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'ncMoms', 3, 'ncDistr', 500);
momFromDistr1 = ncd1*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
momFromDistr2 = ncd2*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
momFromDistr3 = ncd3*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
disp('>>> distrPoints = [1., 5., 10.];');
distrPoints = [1., 5., 10.];
disp('>>> [stm1, std1, stm2, std2, stm3, std3] = MMAPPH1NPPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''stMoms'', 3, ''stDistr'', distrPoints);');
[stm1, std1, stm2, std2, stm3, std3] = MMAPPH1NPPR({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'stMoms', 3, 'stDistr', distrPoints);
disp('>>> disp(stm1);');
disp(stm1);
disp('>>> disp(std1);');
disp(std1);
disp('>>> disp(stm2);');
disp(stm2);
disp('>>> disp(std2);');
disp(std2);
disp('>>> disp(stm3);');
disp(stm3);
disp('>>> disp(std3);');
disp(std3);
lambda1 = 1./MarginalMomentsFromMAP(D0+D2+D3, D1, 1);
lambda2 = 1./MarginalMomentsFromMAP(D0+D1+D3, D2, 1);
lambda3 = 1./MarginalMomentsFromMAP(D0+D1+D2, D3, 1);
disp('=== MMAPPH1FCFS ===')
disp('>>> D0 = [-5.49, 0., 1.15, 0.; 0., -2.29, 0., 0.; 0., 0.08, -1.32, 0.; 0.72, 1.17, 0.7, -7.07];');
D0 = [-5.49, 0., 1.15, 0.; 0., -2.29, 0., 0.; 0., 0.08, -1.32, 0.; 0.72, 1.17, 0.7, -7.07];
disp('>>> D1 = [0.25, 0.38, 0.64, 0.; 0., 0., 0., 1.09; 0., 1.24, 0., 0.; 0.37, 0., 0., 0.];');
D1 = [0.25, 0.38, 0.64, 0.; 0., 0., 0., 1.09; 0., 1.24, 0., 0.; 0.37, 0., 0., 0.];
disp('>>> D2 = [0.3, 1.0, 0., 0.48; 0., 0.2, 0., 0.; 0., 0., 0., 0.; 0.61, 0., 0., 0.2];');
D2 = [0.3, 1.0, 0., 0.48; 0., 0.2, 0., 0.; 0., 0., 0., 0.; 0.61, 0., 0., 0.2];
disp('>>> D3 = [0., 0.98, 0., 0.31; 0., 0., 1.0, 0.; 0., 0., 0., 0.; 1.1, 0.84, 0.33, 1.03];');
D3 = [0., 0.98, 0., 0.31; 0., 0., 1.0, 0.; 0., 0., 0., 0.; 1.1, 0.84, 0.33, 1.03];
disp('>>> sigma3 = [0.83333,0.11404,0.05263];');
sigma3 = [0.83333,0.11404,0.05263];
disp('>>> S3 = [-3., 0., 0.; 0.73077, -0.73077, 0.; 0., 0.5, -0.5];');
S3 = [-3., 0., 0.; 0.73077, -0.73077, 0.; 0., 0.5, -0.5];
disp('>>> sigma2 = [1.];');
sigma2 = [1.];
disp('>>> S2 = [-2.];');
S2 = [-2.];
disp('>>> sigma1 = [0.25,0.75];');
sigma1 = [0.25,0.75];
disp('>>> S1 = [-2.5, 2.5; 0., -10.];');
S1 = [-2.5, 2.5; 0., -10.];
disp('>>> [ncm1, ncd1, ncm2, ncd2, ncm3, ncd3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''ncMoms'', 3, ''ncDistr'', 500);');
[ncm1, ncd1, ncm2, ncd2, ncm3, ncd3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'ncMoms', 3, 'ncDistr', 500);
momFromDistr1 = ncd1*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
momFromDistr2 = ncd2*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
momFromDistr3 = ncd3*[(0:1:499);(0:1:499).^2;(0:1:499).^3]';
disp('>>> distrPoints = [1., 5., 10.];');
distrPoints = [1., 5., 10.];
disp('>>> [stm1, std1, stm2, std2, stm3, std3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''stMoms'', 3, ''stDistr'', distrPoints);');
[stm1, std1, stm2, std2, stm3, std3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'stMoms', 3, 'stDistr', distrPoints);
disp('>>> disp(stm1);');
disp(stm1);
disp('>>> disp(std1);');
disp(std1);
disp('>>> disp(stm2);');
disp(stm2);
disp('>>> disp(std2);');
disp(std2);
disp('>>> disp(stm3);');
disp(stm3);
disp('>>> disp(std3);');
disp(std3);
disp('>>> [betap1, Bp1, betap2, Bp2, betap3, Bp3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''stDistrPH'');');
[betap1, Bp1, betap2, Bp2, betap3, Bp3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'stDistrPH');
disp('>>> [beta1, B1, beta2, B2, beta3, B3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, ''stDistrME'');');
[beta1, B1, beta2, B2, beta3, B3] = MMAPPH1FCFS({D0, D1, D2, D3}, {sigma1, sigma2, sigma3}, {S1, S2, S3}, 'stDistrME');
disp('>>> stdFromPH1 = CdfFromPH(betap1, Bp1, distrPoints);');
stdFromPH1 = CdfFromPH(betap1, Bp1, distrPoints);
disp('>>> disp(stdFromPH1);');
disp(stdFromPH1);
disp('>>> stmFromME1 = MomentsFromME(beta1, B1, 3);');
stmFromME1 = MomentsFromME(beta1, B1, 3);
disp('>>> disp(stmFromME1);');
disp(stmFromME1);
disp('>>> stdFromPH2 = CdfFromPH(betap2, Bp2, distrPoints);');
stdFromPH2 = CdfFromPH(betap2, Bp2, distrPoints);
disp('>>> disp(stdFromPH2);');
disp(stdFromPH2);
disp('>>> stmFromME2 = MomentsFromME(beta2, B2, 3);');
stmFromME2 = MomentsFromME(beta2, B2, 3);
disp('>>> disp(stmFromME2);');
disp(stmFromME2);
disp('>>> stdFromPH3 = CdfFromPH(betap3, Bp3, distrPoints);');
stdFromPH3 = CdfFromPH(betap3, Bp3, distrPoints);
disp('>>> disp(stdFromPH3);');
disp(stdFromPH3);
disp('>>> stmFromME3 = MomentsFromME(beta3, B3, 3);');
stmFromME3 = MomentsFromME(beta3, B3, 3);
disp('>>> disp(stmFromME3);');
disp(stmFromME3);
lambda1 = 1./MarginalMomentsFromMAP(D0+D2+D3, D1, 1);
lambda2 = 1./MarginalMomentsFromMAP(D0+D1+D3, D2, 1);
lambda3 = 1./MarginalMomentsFromMAP(D0+D1+D2, D3, 1);
disp('=== FluidQueue ===')
disp('>>> Q = [-9., 2., 4., 0., 1., 2.; 6., -25., 5., 3., 7., 4.; 1., 3., -4., 0., 0., 0.; 0., 0., 0., -8., 3., 5.; 7., 3., 0., 2., -13., 1.; 7., 8., 0., 3., 8., -26.];');
Q = [-9., 2., 4., 0., 1., 2.; 6., -25., 5., 3., 7., 4.; 1., 3., -4., 0., 0., 0.; 0., 0., 0., -8., 3., 5.; 7., 3., 0., 2., -13., 1.; 7., 8., 0., 3., 8., -26.];
disp('>>> vRin = [4.,2.,1.,0.,0.,3.];');
vRin = [4.,2.,1.,0.,0.,3.];
disp('>>> vRout = [6.,2.,0.,0.,3.,2.];');
vRout = [6.,2.,0.,0.,3.,2.];
disp('>>> Rin = diag(vRin);');
Rin = diag(vRin);
disp('>>> Rout = diag(vRout);');
Rout = diag(vRout);
lambd = sum(CTMCSolve(Q)*Rin);
disp('>>> [fld, flm] = FluidQueue(Q, Rin, Rout, ''flDistr'', (0.:0.1:1.), ''flMoms'', 5);');
[fld, flm] = FluidQueue(Q, Rin, Rout, 'flDistr', (0.:0.1:1.), 'flMoms', 5);
disp('>>> disp(fld);');
disp(fld);
disp('>>> disp(flm);');
disp(flm);
disp('>>> [alphap, Ap] = FluidQueue(Q, Rin, Rout, ''flDistrPH'');');
[alphap, Ap] = FluidQueue(Q, Rin, Rout, 'flDistrPH');
disp('>>> disp(alphap);');
disp(alphap);
disp('>>> disp(Ap);');
disp(Ap);
disp('>>> [alpha, A] = FluidQueue(Q, Rin, Rout, ''flDistrME'');');
[alpha, A] = FluidQueue(Q, Rin, Rout, 'flDistrME');
disp('>>> disp(alpha);');
disp(alpha);
disp('>>> disp(A);');
disp(A);
disp('>>> fldFromPH = CdfFromPH(alphap, Ap, (0.:0.1:1.));');
fldFromPH = CdfFromPH(alphap, Ap, (0.:0.1:1.));
disp('>>> disp(fldFromPH);');
disp(fldFromPH);
disp('>>> flmFromME = MomentsFromME(alpha, A, 5);');
flmFromME = MomentsFromME(alpha, A, 5);
disp('>>> disp(flmFromME);');
disp(flmFromME);
disp('>>> [std, stm] = FluidQueue(Q, Rin, Rout, ''stDistr'', (0.:0.1:1.), ''stMoms'', 5);');
[std, stm] = FluidQueue(Q, Rin, Rout, 'stDistr', (0.:0.1:1.), 'stMoms', 5);
disp('>>> disp(std);');
disp(std);
disp('>>> disp(stm);');
disp(stm);
disp('>>> [betap, Bp] = FluidQueue(Q, Rin, Rout, ''stDistrPH'');');
[betap, Bp] = FluidQueue(Q, Rin, Rout, 'stDistrPH');
disp('>>> disp(betap);');
disp(betap);
disp('>>> disp(Bp);');
disp(Bp);
disp('>>> [beta, B] = FluidQueue(Q, Rin, Rout, ''stDistrME'');');
[beta, B] = FluidQueue(Q, Rin, Rout, 'stDistrME');
disp('>>> disp(beta);');
disp(beta);
disp('>>> disp(B);');
disp(B);
disp('>>> stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));');
stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));
disp('>>> disp(stdFromPH);');
disp(stdFromPH);
disp('>>> stmFromME = MomentsFromME(beta, B, 5);');
stmFromME = MomentsFromME(beta, B, 5);
disp('>>> disp(stmFromME);');
disp(stmFromME);
disp('=== FluFluQueue ===')
disp('>>> Qin = [-2., 1., 1.; 2., -5., 3.; 4., 0., -4.];');
Qin = [-2., 1., 1.; 2., -5., 3.; 4., 0., -4.];
disp('>>> vRin = [3.,7.,0.];');
vRin = [3.,7.,0.];
disp('>>> Rin = diag(vRin);');
Rin = diag(vRin);
disp('>>> Qout = [-4., 1., 3.; 6., -8., 2.; 3., 7., -10.];');
Qout = [-4., 1., 3.; 6., -8., 2.; 3., 7., -10.];
disp('>>> vRout = [1.,7.,15.];');
vRout = [1.,7.,15.];
disp('>>> Rout = diag(vRout);');
Rout = diag(vRout);
lambd = sum(CTMCSolve(Qin)*Rin);
disp('>>> [fld, flm] = FluFluQueue(Qin, Rin, Qout, Rout, false, ''flDistr'', (0.:0.1:1.), ''flMoms'', 5);');
[fld, flm] = FluFluQueue(Qin, Rin, Qout, Rout, false, 'flDistr', (0.:0.1:1.), 'flMoms', 5);
disp('>>> disp(fld);');
disp(fld);
disp('>>> disp(flm);');
disp(flm);
disp('>>> [alphap, Ap] = FluFluQueue(Qin, Rin, Qout, Rout, false, ''flDistrPH'');');
[alphap, Ap] = FluFluQueue(Qin, Rin, Qout, Rout, false, 'flDistrPH');
disp('>>> disp(alphap);');
disp(alphap);
disp('>>> disp(Ap);');
disp(Ap);
disp('>>> [alpha, A] = FluFluQueue(Qin, Rin, Qout, Rout, false, ''flDistrME'');');
[alpha, A] = FluFluQueue(Qin, Rin, Qout, Rout, false, 'flDistrME');
disp('>>> disp(alpha);');
disp(alpha);
disp('>>> disp(A);');
disp(A);
disp('>>> fldFromPH = CdfFromPH(alphap, Ap, (0.:0.1:1.));');
fldFromPH = CdfFromPH(alphap, Ap, (0.:0.1:1.));
disp('>>> disp(fldFromPH);');
disp(fldFromPH);
disp('>>> flmFromME = MomentsFromME(alpha, A, 5);');
flmFromME = MomentsFromME(alpha, A, 5);
disp('>>> disp(flmFromME);');
disp(flmFromME);
disp('>>> [std, stm] = FluFluQueue(Qin, Rin, Qout, Rout, false, ''stDistr'', (0.:0.1:1.), ''stMoms'', 5);');
[std, stm] = FluFluQueue(Qin, Rin, Qout, Rout, false, 'stDistr', (0.:0.1:1.), 'stMoms', 5);
disp('>>> disp(std);');
disp(std);
disp('>>> disp(stm);');
disp(stm);
disp('>>> [betap, Bp] = FluFluQueue(Qin, Rin, Qout, Rout, false, ''stDistrPH'');');
[betap, Bp] = FluFluQueue(Qin, Rin, Qout, Rout, false, 'stDistrPH');
disp('>>> disp(betap);');
disp(betap);
disp('>>> disp(Bp);');
disp(Bp);
disp('>>> [beta, B] = FluFluQueue(Qin, Rin, Qout, Rout, false, ''stDistrME'');');
[beta, B] = FluFluQueue(Qin, Rin, Qout, Rout, false, 'stDistrME');
disp('>>> disp(beta);');
disp(beta);
disp('>>> disp(B);');
disp(B);
disp('>>> stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));');
stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));
disp('>>> disp(stdFromPH);');
disp(stdFromPH);
disp('>>> stmFromME = MomentsFromME(beta, B, 5);');
stmFromME = MomentsFromME(beta, B, 5);
disp('>>> disp(stmFromME);');
disp(stmFromME);
Iin = eye(size(Qin,1));
Iout = eye(size(Qout,1));
BuToolsVerbose = false;
[gamma, G] = FluidQueue(kron(Qin, Iout)+kron(Iin, Qout), kron(Rin, Iout), kron(Iin, Rout), 'stDistrME');
BuToolsVerbose = true;
msmall = MomentsFromME(beta, B, 5);
mlarge = MomentsFromME(gamma, G, 5);
disp('>>> [fld, flm] = FluFluQueue(Qin, Rin, Qout, Rout, true, ''flDistr'', (0.:0.1:1.), ''flMoms'', 5);');
[fld, flm] = FluFluQueue(Qin, Rin, Qout, Rout, true, 'flDistr', (0.:0.1:1.), 'flMoms', 5);
disp('>>> disp(fld);');
disp(fld);
disp('>>> disp(flm);');
disp(flm);
disp('>>> [alphap, Ap] = FluFluQueue(Qin, Rin, Qout, Rout, true, ''flDistrPH'');');
[alphap, Ap] = FluFluQueue(Qin, Rin, Qout, Rout, true, 'flDistrPH');
disp('>>> disp(alphap);');
disp(alphap);
disp('>>> disp(Ap);');
disp(Ap);
disp('>>> [alpha, A] = FluFluQueue(Qin, Rin, Qout, Rout, true, ''flDistrME'');');
[alpha, A] = FluFluQueue(Qin, Rin, Qout, Rout, true, 'flDistrME');
disp('>>> disp(alpha);');
disp(alpha);
disp('>>> disp(A);');
disp(A);
disp('>>> fldFromPH = CdfFromPH(alphap, Ap, (0.:0.1:1.));');
fldFromPH = CdfFromPH(alphap, Ap, (0.:0.1:1.));
disp('>>> disp(fldFromPH);');
disp(fldFromPH);
disp('>>> flmFromME = MomentsFromME(alpha, A, 5);');
flmFromME = MomentsFromME(alpha, A, 5);
disp('>>> disp(flmFromME);');
disp(flmFromME);
disp('>>> [std, stm] = FluFluQueue(Qin, Rin, Qout, Rout, true, ''stDistr'', (0.:0.1:1.), ''stMoms'', 5);');
[std, stm] = FluFluQueue(Qin, Rin, Qout, Rout, true, 'stDistr', (0.:0.1:1.), 'stMoms', 5);
disp('>>> disp(std);');
disp(std);
disp('>>> disp(stm);');
disp(stm);
disp('>>> [betap, Bp] = FluFluQueue(Qin, Rin, Qout, Rout, true, ''stDistrPH'');');
[betap, Bp] = FluFluQueue(Qin, Rin, Qout, Rout, true, 'stDistrPH');
disp('>>> disp(betap);');
disp(betap);
disp('>>> disp(Bp);');
disp(Bp);
disp('>>> [beta, B] = FluFluQueue(Qin, Rin, Qout, Rout, true, ''stDistrME'');');
[beta, B] = FluFluQueue(Qin, Rin, Qout, Rout, true, 'stDistrME');
disp('>>> disp(beta);');
disp(beta);
disp('>>> disp(B);');
disp(B);
disp('>>> stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));');
stdFromPH = CdfFromPH(betap, Bp, (0.:0.1:1.));
disp('>>> disp(stdFromPH);');
disp(stdFromPH);
disp('>>> stmFromME = MomentsFromME(beta, B, 5);');
stmFromME = MomentsFromME(beta, B, 5);
disp('>>> disp(stmFromME);');
disp(stmFromME);
Iin = eye(size(Qin,1));
Iout = eye(size(Qout,1));
BuToolsVerbose = false;
[gamma, G] = FluidQueue(kron(Qin, Iout)+kron(Iin, Qout), kron(Rin, Iout), kron(Iin, Rout), 'Q0', kron(Qin, Iout)+kron(Rin, pinv(Rout)*Qout), 'stDistrME');
BuToolsVerbose = true;
msmall = MomentsFromME(beta, B, 5);
mlarge = MomentsFromME(gamma, G, 5);

